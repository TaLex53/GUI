<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DocumentFormat.OpenXml</name>
    </assembly>
    <members>
        <member name="T:DocumentFormat.OpenXml.AlternateContent">
            <summary>
            Represents the mc:AlternateContent element of markup 
            compatibility.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContent.#ctor">
            <summary>
            Initializes a new instance of the AlternateContent 
            class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContent.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
            <summary>
            Initializes a new instance of the AlternateContent  
            class by using the supplied IEnumerable elements.
            </summary>
            <param name="childElements">
            Represents all child elements.
            </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContent.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the AlternateContent  
            class by using the supplied OpenXmlElement elements.
            </summary>
            <param name="childElements">
            Represents all child elements.
            </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContent.#ctor(System.String)">
            <param name="outerXml">The outer XML of the element.
            </param>
            <summary>
            Initializes a new instance of the AlternateContent  
            class by using the supplied string.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContent.MarkupCompatibilityNamespace">
            <summary>
            Gets a value that represents the markup compatibility 
            namespace.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContent.MarkupCompatibilityNamespaceId">
            <summary>
            Gets a value that represents the markup compatibility 
            namespace ID.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContent.TagName">
            <summary>
            Gets a value that represents the tag name of the 
            AlternateContent element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContent.LocalName">
            <summary>
            Gets a value that represents the local name of the 
            AlternateContent element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContent.AppendNewAlternateContentChoice">
            <summary>
            Appends a new child of type T:DocumentFormat.OpenXml.AlternateContentChoice
             to the current element.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContent.AppendNewAlternateContentFallback">
            <summary>
            Appends a new child of type T:DocumentFormat.OpenXml.AlternateContentFallback
             to the current element.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContent.CloneNode(System.Boolean)">
            <returns>The cloned node. </returns>
            <summary>
            When a node is overridden in a derived class, 
            CloneNode creates a duplicate of the node.
            </summary>
            <param name="deep">
            True to recursively clone the subtree under 
            the specified node; False to clone only the node 
            itself.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContent.ElementTypeId">
            <summary>
            The type ID of the element. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContent.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Indicates whether this element is available in a specific version of an Office Application.
            Always returns true since AlternateContent is allowed 
            in every version.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.AlternateContentChoice">
            <summary>
            Defines an mc:Choice element in mc:AlternateContent.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentChoice.#ctor">
            <summary>
            Initializes a new instance of the 
            AlternateContentChoice class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentChoice.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
            <summary>
            Initializes a new instance of the 
            AlternateContentChoice class by using the supplied 
            IEnumerable elements.
            </summary>
            <param name="childElements">
            Represents all child elements.
            </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentChoice.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the 
            AlternateContentChoice class by using the supplied 
            OpenXmlElement elements.
            </summary>
            <param name="childElements">
            Represents all child elements.
            </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentChoice.#ctor(System.String)">
            <param name="outerXml">
            The outer XML of the element.
            </param>
            <summary>
            Initializes a new instance of the 
            AlternateContentChoice class by using the supplied 
            string.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContentChoice.TagName">
            <summary>
            Gets a value that represents the tag name of the 
            Choice element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContentChoice.LocalName">
            <summary>
            Gets the local name of the Choice element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContentChoice.Requires">
            <summary>
            <para>Gets or sets a whitespace-delimited list of namespace prefixes that identify the
            namespaces a markup consumer needs in order to understand and select that 
            Choice and process the content.</para>
            <para> Represents the attribute in a schema. </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentChoice.CloneNode(System.Boolean)">
            <returns>The cloned node. </returns>
            <summary>
            When a node is overridden in a derived class, CloneNode creates a duplicate
             of the node.
            </summary>
            <param name="deep">
            True to recursively clone the subtree under the specified node; False
             to clone only the node itself.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContentChoice.ElementTypeId">
            <summary>
            The type ID of the element. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentChoice.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Indicates whether this element is available in a specific version of an Office Application.
            This method always returns true since AlternateContentFallback is available in every version.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.AlternateContentFallback">
            <summary>
            Defines a mc:Fallback element in mc:AlternateContent.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentFallback.#ctor">
            <summary>
            Initializes a new instance of the AlternateContentFallback class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentFallback.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
            <summary>
            Initializes a new instance of the AlternateContentFallback class
             by using the supplied IEnumerable elements.
            </summary>
            <param name="childElements">
            Represents all child elements.
            </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentFallback.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the AlternateContentFallback class
             by using the supplied OpenXmlElement elements.
            </summary>
            <param name="childElements">
            Represents all child elements.
            </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentFallback.#ctor(System.String)">
            <param name="outerXml">The outer XML of the element.</param>
            <summary>
            Initializes a new instance of the AlternateContentFallback class
             by using the supplied string.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContentFallback.TagName">
            <summary>
            Gets a value that represents the tag name of the AlternateContentFallback element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContentFallback.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentFallback.CloneNode(System.Boolean)">
            <returns>The cloned node. </returns>
            <summary>
            When a node is overridden in a derived class, CloneNode creates a
             duplicate of the node.
            </summary>
            <param name="deep">
            True to recursively clone the subtree under the specified node; False
             to clone only the node itself.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.AlternateContentFallback.ElementTypeId">
            <summary>
            The type ID of the element. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AlternateContentFallback.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Indicates whether this element is available in a specific version of an Office Application.
            This method always return true since AlternateContentFallback is available in every version.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.MarkupCompatibilityAttributes">
            <summary>
            Defines the Markup Compatibility Attributes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.MarkupCompatibilityAttributes.Ignorable">
            <summary>
            Gets or sets a whitespace-delimited list of prefixes, where each
             prefix identifies an ignorable namespace.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.MarkupCompatibilityAttributes.ProcessContent">
            <summary>
            Gets or sets a whitespace-delimited list of element-qualified names
             that identify the expanded names of elements. The content of the
             elements shall be processed, even if the elements themselves are
             ignored.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.MarkupCompatibilityAttributes.PreserveElements">
            <summary>
            Gets or sets a whitespace-delimited list of element qualified names
             that identify the expanded names of elements. The elements are suggested
             by a markup producer for preservation by markup editors, even if
             the elements themselves are ignored.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.MarkupCompatibilityAttributes.PreserveAttributes">
            <summary>
            Gets or sets a whitespace-delimited list of attribute qualified names
             that identify expanded names of attributes. The attributes were
             suggested by a markup producer for preservation by markup editors.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.MarkupCompatibilityAttributes.MustUnderstand">
            <summary>
            Gets or sets a whitespace-delimited list of prefixes that identify
             a set of namespace names.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.MCContext.PushMCAttributes2(DocumentFormat.OpenXml.MarkupCompatibilityAttributes,DocumentFormat.OpenXml.MCContext.LookupNamespace)">
            <summary>
            This method is for MC validation use. Only push Ignorable and ProcessContent.
            </summary>
            <param name="attr"></param>
            <param name="lookupNamespaceDelegate"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.MCContext.PopMCAttributes2">
            <summary>
            This method is for MC validation use only.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.MCContext.OnInvalidValue">
            <summary>
            This method is called by ParseQNameList() and ParsePrefixList().
            </summary>
            <param name="value">The value of the attribute.</param>
            <returns>True to stop parsing; False to continue.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.MCContext.OnMcContextError(System.String)">
            <summary>
            This method is called by ParseIgnorable() and ParseProcessContent().
            </summary>
            <param name="value">The value of the attribute.</param>
            <returns>True to stop parsing; False to continue.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.InvalidMCContentException">
            <summary>
            The exception that is thrown for Markup Compatibility content errors.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.InvalidMCContentException.#ctor">
            <summary>
            Initializes a new instance of the InvalidMCContentException class. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.InvalidMCContentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidMCContentException class with a specified error message. 
            </summary>
            <param name="message">The message that describes the error. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.InvalidMCContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidMCContentException class with serialized data. 
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.InvalidMCContentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidMCContentException class with a specified error message and a reference to the inner exception that is the cause of this exception. 
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.NamespaceNotUnderstandException">
            <summary>
            The exception that is thrown for Markup Compatibility content errors.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.NamespaceNotUnderstandException.#ctor">
            <summary>
            Initializes a new instance of the InvalidMCContentException class. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.NamespaceNotUnderstandException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidMCContentException class with a specified error message. 
            </summary>
            <param name="message">The message that describes the error. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.NamespaceNotUnderstandException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the InvalidMCContentException class with serialized data. 
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.NamespaceNotUnderstandException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidMCContentException class with a specified error message and a reference to the inner exception that is the cause of this exception. 
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.FileFormatVersions">
            <summary>
            Defines the Office Open XML file format version.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.FileFormatVersions.None">
            <summary>
            Represents an invalid value which will cause an exception.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.FileFormatVersions.Office2007">
            <summary>
            Represents Microsoft Office 2007.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.FileFormatVersions.Office2010">
            <summary>
            Represents Microsoft Office 2010.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.FileFormatVersions.Office2013">
            <summary>
            Represents Microsoft Office 2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.FileFormatExtension.Includes(DocumentFormat.OpenXml.FileFormatVersions,DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Determines whether the source FileFormatVersions includes the target FileFormatVersions. 
            </summary>
            <param name="source">The source FileFormatVersions to be tested.</param>
            <param name="target">The target FileFormatVersions be tested against.</param>
            <returns>Returns true when (source &amp; target) == target.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.FileFormatExtension.ThrowExceptionIfFileFormatNotSupported(DocumentFormat.OpenXml.FileFormatVersions,System.String)">
            <summary>
            Throws an ArgumentOutOfRangeException if the specified FileFormatVersions is not supported.
            </summary>
            <param name="fileFormat">The specified FileFormatVersions.</param>
            <param name="parameterName">The name of the parameter for ArgumentOutOfRangeException.</param>
            <remarks>
            </remarks>
        </member>
        <member name="T:DocumentFormat.OpenXml.OfficeAvailabilityAttribute">
            <summary>
            Defines an OfficeAvailabilityAttribute class to indicate whether the property is available in a specific version of an Office application.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OfficeAvailabilityAttribute.OfficeVersion">
            <summary>
            Gets the Office version of the available property.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OfficeAvailabilityAttribute.#ctor(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Initializes a new instance of the OfficeAvailabilityAttribute class.
            </summary>
            <param name="officeVersion">The Office version where this class or property is available. 
            If there is more than one version, use bitwise OR to specify multiple versions.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship">
            <summary>
            Represents an internal reference relationship to a DataPart element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship.#ctor">
            <summary>
            Initializes a new instance of the DataPartReferenceRelationship class.
            </summary>
            <remarks>
            A call to Initialize() must be made after calling this constructor.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship.#ctor(DocumentFormat.OpenXml.Packaging.DataPart,System.String,System.String)">
            <summary>
            Initializes a new instance of the DataPartReferenceRelationship class using the supplied
            DataPart, relationship type, and relationship ID.
            </summary>
            <param name="dataPart">The target DataPart of the reference relationship.</param>
            <param name="relationshipType">The relationship type of the reference relationship.</param>
            <param name="id">The relationship ID.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship.DataPart">
            <summary>
            Gets the referenced target DataPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship.Initialize(DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer,DocumentFormat.OpenXml.Packaging.DataPart,System.String,System.String)">
            <summary>
            Initializes the current instance of the DataPartRelationship class.
            </summary>
            <param name="containter">The owner <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer"/> that holds the <see cref="T:DocumentFormat.OpenXml.Packaging.ReferenceRelationship"/>.</param>
            <param name="dataPart">The target DataPart of the reference relationship.</param>
            <param name="relationshipType">The relationship type of the reference relationship.</param>
            <param name="id">The relationship ID.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship.CreateDataPartReferenceRelationship(DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer,DocumentFormat.OpenXml.Packaging.DataPart,System.String,System.String)">
            <summary>
            Creates a new instance of the DataPartRelationship class based on the relationship type.
            </summary>
            <param name="containter">The owner <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer"/> that holds the <see cref="T:DocumentFormat.OpenXml.Packaging.ReferenceRelationship"/>.</param>
            <param name="dataPart">The target DataPart of the reference relationship.</param>
            <param name="relationshipType">The relationship type of the reference relationship.</param>
            <param name="id">The relationship ID.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship">
            <summary>
            Represents an internal media reference relationship to a MediaDataPart element.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship.RelationshipTypeConst">
            <summary>
            Represents the fixed value of the RelationshipType.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship.MediaReferenceRelationshipType">
            <summary>
            Gets the source relationship type for a media reference. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship.#ctor">
            <summary>
            Initializes a new instance of the MediaReferenceRelationship class.
            </summary>
            <remarks>
            A call to Initialize() must be made after calling this constructor.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship.#ctor(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Initializes a new instance of the MediaReferenceRelationship class using 
            the supplied MediaDataPart and relationship ID.
            </summary>
            <param name="mediaDataPart">The target DataPart of the reference relationship.</param>
            <param name="id">The relationship ID.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship.RelationshipType">
            <summary>
            Gets the relationship type for a media reference.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship">
            <summary>
            Represents an internal audio reference relationship to a MediaDataPart element.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship.RelationshipTypeConst">
            <summary>
            Represents the fixed value of the RelationshipType.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship.AudioReferenceRelationshipType">
            <summary>
            Gets the source relationship type for an audio reference. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship.#ctor">
            <summary>
            Initializes a new instance of the AudioReferenceRelationship.
            </summary>
            <remarks>
            A call to Initialize() must be made after calling this constructor.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship.#ctor(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Initializes a new instance of the AudioReferenceRelationship using the supplied
            MediaDataPart and relationship ID.
            </summary>
            <param name="mediaDataPart">The target DataPart of the reference relationship.</param>
            <param name="id">The relationship ID.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship.RelationshipType">
            <summary>
            Gets the relationship type for an audio reference.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship">
            <summary>
            Represents an internal video reference relationship to a MediaDataPart element.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship.RelationshipTypeConst">
            <summary>
            Represents the fixed value of the RelationshipType.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship.VideoReferenceRelationshipType">
            <summary>
            Gets the source relationship type for an audio reference. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship.#ctor">
            <summary>
            Initializes a new instance of the VideoReferenceRelationship class.
            </summary>
            <remarks>
            A call to Initialize() must be made after calling this constructor.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship.#ctor(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Initializes a new instance of the VideoReferenceRelationship class using the supplied 
            MediaDataPart and relationship ID.
            </summary>
            <param name="mediaDataPart">The target DataPart of the reference relationship.</param>
            <param name="id">The relationship ID.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship.RelationshipType">
            <summary>
            Gets the relationship type for a video reference.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.IFixedContentTypePart">
            <summary>
            Called from constructors of derived parts to initialize the IFixedContentTypePart interface. All derived parts must be parts that have fixed content type. 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.DataPart">
            <summary>
            Represents the type of part referenced by a <see cref="T:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship"/>.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DataPart.#ctor">
            <summary>
            Initializes a new instance of the DataPart class. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DataPart.OpenXmlPackage">
            <summary>
            Gets the OpenXmlPackage which contains the current part.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DataPart.Uri">
            <summary>
            Gets the internal part path in the package.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DataPart.GetDataPartReferenceRelationships">
            <summary>
            Enumerates all <see cref="T:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship" />s that reference the current data part.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DataPart.GetStream">
            <summary>
            Returns the content data stream of the current part. 
            </summary>
            <returns>The content data stream of the current part. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DataPart.GetStream(System.IO.FileMode)">
            <summary>
            Returns the content stream that was opened using a specified I/O FileMode. 
            </summary>
            <param name="mode">The I/O mode to be used to open the content stream.</param>
            <returns>The content stream of the part. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DataPart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Returns the content stream of the part that was opened by using a specified FileMode and FileAccess. 
            </summary>
            <param name="mode">The I/O mode to be used to open the content stream.</param>
            <param name="access">The access permissions to be used to open the content stream.</param>
            <returns>The content stream of the part. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DataPart.FeedData(System.IO.Stream)">
            <summary>
            Feeds data into the part stream.
            The stream of the part will be truncated at first.
            </summary>
            <param name="sourceStream">The source stream to be read from.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="sourceStream"/> is a null reference.</exception>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DataPart.ContentType">
            <summary>
            Gets the content type (MIME type) of the data in the part.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DataPart.PackagePart">
            <summary>
            Gets the internal metro PackagePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DataPart.TargetPath">
            <summary>
            The internal path to be used for the part name.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DataPart.TargetName">
            <summary>
            The file base name to be used for the part name in the package.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DataPart.TargetFileExtension">
            <summary>
            The file extension to be used for the part in the package.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DataPart.ThrowIfObjectDisposed">
            <summary>
            Indicates whether the object is destroyed (deleted from the package).
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.MediaDataPart">
            <summary>
            Represents a media (Audio, Video) data part in the document.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MediaDataPart.#ctor">
            <summary>
            Initializes a new instance of the MediaDataPart class. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MediaDataPart.TargetPath">
            <summary>
            The internal path to be used for the part name.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MediaDataPart.TargetName">
            <summary>
            The file base name to be used for the part name in the package
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MediaDataPart.TargetFileExtension">
            <summary>
            The file extension to be used for the part in the package.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.MediaDataPartType">
            <summary>
            Defines part media types.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Aiff">
            <summary>
            Audio Interchange File Format (.aiff)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Midi">
            <summary>
            MIDI Audio (.mid)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Mp3">
            <summary>
            MP3 (.mp3)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.MpegUrl">
            <summary>
            MP3 Playlist File (.m3u)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Wav">
            <summary>
            WAV audio (.wav)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Wma">
            <summary>
            Windows Media Audio File (.wma)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.MpegAudio">
            <summary>
            Mpeg audio (.mpeg)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.OggAudio">
            <summary>
            Ogg Vorbis (.ogg)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Asx">
            <summary>
            Advanced Stream Redirector File (.asx)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Avi">
            <summary>
            Audio Video Interleave File (.avi)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Mpg">
            <summary>
            MPEG 1 System Stream (.mpg)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.MpegVideo">
            <summary>
            MPEG 1 System Stream (.mpeg)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Wmv">
            <summary>
            Windows Media File (.wmv)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Wmx">
            <summary>
            Windows Media Player A/V Shortcut (.wmx)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Wvx">
            <summary>
            Windows Media Redirector (.wvx)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.Quicktime">
            <summary>
            QuickTime video (.mov)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.OggVideo">
            <summary>
             Ogg Stream (.ogg)
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MediaDataPartType.VC1">
            <summary>
            VC-1 Stream (.wmv)
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.OpenXmlPart">
            <summary>
            Represents an abstract base class for all OpenXml parts.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.#ctor">
            <summary>
            OpenXmlPart constructor
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.OpenXmlPackage">
            <summary>
            Represents a part that is in the OpenXmlPackage container.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.Uri">
            <summary>
            Represents the internal part path in the package.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.GetParentParts">
            <summary>
            Enumerates all parents that reference this part anywhere in the document.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.GetStream">
            <summary>
            Returns the part content data stream. 
            </summary>
            <returns>The content data stream for the part. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.GetStream(System.IO.FileMode)">
            <summary>
            Returns the content stream that was opened using a specified I/O FileMode. 
            </summary>
            <param name="mode">The I/O mode to be used to open the content stream.</param>
            <returns>The content stream of the part. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Returns the part content stream that was opened using a specified FileMode and FileAccess. 
            </summary>
            <param name="mode">The I/O mode to be used to open the content stream.</param>
            <param name="access">The access permissions to be used to open the content stream.</param>
            <returns>The content stream of the part. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.FeedData(System.IO.Stream)">
            <summary>
            Feeds data into the part stream.
            The stream of the part will be truncated at first.
            </summary>
            <param name="sourceStream">The source stream to be read from.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when "sourceStream" is a null reference.</exception>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.ContentType">
            <summary>
            Represents the content type (MIME type) of the content data in the part.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.RelationshipType">
            <summary>
            The relationship type of the part.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.ValidateXml(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
            <summary>
            Validates the XML content of the part by using the specified schema.
            </summary>
            <param name="schemas">The set of XML schemas to be used.</param>
            <param name="validationEventHandler">ValidationEventHandler for validation events.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.ValidateXml(System.String,System.Xml.Schema.ValidationEventHandler)">
            <summary>
            Validates the XML content of the part by using the specified schema.
            </summary>
            <param name="schemaFile">The XML schema to be used.</param>
            <param name="validationEventHandler">ValidationEventHandler for validation events.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.RootElement">
            <summary>
            Gets the root element of the current part.
            Returns null when the current part is empty or is not and XML content type.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.PackagePart">
            <summary>
            The internal metro PackagePart element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.MaxCharactersInPart">
            <summary>
            Gets a value that indicates the maximum allowable number of characters in an Open XML part. A zero (0) value specifies that the part can have an unlimited number of characters. A non-zero value specifies the maximum allowable number of characters in the part.
            </summary>
            <remarks>
            This property allows you to mitigate denial of service attacks where the attacker submits package with extremely large Opexn XML part. By limiting the size of a part, you can detect the attack and recover reliably.
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.IsContentTypeFixed">
            <summary>
            Indicates whether the ContentType for the current part is fixed. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.TargetPath">
            <summary>
            Gets the internal path to be used for the part name.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.TargetPathOfWord">
            <summary>
            Gets the internal path (Word specific TargetPath) to be used for the part name.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.TargetPathOfExcel">
            <summary>
            Gets the internal path (Excel specific TargetPath) to be used for the part name.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.TargetPathOfPPT">
            <summary>
            Gets the internal path (PPT specific TargetPath) to be used for the part name.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.TargetName">
            <summary>
            Gets the file base name to be used for the part name in the package.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.TargetFileExtension">
            <summary>
            Gets the file extension to be used for the part in the package.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart._rootElement">
            <summary>
            Gets or sets the root element field.
            Do not call this property outside of OpenXmlPart.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the part does not have root element defined.</exception>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.PartRootElement">
            <summary>
            Gets the root element of the current part.
            </summary>
            <remarks>Returns null if the part is not a defined XML part.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Indicates whether the current part is available in a specific version of an Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPart.IsRootElementLoaded">
            <summary>
            Returns true when the root element is loaded from the part or it has been set.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.SetPartRootElementToNull">
            <summary>
            Sets the PartRootElement to null. 
            </summary>
            <returns></returns>
            <remarks>
            Used by validator. To releaase the DOM and so the memory can be GC'ed.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.LoadDomTree``1">
            <summary>
            Load the DOM tree. And associate the DOM tree with this part.
            Only used for generated part classes which derive from this OpenXmlBasePart.
            </summary>
            <typeparam name="T">The type of the part's root element.</typeparam>
            <remarks>
            The ._rootElement will be assigned if the DOM is loaded.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.SetDomTree(DocumentFormat.OpenXml.OpenXmlPartRootElement)">
            <summary>
            Set the RootElement to be the given partRootElement. 
            Only used for generated part classes which derive from this OpenXmlBasePart.
            </summary>
            <param name="partRootElement">The given partRootElement. Can be null.</param>
            <remarks>
            </remarks>
            <exception cref="T:System.ArgumentException">Thrown when the part's root element has already be associated with another OpenXmlPart.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPart.ThrowIfObjectDisposed">
            <summary>
            Indicates whether the object is already disposed.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.RelationshipCollection">
            <summary>
            Defines the base class for PackageRelationshipPropertyCollection and PackagePartRelationshipPropertyCollection objects.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RelationshipCollection.Build">
            <summary>
            This method fills the collection with PackageRels from the PackageRelationshipCollection that is given in the sub class.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.PackageRelationshipPropertyCollection">
            <summary>
            Represents a collection of relationships that are obtained from the package.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.PackagePartRelationshipPropertyCollection">
            <summary>
            Represents a collection of relationships that are obtained from the package part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackage">
            <summary>
            Represents a base class for strong typed Open XML document classes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlPackage class. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.OpenCore(System.IO.Packaging.Package)">
            <summary>
            Initializes a new instance of the OpenXmlPackage class using the supplied Open XML package. 
            </summary>
            <param name="package">The target package for the OpenXmlPackage class.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when package is a null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when package is not opened with read access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not a valid Open XML document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.CreateCore(System.IO.Packaging.Package)">
            <summary>
            Initializes a new instance of the OpenXmlPackage class with access to a specified Open XML package. 
            </summary>
            <param name="package">The target package for the OpenXmlPackage class.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when package is a null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when package is not opened with write access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not a valid Open XML document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.OpenCore(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenXmlPackage class using the supplied I/O stream class.
            </summary>
            <param name="stream">The I/O stream on which to open the package.</param>
            <param name="readWriteMode">Indicates whether or not the package is in read/write mode. False indicates read-only mode.</param>
            <exception cref="T:System.IO.IOException">Thrown when the specified stream is write-only. The package to open requires read or read/write permission.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.CreateCore(System.IO.Stream)">
            <summary>
            Initializes a new instance of the OpenXmlPackage class using the supplied I/O stream class.
            </summary>
            <param name="stream">The I/O stream on which to open the package.</param>
            <exception cref="T:System.IO.IOException">Thrown when the specified stream is read-only. The package to open requires write or read/write permission. </exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.OpenCore(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenXmlPackage class using the specified file.
            </summary>
            <param name="path">The path and file name of the target package for the OpenXmlPackage.</param>
            <param name="readWriteMode">Indicates whether or not the package is in read/write mode. False for read only mode.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.CreateCore(System.String)">
            <summary>
            Initializes a new instance of the OpenXmlPackage class using the supplied file.
            </summary>
            <param name="path">The path and file name of the target package for the OpenXmlPackage.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Load">
            <summary>
            Loads the package. This method must be called in the constructor of a derived class.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Package">
            <summary>
            Gets the package of the document.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.FileOpenAccess">
            <summary>
            Gets the FileAccess setting for the document. 
            The current I/O access settings are: Read, Write, or ReadWrite. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.CompressionOption">
            <summary>
            Gets or sets the compression level for the content of the new part. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.PackageProperties">
            <summary>
            Gets the core package properties of the Open XML document.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.PartExtensionProvider">
            <summary>
            Gets a PartExtensionProvider part which provides a mapping from ContentType to part extension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.MaxCharactersInPart">
            <summary>
            Gets or sets a value that indicates the maximum allowable number of characters in an Open XML part. A zero (0) value indicates that there are no limits on the size of the part. A non-zero value specifies the maximum size, in characters.
            </summary>
            <remarks>
            This property allows you to mitigate denial of service attacks where the attacker submits a package with an extremely large Open XML part. By limiting the size of a part, you can detect the attack and recover reliably.
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.DataParts">
            <summary>
            Enumerates all the <see cref="T:DocumentFormat.OpenXml.Packaging.DataPart"/> parts in the document package.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.AddPart``1(``0)">
            <summary>
            Adds the specified part to the document.
            Use the returned part to operate on the part added to the document.
            </summary>
            <typeparam name="T">A class that is derived from the OpenXmlPart class.</typeparam>
            <param name="part">The part to add to the document.</param>
            <returns>The added part in the document. Differs from the part that was passed as an argument.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the part is not allowed to be added.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the part type already exists and multiple instances of the part type is not allowed.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.DeletePartsRecursivelyOfType``1">
            <summary>
            Deletes all the parts with the specified part type from the package recursively.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Close">
            <summary>
            Saves and closes the OpenXml package and all underlying part streams.  
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.CreateMediaDataPart(System.String)">
            <summary>
            Creates a new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> part in the document package.
            </summary>
            <param name="contentType">The content type of the new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> part.</param>
            <returns>The added <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> part.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="contentType"/> is a null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.CreateMediaDataPart(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> part in the document package.
            </summary>
            <param name="contentType">The content type of the new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> part.</param>
            <param name="extension">The part name extension (.dat, etc.) of the new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> part.</param>
            <returns>The added <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> part.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="contentType"/> is a null reference.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="extension"/> is a null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.CreateMediaDataPart(DocumentFormat.OpenXml.Packaging.MediaDataPartType)">
            <summary>
            Creates a new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> part in the document package.
            </summary>
            <param name="mediaDataPartType">The content type of the new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> part.</param>
            <returns>The added <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.DeletePart(DocumentFormat.OpenXml.Packaging.DataPart)">
            <summary>
            Deletes the specified <see cref="T:DocumentFormat.OpenXml.Packaging.DataPart"/> from the document package.
            </summary>
            <param name="dataPart">The <see cref="T:DocumentFormat.OpenXml.Packaging.DataPart"/> to be deleted.</param>
            <returns>Returns true if the part is successfully removed; otherwise returns false. This method also returns false if the part was not found or the parameter is null.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="dataPart"/> is referenced by another part in the document package.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Validate(DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationSettings)">
            <summary>
            Validates the package. This method does not validate the XML content in each part.
            </summary>
            <param name="validationSettings">The OpenXmlPackageValidationSettings for validation events.</param>
            <remarks>If validationSettings is null or no EventHandler is set, the default behavior is to throw an OpenXmlPackageException on the validation error. </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Validate(DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationSettings,DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Validates the package. This method does not validate the XML content in each part.
            </summary>
            <param name="validationSettings">The OpenXmlPackageValidationSettings for validation events.</param>
            <param name="fileFormatVersion">The target file format version.</param>
            <remarks>If validationSettings is null or no EventHandler is set, the default behavior is to throw an OpenXmlPackageException on the validation error. </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.ReserveUri(System.String,System.Uri)">
            <summary>
            Reserves the URI of the loaded part.
            </summary>
            <param name="contentType"></param>
            <param name="partUri"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.GetUniquePartUri(System.String,System.Uri,System.String,System.String,System.String)">
            <summary>
            Gets a unique part URI for the newly created part.
            </summary>
            <param name="contentType">The content type of the part.</param>
            <param name="parentUri">The URI of the parent part.</param>
            <param name="targetPath"></param>
            <param name="targetName"></param>
            <param name="targetExt"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.GetUniquePartUri(System.String,System.Uri,System.Uri)">
            <summary>
            Gets a unique part URI for the newly created part.
            </summary>
            <param name="contentType">The content type of the part.</param>
            <param name="parentUri">The URI of the parent part.</param>
            <param name="targetUri"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.ThrowIfObjectDisposed">
            <summary>
            Thrown if an object is disposed.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Dispose(System.Boolean)">
            <summary>
            Flushes and saves the content, closes the document, and releases all resources. 
            </summary>
            <param name="disposing">Specify true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Dispose">
            <summary>
            Flushes and saves the content, closes the document, and releases all resources. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.MarkupCompatibilityProcessSettings">
            <summary>
            Gets the markup compatibility settings applied at loading time.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.AutoSave">
            <summary>
            Gets a flag that indicates whether the parts should be saved when disposed. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.MainPartRelationshipType">
            <summary>
            Gets the relationship type of the main part.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.MainPartContentType">
            <summary>
            Gets or sets the content type of the main part of the package.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.ValidMainPartContentTypes">
            <summary>
            Gets the list of valid content types for the main part.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.IsValidMainPartContentType(System.String)">
            <summary>
            Determines whether the content type is valid for the main part of the package.
            </summary>
            <param name="contentType">The content type.</param>
            <returns>Returns true if the content type is valid.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.ChangeDocumentTypeInternal``1">
            <summary>
            Changes the type of the document. 
            </summary>
            <typeparam name="T">The type of the document's main part.</typeparam>
            <remarks>The MainDocumentPart will be changed.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.DeleteUnusedDataPartOnClose">
            <summary>
            Deletes all DataParts that are not referenced by any media, audio, or video reference relationships.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.FindDataPart(System.Uri)">
            <summary>
            Finds the DataPart that has the specified part URI.
            </summary>
            <param name="partUri">The part URI.</param>
            <returns>Returns null if there is no DataPart with the specified URI.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Save">
            <summary>
            Saves the contents of all parts and relationships that are contained
            in the OpenXml package, if FileOpenAccess is ReadWrite.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.SaveAs(System.String)">
            <summary>
            Saves the contents of all parts and relationships that are contained
            in the OpenXml package to the specified file. Opens the saved document
            using the same settings that were used to open this OpenXml package.
            </summary>
            <remarks>
            Calling SaveAs(string) is exactly equivalent to calling Clone(string).
            This method is essentially provided for convenience.
            </remarks>
            <param name="path">The path and file name of the target document.</param>
            <returns>The cloned OpenXml package</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Clone">
            <summary>
            Creates an editable clone of this OpenXml package, opened on a
            <see cref="T:System.IO.MemoryStream"/> with expandable capacity and using
            default OpenSettings.
            </summary>
            <returns>The cloned OpenXml package.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Clone(System.IO.Stream)">
            <summary>
            Creates a clone of this OpenXml package, opened on the given stream.
            The cloned OpenXml package is opened with the same settings, i.e.,
            FileOpenAccess and OpenSettings, as this OpenXml package.
            </summary>
            <param name="stream">The IO stream on which to open the OpenXml package.</param>
            <returns>The cloned OpenXml package.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Clone(System.IO.Stream,System.Boolean)">
            <summary>
            Creates a clone of this OpenXml package, opened on the given stream.
            The cloned OpenXml package is opened with the same OpenSettings as
            this OpenXml package.
            </summary>
            <param name="stream">The IO stream on which to open the OpenXml package.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>The cloned OpenXml package.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Clone(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a clone of this OpenXml package, opened on the given stream.
            </summary>
            <param name="stream">The IO stream on which to open the OpenXml package.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>The cloned OpenXml package.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.CreateClone(System.IO.Stream)">
            <summary>
            Creates a new OpenXmlPackage on the given stream.
            </summary>
            <param name="stream">The stream on which the concrete OpenXml package will be created.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.OpenClone(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Opens the cloned OpenXml package on the given stream.
            </summary>
            <param name="stream">The stream on which the cloned OpenXml package will be opened.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Clone(System.String)">
            <summary>
            Creates a clone of this OpenXml package opened from the given file
            (which will be created by cloning this OpenXml package).
            The cloned OpenXml package is opened with the same settings, i.e.,
            FileOpenAccess and OpenSettings, as this OpenXml package.
            </summary>
            <param name="path">The path and file name of the target document.</param>
            <returns>The cloned document.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Clone(System.String,System.Boolean)">
            <summary>
            Creates a clone of this OpenXml package opened from the given file
            (which will be created by cloning this OpenXml package).
            The cloned OpenXml package is opened with the same OpenSettings as
            this OpenXml package.
            </summary>
            <param name="path">The path and file name of the target document.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>The cloned document.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Clone(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a clone of this OpenXml package opened from the given file (which
            will be created by cloning this OpenXml package).
            </summary>
            <param name="path">The path and file name of the target document.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>The cloned document.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.CreateClone(System.String)">
            <summary>
            Creates a new OpenXml package on the given file.
            </summary>
            <param name="path">The path and file name of the target OpenXml package.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.OpenClone(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Opens the cloned OpenXml package on the given file.
            </summary>
            <param name="path">The path and file name of the target OpenXml package.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Clone(System.IO.Packaging.Package)">
            <summary>
            Creates a clone of this OpenXml package, opened on the specified instance
            of Package. The clone will be opened with the same OpenSettings as this
            OpenXml package.
            </summary>
            <param name="package">The specified instance of Package.</param>
            <returns>The cloned OpenXml package.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Clone(System.IO.Packaging.Package,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a clone of this OpenXml package, opened on the specified instance
            of Package.
            </summary>
            <param name="package">The specified instance of Package.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>The cloned OpenXml package.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.CreateClone(System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of OpenXmlPackage on the specified instance
            of Package.
            </summary>
            <param name="package">The specified instance of Package.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.ToFlatOpcString">
            <summary>
            Converts an OpenXml package in OPC format to string in Flat OPC format.
            </summary>
            <returns>The OpenXml package in Flat OPC format.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.ToFlatOpcDocument">
            <summary>
            Converts an OpenXml package in OPC format to an <see cref="T:System.Xml.Linq.XDocument"/>
            in Flat OPC format.
            </summary>
            <returns>The OpenXml package in Flat OPC format.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.ToFlatOpcDocument(System.Xml.Linq.XProcessingInstruction)">
            <summary>
            Converts an OpenXml package in OPC format to an <see cref="T:System.Xml.Linq.XDocument"/>
            in Flat OPC format.
            </summary>
            <param name="instruction">The processing instruction.</param>
            <returns>The OpenXml package in Flat OPC format.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.GetContentsAsXml(System.IO.Packaging.PackagePart)">
            <summary>
            Gets the <see cref="T:System.IO.Packaging.PackagePart"/>'s contents as an <see cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="part">The package part.</param>
            <returns>The corresponding <see cref="T:System.Xml.Linq.XElement"/>.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.FromFlatOpcDocumentCore(System.Xml.Linq.XDocument,System.IO.Stream)">
            <summary>
            Converts an <see cref="T:System.Xml.Linq.XDocument"/> in Flat OPC format to an OpenXml package
            stored on a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="document">The document in Flat OPC format.</param>
            <param name="stream">The <see cref="T:System.IO.Stream"/> on which to store the OpenXml package.</param>
            <returns>The <see cref="T:System.IO.Stream"/> containing the OpenXml package.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.FromFlatOpcDocumentCore(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Converts an <see cref="T:System.Xml.Linq.XDocument"/> in Flat OPC format to an OpenXml package
            stored in a file.
            </summary>
            <param name="document">The document in Flat OPC format.</param>
            <param name="path">The path and file name of the file in which to store the OpenXml package.</param>
            <returns>The path and file name of the file containing the OpenXml package.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.FromFlatOpcDocumentCore(System.Xml.Linq.XDocument,System.IO.Packaging.Package)">
            <summary>
            Converts an <see cref="T:System.Xml.Linq.XDocument"/> in Flat OPC format to an OpenXml package
            stored in a <see cref="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Package"/>.
            </summary>
            <param name="document">The document in Flat OPC format.</param>
            <param name="package">The <see cref="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Package"/> in which to store the OpenXml package.</param>
            <returns>The <see cref="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Package"/> containing the OpenXml package.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationSettings">
            <summary>
            Specifies event handlers that will handle OpenXmlPackage validation events and the OpenXmlPackageValidationEventArgs. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationSettings.GetEventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <returns></returns>
        </member>
        <member name="E:DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationSettings.EventHandler">
            <summary>
            Represents the callback method that will handle OpenXmlPackage validation events and the OpenXmlPackageValidationEventArgs.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationSettings.FileFormat">
            <summary>
            Gets or sets the file format version that the validation is targeting.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationEventArgs">
            <summary>
            Represents the Open XML package validation events.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationEventArgs.Message">
            <summary>
            Gets the message string of the event.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationEventArgs.PartClassName">
            <summary>
            Gets the class name of the part.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationEventArgs.SubPart">
            <summary>
            Gets the part that caused the event.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationEventArgs.Part">
            <summary>
            Gets the part in which to process the validation.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationEventArgs.DataPartReferenceRelationship">
            <summary>
            The DataPartReferenceRelationship that caused the event.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">
            <summary>
            Represents an Open XML package exception class for errors.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlPackageException class. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OpenXmlPackageException class using the supplied error message. 
            </summary>
            <param name="message">The message that describes the error. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the OpenXmlPackageException class using the supplied serialized data. 
            </summary>
            <param name="info">The serialized object data about the exception being thrown.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the OpenXmlPackageException class using the supplied error message and a reference to the inner exception that caused the current exception. 
            </summary>
            <param name="message">The error message that indicates the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.OpenSettings">
            <summary>
            Represents the settings when opening a document.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenSettings.AutoSave">
            <summary>
            Gets or sets a value that indicates whether or not to auto save document modifications.
            The default value is true.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenSettings.MarkupCompatibilityProcessSettings">
            <summary>
            Gets or sets the value of the markup compatibility processing mode.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenSettings.MaxCharactersInPart">
            <summary>
            Gets or sets a value that indicates the maximum number of allowable characters in an Open XML part. A zero (0) value indicates that there are no limits on the size of the part. A non-zero value specifies the maximum size, in characters.
            </summary>
            <remarks>
            This property allows you to mitigate denial of service attacks where the attacker submits a package with an extremely large Open XML part. By limiting the size of the part, you can detect the attack and recover reliably.
            </remarks>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.MarkupCompatibilityProcessSettings">
            <summary>
            Represents markup compatibility processing settings.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MarkupCompatibilityProcessSettings.ProcessMode">
            <summary>
            Gets the markup compatibility process mode.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MarkupCompatibilityProcessSettings.TargetFileFormatVersions">
            <summary>
            Gets the target file format versions.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MarkupCompatibilityProcessSettings.#ctor(DocumentFormat.OpenXml.Packaging.MarkupCompatibilityProcessMode,DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Creates a MarkupCompatibilityProcessSettings object using the supplied process mode and file format versions.
            </summary>
            <param name="processMode">The process mode.</param>
            <param name="targetFileFormatVersions">The file format versions. This parameter is ignored if the value is NoProcess.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.MarkupCompatibilityProcessMode">
            <summary>
            Specifies the mode in which to process the markup compatibility tags in the document.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MarkupCompatibilityProcessMode.NoProcess">
            <summary>
            Do not process MarkupCompatibility tags.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MarkupCompatibilityProcessMode.ProcessLoadedPartsOnly">
            <summary>
            Process the loaded parts.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MarkupCompatibilityProcessMode.ProcessAllParts">
            <summary>
            Process all the parts in the package.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackagePartIterator">
            <summary>
            Traversal parts in the <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackage"/> by breadth-first.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackagePartIterator.#ctor(DocumentFormat.OpenXml.Packaging.OpenXmlPackage)">
            <summary>
            Initializes a new instance of the OpenXmlPackagePartIterator class using the supplied OpenXmlPackage class.
            </summary>
            <param name="package">The OpenXmlPackage to use to enumerate parts.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackagePartIterator.GetEnumerator">
            <summary>
            Gets an enumerator for parts in the whole package.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPackagePartIterator.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator for parts in the whole package.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.PartConstraintRule">
            <summary>
            Internal class for part constraint rule
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PartConstraintRule.PartClassName">
            <summary>
            The class name for the relationship type.
            Used in validation event handler.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PartConstraintRule.PartContentType">
            <summary>
            Content type of the part. null for non-fixed content type.
            Purpose: WorksheetCommentsPart / SlideCommentsPart / CommentsPart have same relatiohship type but different content type.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PartConstraintRule.MinOccursIsNonZero">
            <summary>
            true if the min occurs > 0, (be required).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PartConstraintRule.MaxOccursGreatThanOne">
            <summary>
            true is max occurs > 1, (is multiple).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PartConstraintRule.FileFormat">
            <summary>
            The file format version (Office2007 / Office2010) information.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PartConstraintRule.#ctor(System.String,System.String,System.Boolean,System.Boolean,DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Initialize a instance of PartConstraintRule class.
            </summary>
            <param name="partClassName">The class name of the part.</param>
            <param name="partContentType">The content type of the part.</param>
            <param name="minOccursIsNonZero">The MinOccursIsNonZero data.</param>
            <param name="maxOccursGreatThanOne">The MaxOccursGreatThanOne data.</param>
            <param name="fileFormat">The file format version information.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer">
            <summary>
            Defines the base class for OpenXmlPackage and OpenXmlPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.#ctor">
            <summary>
            Initializes OpenXmlPartContainer.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.ChildrenParts">
            <summary>
            Gets the children parts IDictionary.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.PartDictionary">
            <summary>
            Gets or sets the children parts dictionary.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.ReferenceRelationshipList">
            <summary>
            Gets the ReferenceRelationship list.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DeleteReferenceRelationship(DocumentFormat.OpenXml.Packaging.ReferenceRelationship)">
            <summary>
            Deletes the specified reference relationship.
            </summary>
            <param name="referenceRelationship">The reference relationship to be deleted.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when "referenceRelationship" is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the reference relationship is not referenced by this part.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DeleteReferenceRelationship(System.String)">
            <summary>
            Deletes the specified reference relationship.
            </summary>
            <param name="id">The relationship ID of the ReferenceRelationship.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the "id" parameter is null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown when there is no ReferenceRelationship with the specified relationship ID.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.GetReferenceRelationship(System.String)">
            <summary>
            Gets the specified ReferenceRelationship. 
            </summary>
            <param name="id">The relationship ID of the ReferenceRelationship.</param>
            <returns>Returns the ReferenceRelationship which has the relationship ID. </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the "id" parameter is null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown when there is no ReferenceRelationship with the specified relationship ID.</exception>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.ExternalRelationships">
            <summary>
            Enumerates all external relationships.
            Hyperlink relationships are not included, use HyperlinkRelationship property to enumerate hyperlink relationships.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddExternalRelationship(System.String,System.Uri)">
            <summary>
            Adds an external relationship.
            Do not add hyperlink relationships through this method. Use AddHyperlinkRelationship() instead.
            </summary>
            <param name="relationshipType">The relationship type.</param>
            <param name="externalUri">The external URI.</param>
            <returns>An ExternalRelationship with the relationship ID. </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "relationshipType" or the "externalUri" is null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddExternalRelationship(System.String,System.Uri,System.String)">
            <summary>
            Adds an external relationship.
            Do not add hyperlink relationships through this method. Use AddHyperlinkRelationship() instead.
            </summary>
            <param name="relationshipType">The relationship type.</param>
            <param name="externalUri">The external URI.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>An ExternalRelationship with the relationship ID. </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "relationshipType" or the "externalUri" is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the relatioship type is hyperlink relationship type (http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink). </exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DeleteExternalRelationship(DocumentFormat.OpenXml.Packaging.ExternalRelationship)">
            <summary>
            Deletes the specified external relationship.
            </summary>
            <param name="externalRelationship">The external relationship to be deleted.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when "externalRelationship" is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the external relationship is not referenced by this part.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DeleteExternalRelationship(System.String)">
            <summary>
            Deletes the specified ExternalRelationship. 
            </summary>
            <param name="id">The relationship ID of the ExternalRelationship.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the "id" parameter is null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown when there is no ExternalRelationship with the specified relationship ID.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.GetExternalRelationship(System.String)">
            <summary>
            Gets the specified ExternalRelationship. 
            </summary>
            <param name="id">The relationship ID of the ExternalRelationship.</param>
            <returns>Returns the ExternalRelationship which has the relationship ID. </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the "id" parameter is null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown when there is no ExternalRelationship with the specified relationship ID.</exception>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.HyperlinkRelationships">
            <summary>
            Enumerates all hyperlink relationships.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddHyperlinkRelationship(System.Uri,System.Boolean)">
            <summary>
            Adds a new hyperlink relationship.
            </summary>
            <param name="hyperlinkUri">The URI of the hyperlink.</param>
            <param name="isExternal">Is the hyperlink external to the <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackage"/>.</param>
            <returns>An HyperlinkRelationship with the relationship ID. </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "hyperlinkUri" is null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddHyperlinkRelationship(System.Uri,System.Boolean,System.String)">
            <summary>
            Adds a new hyperlink relationship.
            </summary>
            <param name="hyperlinkUri">The URI of the hyperlink.</param>
            <param name="isExternal">Is the hyperlink external to the <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackage"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>An HyperlinkRelationship with the relationship ID. </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "hyperlinkUri" or "id" is null reference.</exception>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DataPartReferenceRelationships">
            <summary>
            Enumerates all <see cref="T:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship"/> relationships.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddDataPartReferenceRelationship``1(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship"/> relationship to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> of the reference relationship.</param>
            <returns>An new <see cref="T:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship"/>. </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddDataPartReferenceRelationship``1(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship"/> relationship to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/> of the reference relationship.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>An new <see cref="T:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship"/> with the relationship ID. </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null reference.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddDataPartReferenceRelationship(DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship"/> relationship.
            </summary>
            <param name="dataPartReferenceRelationship">The <see cref="T:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship"/>.</param>
            <returns>The same <see cref="T:DocumentFormat.OpenXml.Packaging.DataPartReferenceRelationship"/>. </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="dataPartReferenceRelationship"/> is null reference.</exception>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.Parts">
            <summary>
            Enumerates all parts which are relationship targets of this part.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.GetPartById(System.String)">
            <summary>
            Gets the child part through the relationship ID.
            </summary>
            <param name="id">The relationship ID of the part.</param>
            <returns>The part.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the part with the specified id does not exist.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.GetIdOfPart(DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Gets the relationship ID of the part.
            </summary>
            <param name="part">The part.</param>
            <returns>The relationship ID of the part.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "part" is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the part does not exist.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.ChangeIdOfPart(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.String)">
            <summary>
            Changes the relationship ID of the part.
            </summary>
            <param name="part">The target part.</param>
            <param name="newRelationshipId">The new relationship ID of the part.</param>
            <returns>The old relationship ID of the part.</returns>
            <exception cref="T:System.ArgumentNullException">Throw when "part" is null reference or the newRelationshipId is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the part does not exist under this part.</exception>
            <exception cref="T:System.ArgumentException">Thrown when the specified relationship id is already used by another part.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddPart``1(``0)">
            <summary>
            Adds the part to the document.
            Must use the returned part to operate on the part added to the document.
            </summary>
            <typeparam name="T">Derived class from OpenXmlPart.</typeparam>
            <param name="part">The part to be added to the document.</param>
            <returns>The part added to the document. This is different from the passed in part.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "part" is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the part is not allowed to be added.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when one instance of the same type part already exists and multiple instances of that type are not allowed.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddPart``1(``0,System.String)">
            <summary>
            Adds the part to the document with a given relationship identifier (ID).
            Must use the returned part to operate on the part added to the document
            </summary>
            <typeparam name="T">Derived class from OpenXmlPart.</typeparam>
            <param name="part">The part to be added to the document.</param>
            <param name="id">A unique relationship identifier.</param>
            <returns>The part added to the document. This is different from the passed in part.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "part" or the "id" is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the part is not allowed to be added.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when one instance of same type part already exists and multiple instances of that type are not allowed.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.CreateRelationshipToPart(DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Adds a relationship for the specified part to this part.
            </summary>
            <param name="targetPart">The part to add relationship for.</param>
            <returns>A unique relationship identifier.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "part" or the "id" is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the part is no allowed to be added.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when one instance of same type part already exists and multiple instance of that type is not allowed.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the <paramref name="targetPart"/> and this part are not in the same OpenXmlPackage.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.CreateRelationshipToPart(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.String)">
            <summary>
            Adds a relationship for the specified part to this part.
            </summary>
            <param name="targetPart">The part to add a relationship for.</param>
            <param name="id">A unique relationship identifier.</param>
            <returns>A unique relationship identifier.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "part" or the "id" is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the part is no allowed to be added.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when one instance of same type part already exists and multiple instance of that type is not allowed.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the <paramref name="targetPart"/> and this part are not in the same OpenXmlPackage.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddNewPart``1">
            <summary>
            Adds a new part of type T.
            </summary>
            <typeparam name="T">The class of the part.</typeparam>
            <returns>The added part.</returns>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">When the part is not allowed to be referenced by this part.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddNewPart``1(System.String)">
            <summary>
            Adds a new part of type T.
            </summary>
            <typeparam name="T">The class of the part.</typeparam>
            <param name="id">The relationship id.</param>
            <returns>The added part.</returns>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">When the part is not allowed to be referenced by this part.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddNewPart``1(System.String,System.String)">
            <summary>
            Adds a new part of type T.
            </summary>
            <typeparam name="T">The class of the part.</typeparam>
            <param name="contentType">The content type of the part. Must match the defined content type if the part is fixed content type.</param>
            <param name="id">The relationship id. The id will be automaticly generated if this param is null.</param>
            <returns>The added part.</returns>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">When the part is not allowed to be referenced by this part.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">When the part is fixed content type and the passed in contentType does not match the defined content type.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when "contentType" is null reference.</exception>
            <remarks>Mainly used for adding not-fixed content type part - ImagePart, etc</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddExtendedPart(System.String,System.String,System.String)">
            <summary>
            Adds an extended part ( Application specific part ).
            </summary>
            <param name="relationshipType">The relationship type of the part.</param>
            <param name="contentType">The content type of the part.</param>
            <param name="targetExt">The desired part name extension in the package.</param>
            <returns>The new ExtendedPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddExtendedPart(System.String,System.String,System.String,System.String)">
            <summary>
            Adds an extended part ( Application specific part ). 
            </summary>
            <param name="relationshipType">The relationship type of the part.</param>
            <param name="contentType">The content type of the part.</param>
            <param name="targetExt">The desired part name extension in the package.</param>
            <param name="rId">The desired relationship ID.</param>
            <returns>The new ExtendedPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DeletePart(System.String)">
            <summary>
            Deletes the specified child part from this part.
            </summary>
            <param name="id">The relationship ID of the part to be deleted.</param>
            <returns>True if the part is successfully removed; otherwise, false. This method also returns false if the part was not found.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "id" is null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DeletePart(DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Deletes a specified part in the package root layer.
            </summary>
            <param name="part">The part to be deleted.</param>
            <returns>True if the part is successfully removed; otherwise, false. This method also returns false if the part was not found or the parameter is null.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the part is not referenced by this part.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DeleteParts``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Deletes all the parts which are in the passed in collection from the document.
            </summary>
            <param name="partsToBeDeleted">The parts to be deleted.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when "partsToBeDeleted" is null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.GetPartsCountOfType``1">
            <summary>
            Gets the count of all parts of type T.
            </summary>
            <typeparam name="T">The type of the part.</typeparam>
            <returns>The number of parts of this type.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddAnnotation(System.Object)">
            <summary>
            Adds an object to the annotation list of this PartContainer.
            </summary>
            <param name="annotation">The annotation to add to this PartContainer.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.Annotation``1">
            <summary>
            Get the first annotation object of the specified type from this PartContainer.
            </summary>
            <typeparam name="T">The type of the annotation to retrieve.</typeparam>
            <returns>The first annotation object of the specified type.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.Annotation(System.Type)">
            <summary>
            Get the first annotation object of the specified type from this PartContainer.
            </summary>
            <param name="type">The type of the annotation to retrieve.</param>
            <returns>The first annotation object of the specified type.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.Annotations``1">
            <summary>
            Gets a collection of annotations of the specified type for this PartContainer.
            </summary>
            <typeparam name="T">The type of the annotations to retrieve.</typeparam>
            <returns>An IEnumerable(T) of object that contains the annotations for this PartContainer.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.Annotations(System.Type)">
            <summary>
            Gets a collection of annotations of the specified type for this PartContainer.
            </summary>
            <param name="type">The Type of the annotations to retrieve.</param>
            <returns>An IEnumerable(T) of object that contains the annotations for this PartContainer.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.RemoveAnnotations``1">
            <summary>
            Removes the annotations of the specified type from this PartContainer.
            </summary>
            <typeparam name="T">The Type of the annotations to remove.</typeparam>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.RemoveAnnotations(System.Type)">
            <summary>
            Removes the annotations of the specified type from this PartContainer.
            </summary>
            <param name="type">The Type of the annotations to remove.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.GetPartsOfType``1">
            <summary>
            Enumerates all the children parts of the specified type "T" of this part.
            </summary>
            <typeparam name="T">Derived class from OpenXmlPart.</typeparam>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.GetPartsOfType``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Gets all the children parts of the specified type "T" into "partCollection" of this part.
            </summary>
            <typeparam name="T">Derived class from OpenXmlPart.</typeparam>
            <param name="partCollection">The part collection to be filled in.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when "partCollection" is null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddNewPartInternal``1">
            <summary>
            Adds a new part of type T.
            </summary>
            <typeparam name="T">The class of the part.</typeparam>
            <returns>The added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddNewPartInternal``1(System.String,System.String)">
            <summary>
            Adds a new part of type T
            </summary>
            <typeparam name="T">The class of the part.</typeparam>
            <param name="contentType">The content type of the part.</param>
            <param name="id">The part relationship id.</param>
            <returns>The added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.InitPart``1(``0,System.String)">
            <summary>
            Initilizes a new created part
            </summary>
            <typeparam name="T">The type of the part, must be derived from OpenXmlPart.</typeparam>
            <param name="newPart">The part to be initialized.</param>
            <param name="contentType">The content type of the part.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.InitPart``1(``0,System.String,System.String)">
            <summary>
            Initilizes a new created part
            </summary>
            <typeparam name="T">The type of the part, must be derived from OpenXmlPart.</typeparam>
            <param name="newPart">The part to be initialized.</param>
            <param name="contentType">The content type of the part.</param>
            <param name="id">The relationship id.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddPartFrom(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.String)">
            <summary>
            Adds a new part.
            </summary>
            <param name="subPart">The part to be added.</param>
            <param name="rId">A unique relationship identifier. null to create new id.</param>
            <returns>The added part. May diff with the passed in part.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "subPart" is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the part is no allowed to be added.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when one instance of same type part already exists and multiple instance of that type is not allowed.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.SetSubPart(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.String)">
            <summary>
            Sets part which is only one in the parent
            </summary>
            <param name="part"></param>
            <param name="rId">A unique relationship identifier.</param>
            <returns>The part added to the parent. Different with the passed in part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AddSubPart(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.String)">
            <summary>
            Adds the part to the parent. 
            </summary>
            <param name="part"></param>
            <param name="rId">A unique relationship identifier.</param>
            <returns>The part added to the parent. Different with the passed in part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AttachChild(DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Attachs the child to the package (create the relationship)
            </summary>
            <param name="part">The part to be attached.</param>
            <returns>The relationship ID.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.AttachChild(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.String)">
            <summary>
            Attachs the child to the package (create the relationship)
            </summary>
            <param name="part">The part to be attached.</param>
            <param name="rId">The desired relationship ID.</param>
            <returns>The relationship ID.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DeletePartCore(System.String)">
            <summary>
            Deletes the specified part in the package root layer.
            </summary>
            <param name="id">The relationship ID of the part to be deleted.</param>
            <returns>true if the part is successfully removed; otherwise, false. This method also returns false if the part was not found.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DeletePartsOfType``1">
            <summary>
            Deletes all the parts of the specified type.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DeletePartsRecursivelyOfTypeBase``1">
            <summary>
            Deletes all the parts which is the specified part type from package recursively.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.DeleteAllParts(System.Collections.Generic.Dictionary{DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Boolean},System.Collections.Generic.Dictionary{DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Boolean})">
            <summary>
            Removes all child parts of this part.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.GetSubPart(System.String)">
            <summary>
            Gets the sub part which is the specified relationship type.
            </summary>
            <param name="relationshipType">The relationship type of the part.</param>
            <returns>return null if no one.</returns>
            <remarks>Only used for maxOccurence=1 part.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.CreateOpenXmlPart(System.String)">
            <summary>
            Creates an strong typed OpenXmlPart instance based on the relationship type. For and only for loading.
            </summary>
            <param name="relationshipType">The relationship type of the new part.</param>
            <returns>The created new part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.LoadReferencedPartsAndRelationships(DocumentFormat.OpenXml.Packaging.OpenXmlPackage,DocumentFormat.OpenXml.Packaging.OpenXmlPart,DocumentFormat.OpenXml.Packaging.RelationshipCollection,System.Collections.Generic.Dictionary{System.Uri,DocumentFormat.OpenXml.Packaging.OpenXmlPart})">
            <summary>
            Loads all children parts and relationships recursively. 
            </summary>
            <param name="openXmlPackage">The OpenXmlPackage.</param>
            <param name="sourcePart">The source part. Be null if loading from the package root.</param>
            <param name="relationshipCollection">The relationships of the source part (or the package).</param>
            <param name="loadedParts">Temp collection to detect loaded (shared) parts.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.ValidateInternal(DocumentFormat.OpenXml.Packaging.OpenXmlPackageValidationSettings,System.Collections.Generic.Dictionary{DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Boolean})">
            <summary>
            Validates the package ( do not validate the xml content in each part ).
            </summary>
            <param name="validationSettings">OpenXmlPackageValidationSettings for validation events.</param>
            <param name="processedParts">Parts already processed.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.InternalOpenXmlPackage">
            <summary>
            Internal OpenXmlPackage instance 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.GetPartConstraint">
            <summary>
            Get the constraint rule
            </summary>
            <returns>The constraint rule.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>The constraint rule.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.ThrowIfObjectDisposed">
            <summary>
            Test whether the object is already disposed.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.CreatePartCore(System.String)">
            <summary>
            Create the object of strong typed class according the relationshipType
            </summary>
            <param name="relationshipType">The relationship type of the class.</param>
            <returns>A new object of strong typed class.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.IdPartPair">
            <summary>
            Represents a (RelationshipId, OpenXmlPart) pair.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.IdPartPair.RelationshipId">
            <summary>
            Gets or sets the relationship ID in the pair.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.IdPartPair.OpenXmlPart">
            <summary>
            Gets or sets the OpenXmlPart in the pair.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.IdPartPair.#ctor(System.String,DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Initializes a new instance of the IdPartPair with the specified id and part.
            </summary>
            <param name="id">The relationship ID.</param>
            <param name="part">The OpenXmlPart.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.IdPartPair.Equals(DocumentFormat.OpenXml.Packaging.IdPartPair)">
            <summary>
            Determines whether this instance and another specified IdPartPair object have the same value. 
            </summary>
            <param name="value">An IdPartPair.</param>
            <returns>True if the value of the value parameter is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.GlobalPartFactory">
            <summary>
            Global OpenXmlPart factory to create strong typed OpenXmlPart based on the relationship type.
            </summary>
            <summary>
            Global OpenXmlPart factory to create strong typed OpenXmlPart based on the relationship type.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlobalPartFactory.CreateOpenXmlPart(DocumentFormat.OpenXml.Packaging.OpenXmlPackage,System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type.
            </summary>
            <param name="openXmlPackage">The container OpenXmlPackage.</param>
            <param name="relationshipType">The relationship type of the target part.</param>
            <returns>An instance of OpenXmlPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlobalPartFactory.CreatePartCore(DocumentFormat.OpenXml.Packaging.OpenXmlPackage,System.String,DocumentFormat.OpenXml.Packaging.OpenXmlPart@)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type.
            </summary>
            <param name="openXmlPackage">The container OpenXmlPackage.</param>
            <param name="relationshipType">The relationship type of the target part.</param>
            <param name="openXmlPart">The created instance of OpenXmlPart.</param>
            <remarks>This partial method will be generated by code generaotr.</remarks>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.PartExtensionProvider">
            <summary>
            Defines a Part Extension Provider which maintains a (Content Type, Part Extension (".xml")) dictionary.
            Used in OpenXmlPackage derived classes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PartExtensionProvider.#ctor">
            <summary>
            Initializes a new instance of the PartExtensionProvider class that is empty.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PartExtensionProvider.#ctor(DocumentFormat.OpenXml.Packaging.PartExtensionProvider)">
            <summary>
            Initializes a new instance of the PartExtensionProvider class that contains elements copied from the specified PartExtensionProvider.
            </summary>
            <param name="partExtProvider">The source PartExtensionProvider whose elements are copied to the new PartExtensionProvider.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PartExtensionProvider.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the class that is empty, has the specified initial capacity.
            </summary>
            <param name="capacity">The initial number of elements that the PartExtensionProvider can contain.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PartExtensionProvider.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the Dictionary class with serialized data. 
            </summary>
            <param name="info">A System.Runtime.Serialization.SerializationInfo object containing the information required to serialize the PartExtensionProvider.</param>
            <param name="context">A System.Runtime.Serialization.StreamingContext structure containing the source and destination of the serialized stream associated with the PartExtensionProvider.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PartExtensionProvider.AddPartExtension(System.String,System.String)">
            <summary>
            Add a part extension for the specified ContentType.
            </summary>
            <param name="contentType">ContentType.</param>
            <param name="partExtension">Part Extension (".xml") to be used for the part with the specified content type.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PartExtensionProvider.MakeSurePartExtensionExist(System.String,System.String)">
            <summary>
            Check to make sure the (contentType, partExtension) is in the provider.
            The (contentType, partExtension) will be added to the provider if it does not exist in the provider.
            </summary>
            <param name="contentType">ContentType</param>
            <param name="partExtension">Part Extension (".xml") to be used for the part with the specified content type.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when either parameter is null.</exception>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ReferenceRelationship">
            <summary>
            Defines a reference relationship. A reference relationship can be internal or external.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ReferenceRelationship.#ctor">
            <summary>
            Initializes a new instance of the ReferenceRelationship.
            </summary>
            <remarks>
            Must call Initialize() after calling this constructor.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ReferenceRelationship.#ctor(System.IO.Packaging.PackageRelationship)">
            <summary>
            Initializes a new instance of the ReferenceRelationship.
            </summary>
            <param name="packageRelationship">The source PackageRelationship.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ReferenceRelationship.#ctor(System.Uri,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the ReferenceRelationship.
            </summary>
            <param name="relationshipType">The relationship type of the relationship.</param>
            <param name="targetUri">The target uri of the relationship.</param>
            <param name="id">The relationship ID.</param>
            <param name="isExternal">A value that indicates whether the target of the relationship is Internal or External to the Package.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ReferenceRelationship.Container">
            <summary>
            Gets the owner <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer"/> that holds the <see cref="T:DocumentFormat.OpenXml.Packaging.ReferenceRelationship"/>.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ReferenceRelationship.RelationshipType">
            <summary>
            Gets the relationship type.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ReferenceRelationship.IsExternal">
            <summary>
            Gets a value that indicates whether the target of the relationship is Internal or External to the <see cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackage"/>.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ReferenceRelationship.Id">
            <summary>
            Gets the relationship ID.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ReferenceRelationship.Uri">
            <summary>
            Gets the target URI of the relationship.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ReferenceRelationship.Initialize(System.Uri,System.Boolean,System.String,System.String)">
            <summary>
            Initializes this instance of the ReferenceRelationship.
            </summary>
            <param name="relationshipType">The relationship type of the relationship.</param>
            <param name="targetUri">The target uri of the relationship.</param>
            <param name="id">The relationship ID.</param>
            <param name="isExternal">A value that indicates whether the target of the relationship is Internal or External to the Package.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ExternalRelationship">
            <summary>
            Represents an external relationship.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExternalRelationship.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Initializes a new instance of the ExternalRelationship.
            </summary>
            <param name="externalUri">The target uri of the relationship.</param>
            <param name="relationshipType">The relationship type.</param>
            <param name="id">The relationship ID.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.HyperlinkRelationship">
            <summary>
            Represents a hyperlink relationship.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.HyperlinkRelationship.RelationshipTypeConst">
            <summary>
            The source relationship type for hyperlink. Defined as "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink".
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HyperlinkRelationship.#ctor(System.Uri,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the HyperlinkRelationship.
            </summary>
            <param name="hyperlinkUri">The target uri of the hyperlink relationship.</param>
            <param name="id">The relationship ID.</param>
            <param name="isExternal">Is the URI external.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HyperlinkRelationship.RelationshipType">
            <summary>
            Gets the relationship type.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ExtendedPart">
            <summary>
            Defines a class for all extended parts (Application specific part).
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExtendedPart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExtendedPart.#ctor(System.String)">
            <summary>
            Initialize a new instance of ExtendedPart.
            </summary>
            <param name="relationshipType"></param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedPart.RelationshipType">
            <summary>
            The relationship type of the part.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedPart.TargetFileExtension">
            <summary>
            The file extension to be used for the part in the package.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedPart.TargetPath">
            <summary>
            The internal path to be used for the part name.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedPart.TargetName">
            <summary>
            The file base name to be used for the part name in the package
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExtendedPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Always returns false.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExtendedPart.AddPartFrom(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.String)">
            <summary>
            Adds a new part.
            </summary>
            <param name="subPart">The part to be added.</param>
            <param name="rId">A unique relationship identifier. null to create new id.</param>
            <returns>The added part. May diff with the passed in part.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "subPart" is null reference.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the part is no allowed to be added.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when one instance of same type part already exists and multiple instance of that type is not allowed.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExtendedPart.InitPart``1(``0,System.String,System.String)">
            <summary>
            Init a new created part
            </summary>
            <typeparam name="T">The type of the part, must be derived from OpenXmlPart.</typeparam>
            <param name="newPart">The part to be initialized.</param>
            <param name="contentType">The content type of the part.</param>
            <param name="id">The relationship id.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart">
            <summary>
            Defines the CoreFilePropertiesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.#ctor">
            <summary>
            Construtor of CoreFilePropertiesPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart">
            <summary>
            Defines the ExtendedFilePropertiesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.#ctor">
            <summary>
            Construtor of ExtendedFilePropertiesPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExtendedFilePropertiesPart.Properties">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart">
            <summary>
            Defines the CustomFilePropertiesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.#ctor">
            <summary>
            Construtor of CustomFilePropertiesPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomFilePropertiesPart.Properties">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ThumbnailPart">
            <summary>
            Defines the ThumbnailPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThumbnailPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThumbnailPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThumbnailPart.#ctor">
            <summary>
            Construtor of ThumbnailPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThumbnailPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThumbnailPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThumbnailPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThumbnailPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThumbnailPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThumbnailPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThumbnailPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThumbnailPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThumbnailPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart">
            <summary>
            Defines the DigitalSignatureOriginPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.#ctor">
            <summary>
            Construtor of DigitalSignatureOriginPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.XmlSignatureParts">
            <summary>
            Gets the XmlSignatureParts of the DigitalSignatureOriginPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DigitalSignatureOriginPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.XmlSignaturePart">
            <summary>
            Defines the XmlSignaturePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.#ctor">
            <summary>
            Construtor of XmlSignaturePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.XmlSignaturePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.MainDocumentPart">
            <summary>
            Defines the MainDocumentPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.#ctor">
            <summary>
            Construtor of MainDocumentPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddCustomXmlPart(System.String)">
            <summary>
            Adds a CustomXmlPart to the MainDocumentPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType)">
            <summary>
            Adds a CustomXmlPart to the MainDocumentPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddCustomXmlPart(System.String,System.String)">
            <summary>
            Adds a CustomXmlPart to the MainDocumentPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType,System.String)">
            <summary>
            Adds a CustomXmlPart to the MainDocumentPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddThumbnailPart(System.String)">
            <summary>
            Adds a ThumbnailPart to the MainDocumentPart.
            </summary>
            <param name="contentType">the content type of the ThumbnailPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddThumbnailPart(DocumentFormat.OpenXml.Packaging.ThumbnailPartType)">
            <summary>
            Adds a ThumbnailPart to the MainDocumentPart.
            </summary>
            <param name="partType">The part type of the ThumbnailPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddThumbnailPart(System.String,System.String)">
            <summary>
            Adds a ThumbnailPart to the MainDocumentPart.
            </summary>
            <param name="contentType">the content type of the ThumbnailPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddThumbnailPart(DocumentFormat.OpenXml.Packaging.ThumbnailPartType,System.String)">
            <summary>
            Adds a ThumbnailPart to the MainDocumentPart.
            </summary>
            <param name="partType">The part type of the ThumbnailPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddAlternativeFormatImportPart(System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the MainDocumentPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType)">
            <summary>
            Adds a AlternativeFormatImportPart to the MainDocumentPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddAlternativeFormatImportPart(System.String,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the MainDocumentPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the MainDocumentPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the MainDocumentPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the MainDocumentPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the MainDocumentPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the MainDocumentPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the MainDocumentPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the MainDocumentPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the MainDocumentPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the MainDocumentPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the MainDocumentPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the MainDocumentPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MainDocumentPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MainDocumentPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MainDocumentPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.CustomXmlParts">
            <summary>
            Gets the CustomXmlParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.GlossaryDocumentPart">
            <summary>
            Gets the GlossaryDocumentPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.ThemePart">
            <summary>
            Gets the ThemePart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.ThumbnailPart">
            <summary>
            Gets the ThumbnailPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.WordprocessingCommentsPart">
            <summary>
            Gets the WordprocessingCommentsPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.DocumentSettingsPart">
            <summary>
            Gets the DocumentSettingsPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.EndnotesPart">
            <summary>
            Gets the EndnotesPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.FontTablePart">
            <summary>
            Gets the FontTablePart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.FootnotesPart">
            <summary>
            Gets the FootnotesPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.NumberingDefinitionsPart">
            <summary>
            Gets the NumberingDefinitionsPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.StyleDefinitionsPart">
            <summary>
            Gets the StyleDefinitionsPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.StylesWithEffectsPart">
            <summary>
            Gets the StylesWithEffectsPart of the MainDocumentPart., only available in Office2010
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.WebSettingsPart">
            <summary>
            Gets the WebSettingsPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.FooterParts">
            <summary>
            Gets the FooterParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.HeaderParts">
            <summary>
            Gets the HeaderParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.WordprocessingPrinterSettingsParts">
            <summary>
            Gets the WordprocessingPrinterSettingsParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.CustomizationPart">
            <summary>
            Gets the CustomizationPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.VbaProjectPart">
            <summary>
            Gets the VbaProjectPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.WordprocessingCommentsExPart">
            <summary>
            Gets the WordprocessingCommentsExPart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.WordprocessingPeoplePart">
            <summary>
            Gets the WordprocessingPeoplePart of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.AlternativeFormatImportParts">
            <summary>
            Gets the AlternativeFormatImportParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.ChartParts">
            <summary>
            Gets the ChartParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.ImageParts">
            <summary>
            Gets the ImageParts of the MainDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MainDocumentPart.Document">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CustomizationPart">
            <summary>
            Defines the CustomizationPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomizationPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomizationPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomizationPart.#ctor">
            <summary>
            Construtor of CustomizationPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomizationPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomizationPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomizationPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomizationPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomizationPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomizationPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomizationPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomizationPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomizationPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomizationPart.WordAttachedToolbarsPart">
            <summary>
            Gets the WordAttachedToolbarsPart of the CustomizationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomizationPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomizationPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomizationPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomizationPart.TemplateCommandGroup">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart">
            <summary>
            Defines the WordAttachedToolbarsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.#ctor">
            <summary>
            Construtor of WordAttachedToolbarsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordAttachedToolbarsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart">
            <summary>
            Defines the AlternativeFormatImportPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.#ctor">
            <summary>
            Construtor of AlternativeFormatImportPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart">
            <summary>
            Defines the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.#ctor">
            <summary>
            Construtor of WordprocessingCommentsPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddAlternativeFormatImportPart(System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the WordprocessingCommentsPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType)">
            <summary>
            Adds a AlternativeFormatImportPart to the WordprocessingCommentsPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddAlternativeFormatImportPart(System.String,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the WordprocessingCommentsPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the WordprocessingCommentsPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WordprocessingCommentsPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WordprocessingCommentsPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WordprocessingCommentsPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WordprocessingCommentsPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the WordprocessingCommentsPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the WordprocessingCommentsPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the WordprocessingCommentsPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the WordprocessingCommentsPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the WordprocessingCommentsPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the WordprocessingCommentsPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.AlternativeFormatImportParts">
            <summary>
            Gets the AlternativeFormatImportParts of the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.ChartParts">
            <summary>
            Gets the ChartParts of the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.ImageParts">
            <summary>
            Gets the ImageParts of the WordprocessingCommentsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsPart.Comments">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart">
            <summary>
            Defines the DocumentSettingsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.#ctor">
            <summary>
            Construtor of DocumentSettingsPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.AddMailMergeRecipientDataPart(System.String)">
            <summary>
            Adds a MailMergeRecipientDataPart to the DocumentSettingsPart.
            </summary>
            <param name="contentType">the content type of the MailMergeRecipientDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.AddMailMergeRecipientDataPart(DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPartType)">
            <summary>
            Adds a MailMergeRecipientDataPart to the DocumentSettingsPart.
            </summary>
            <param name="partType">The part type of the MailMergeRecipientDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.AddMailMergeRecipientDataPart(System.String,System.String)">
            <summary>
            Adds a MailMergeRecipientDataPart to the DocumentSettingsPart.
            </summary>
            <param name="contentType">the content type of the MailMergeRecipientDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.AddMailMergeRecipientDataPart(DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPartType,System.String)">
            <summary>
            Adds a MailMergeRecipientDataPart to the DocumentSettingsPart.
            </summary>
            <param name="partType">The part type of the MailMergeRecipientDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the DocumentSettingsPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the DocumentSettingsPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the DocumentSettingsPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the DocumentSettingsPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.MailMergeRecipientDataPart">
            <summary>
            Gets the MailMergeRecipientDataPart of the DocumentSettingsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.ImageParts">
            <summary>
            Gets the ImageParts of the DocumentSettingsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DocumentSettingsPart.Settings">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.EndnotesPart">
            <summary>
            Defines the EndnotesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.#ctor">
            <summary>
            Construtor of EndnotesPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddAlternativeFormatImportPart(System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the EndnotesPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType)">
            <summary>
            Adds a AlternativeFormatImportPart to the EndnotesPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddAlternativeFormatImportPart(System.String,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the EndnotesPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the EndnotesPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the EndnotesPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the EndnotesPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the EndnotesPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the EndnotesPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the EndnotesPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the EndnotesPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the EndnotesPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the EndnotesPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the EndnotesPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the EndnotesPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EndnotesPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EndnotesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EndnotesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EndnotesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EndnotesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.AlternativeFormatImportParts">
            <summary>
            Gets the AlternativeFormatImportParts of the EndnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.ChartParts">
            <summary>
            Gets the ChartParts of the EndnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the EndnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the EndnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the EndnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the EndnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the EndnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the EndnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the EndnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the EndnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.ImageParts">
            <summary>
            Gets the ImageParts of the EndnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EndnotesPart.Endnotes">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.FontTablePart">
            <summary>
            Defines the FontTablePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FontTablePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FontTablePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FontTablePart.#ctor">
            <summary>
            Construtor of FontTablePart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FontTablePart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FontTablePart.AddFontPart(System.String)">
            <summary>
            Adds a FontPart to the FontTablePart.
            </summary>
            <param name="contentType">the content type of the FontPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FontTablePart.AddFontPart(DocumentFormat.OpenXml.Packaging.FontPartType)">
            <summary>
            Adds a FontPart to the FontTablePart.
            </summary>
            <param name="partType">The part type of the FontPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FontTablePart.AddFontPart(System.String,System.String)">
            <summary>
            Adds a FontPart to the FontTablePart.
            </summary>
            <param name="contentType">the content type of the FontPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FontTablePart.AddFontPart(DocumentFormat.OpenXml.Packaging.FontPartType,System.String)">
            <summary>
            Adds a FontPart to the FontTablePart.
            </summary>
            <param name="partType">The part type of the FontPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FontTablePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontTablePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FontTablePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontTablePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FontTablePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontTablePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FontTablePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontTablePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontTablePart.FontParts">
            <summary>
            Gets the FontParts of the FontTablePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontTablePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontTablePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontTablePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontTablePart.Fonts">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.FooterPart">
            <summary>
            Defines the FooterPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.#ctor">
            <summary>
            Construtor of FooterPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddAlternativeFormatImportPart(System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the FooterPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType)">
            <summary>
            Adds a AlternativeFormatImportPart to the FooterPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddAlternativeFormatImportPart(System.String,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the FooterPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the FooterPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the FooterPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the FooterPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the FooterPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the FooterPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the FooterPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the FooterPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the FooterPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the FooterPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the FooterPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the FooterPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FooterPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FooterPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FooterPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FooterPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FooterPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.AlternativeFormatImportParts">
            <summary>
            Gets the AlternativeFormatImportParts of the FooterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.ChartParts">
            <summary>
            Gets the ChartParts of the FooterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the FooterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the FooterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the FooterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the FooterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the FooterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the FooterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the FooterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the FooterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.ImageParts">
            <summary>
            Gets the ImageParts of the FooterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FooterPart.Footer">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.FootnotesPart">
            <summary>
            Defines the FootnotesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.#ctor">
            <summary>
            Construtor of FootnotesPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddAlternativeFormatImportPart(System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the FootnotesPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType)">
            <summary>
            Adds a AlternativeFormatImportPart to the FootnotesPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddAlternativeFormatImportPart(System.String,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the FootnotesPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the FootnotesPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the FootnotesPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the FootnotesPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the FootnotesPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the FootnotesPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the FootnotesPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the FootnotesPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the FootnotesPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the FootnotesPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the FootnotesPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the FootnotesPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FootnotesPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FootnotesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FootnotesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FootnotesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FootnotesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.AlternativeFormatImportParts">
            <summary>
            Gets the AlternativeFormatImportParts of the FootnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.ChartParts">
            <summary>
            Gets the ChartParts of the FootnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the FootnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the FootnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the FootnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the FootnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the FootnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the FootnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the FootnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the FootnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.ImageParts">
            <summary>
            Gets the ImageParts of the FootnotesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FootnotesPart.Footnotes">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart">
            <summary>
            Defines the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.#ctor">
            <summary>
            Construtor of GlossaryDocumentPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddAlternativeFormatImportPart(System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the GlossaryDocumentPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType)">
            <summary>
            Adds a AlternativeFormatImportPart to the GlossaryDocumentPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddAlternativeFormatImportPart(System.String,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the GlossaryDocumentPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the GlossaryDocumentPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the GlossaryDocumentPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the GlossaryDocumentPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the GlossaryDocumentPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the GlossaryDocumentPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the GlossaryDocumentPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the GlossaryDocumentPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the GlossaryDocumentPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the GlossaryDocumentPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the GlossaryDocumentPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the GlossaryDocumentPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.WordprocessingCommentsPart">
            <summary>
            Gets the WordprocessingCommentsPart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.DocumentSettingsPart">
            <summary>
            Gets the DocumentSettingsPart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.EndnotesPart">
            <summary>
            Gets the EndnotesPart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.FontTablePart">
            <summary>
            Gets the FontTablePart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.FootnotesPart">
            <summary>
            Gets the FootnotesPart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.NumberingDefinitionsPart">
            <summary>
            Gets the NumberingDefinitionsPart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.StyleDefinitionsPart">
            <summary>
            Gets the StyleDefinitionsPart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.StylesWithEffectsPart">
            <summary>
            Gets the StylesWithEffectsPart of the GlossaryDocumentPart., only available in Office2010
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.WebSettingsPart">
            <summary>
            Gets the WebSettingsPart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.FooterParts">
            <summary>
            Gets the FooterParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.HeaderParts">
            <summary>
            Gets the HeaderParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.WordprocessingPrinterSettingsParts">
            <summary>
            Gets the WordprocessingPrinterSettingsParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.CustomizationPart">
            <summary>
            Gets the CustomizationPart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.VbaProjectPart">
            <summary>
            Gets the VbaProjectPart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.WordprocessingCommentsExPart">
            <summary>
            Gets the WordprocessingCommentsExPart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.WordprocessingPeoplePart">
            <summary>
            Gets the WordprocessingPeoplePart of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.AlternativeFormatImportParts">
            <summary>
            Gets the AlternativeFormatImportParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.ChartParts">
            <summary>
            Gets the ChartParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.ImageParts">
            <summary>
            Gets the ImageParts of the GlossaryDocumentPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.GlossaryDocumentPart.GlossaryDocument">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.HeaderPart">
            <summary>
            Defines the HeaderPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.#ctor">
            <summary>
            Construtor of HeaderPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddAlternativeFormatImportPart(System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the HeaderPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType)">
            <summary>
            Adds a AlternativeFormatImportPart to the HeaderPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddAlternativeFormatImportPart(System.String,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the HeaderPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the HeaderPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the HeaderPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the HeaderPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the HeaderPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the HeaderPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the HeaderPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the HeaderPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the HeaderPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the HeaderPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the HeaderPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the HeaderPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HeaderPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.HeaderPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.HeaderPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.HeaderPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.HeaderPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.AlternativeFormatImportParts">
            <summary>
            Gets the AlternativeFormatImportParts of the HeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.ChartParts">
            <summary>
            Gets the ChartParts of the HeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the HeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the HeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the HeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the HeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the HeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the HeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the HeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the HeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.ImageParts">
            <summary>
            Gets the ImageParts of the HeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HeaderPart.Header">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart">
            <summary>
            Defines the NumberingDefinitionsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.#ctor">
            <summary>
            Construtor of NumberingDefinitionsPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the NumberingDefinitionsPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the NumberingDefinitionsPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the NumberingDefinitionsPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the NumberingDefinitionsPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.ImageParts">
            <summary>
            Gets the ImageParts of the NumberingDefinitionsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NumberingDefinitionsPart.Numbering">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart">
            <summary>
            Defines the StyleDefinitionsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.#ctor">
            <summary>
            Construtor of StyleDefinitionsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StyleDefinitionsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WebSettingsPart">
            <summary>
            Defines the WebSettingsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebSettingsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebSettingsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebSettingsPart.#ctor">
            <summary>
            Construtor of WebSettingsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebSettingsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebSettingsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebSettingsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebSettingsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebSettingsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebSettingsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebSettingsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebSettingsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebSettingsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebSettingsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebSettingsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebSettingsPart.WebSettings">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart">
            <summary>
            Defines the MailMergeRecipientDataPart.
            </summary>
            <summary>
            Defines MailMergeRecipientDataPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.#ctor">
            <summary>
            Construtor of MailMergeRecipientDataPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.Recipients">
            <summary>
            Gets/Sets the part's root element when the part's content type is MailMergeRecipientDataPartType.OpenXmlMailMergeRecipientData. 
            Setting this property will throw InvalidOperationException if the MailMergeRecipients property is not null.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPart.MailMergeRecipients">
            <summary>
            Gets/Sets the part's root element when the part's content type is MailMergeRecipientDataPartType.MsWordMailMergeRecipientData. 
            Setting this property will throw InvalidOperationException if the Recipients property is not null.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WorkbookPart">
            <summary>
            Defines the WorkbookPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.#ctor">
            <summary>
            Construtor of WorkbookPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.AddCustomXmlPart(System.String)">
            <summary>
            Adds a CustomXmlPart to the WorkbookPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType)">
            <summary>
            Adds a CustomXmlPart to the WorkbookPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.AddCustomXmlPart(System.String,System.String)">
            <summary>
            Adds a CustomXmlPart to the WorkbookPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType,System.String)">
            <summary>
            Adds a CustomXmlPart to the WorkbookPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.AddThumbnailPart(System.String)">
            <summary>
            Adds a ThumbnailPart to the WorkbookPart.
            </summary>
            <param name="contentType">the content type of the ThumbnailPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.AddThumbnailPart(DocumentFormat.OpenXml.Packaging.ThumbnailPartType)">
            <summary>
            Adds a ThumbnailPart to the WorkbookPart.
            </summary>
            <param name="partType">The part type of the ThumbnailPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.AddThumbnailPart(System.String,System.String)">
            <summary>
            Adds a ThumbnailPart to the WorkbookPart.
            </summary>
            <param name="contentType">the content type of the ThumbnailPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookPart.AddThumbnailPart(DocumentFormat.OpenXml.Packaging.ThumbnailPartType,System.String)">
            <summary>
            Adds a ThumbnailPart to the WorkbookPart.
            </summary>
            <param name="partType">The part type of the ThumbnailPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.CustomXmlParts">
            <summary>
            Gets the CustomXmlParts of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.CalculationChainPart">
            <summary>
            Gets the CalculationChainPart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.CellMetadataPart">
            <summary>
            Gets the CellMetadataPart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.ConnectionsPart">
            <summary>
            Gets the ConnectionsPart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.CustomXmlMappingsPart">
            <summary>
            Gets the CustomXmlMappingsPart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.SharedStringTablePart">
            <summary>
            Gets the SharedStringTablePart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.WorkbookRevisionHeaderPart">
            <summary>
            Gets the WorkbookRevisionHeaderPart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.WorkbookUserDataPart">
            <summary>
            Gets the WorkbookUserDataPart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.WorkbookStylesPart">
            <summary>
            Gets the WorkbookStylesPart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.ThemePart">
            <summary>
            Gets the ThemePart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.ThumbnailPart">
            <summary>
            Gets the ThumbnailPart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.VolatileDependenciesPart">
            <summary>
            Gets the VolatileDependenciesPart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.ChartsheetParts">
            <summary>
            Gets the ChartsheetParts of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.DialogsheetParts">
            <summary>
            Gets the DialogsheetParts of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.ExternalWorkbookParts">
            <summary>
            Gets the ExternalWorkbookParts of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.PivotTableCacheDefinitionParts">
            <summary>
            Gets the PivotTableCacheDefinitionParts of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.WorksheetParts">
            <summary>
            Gets the WorksheetParts of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.ExcelAttachedToolbarsPart">
            <summary>
            Gets the ExcelAttachedToolbarsPart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.VbaProjectPart">
            <summary>
            Gets the VbaProjectPart of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.MacroSheetParts">
            <summary>
            Gets the MacroSheetParts of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.InternationalMacroSheetParts">
            <summary>
            Gets the InternationalMacroSheetParts of the WorkbookPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.CustomDataPropertiesParts">
            <summary>
            Gets the CustomDataPropertiesParts of the WorkbookPart., only available in Office2010
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.SlicerCacheParts">
            <summary>
            Gets the SlicerCacheParts of the WorkbookPart., only available in Office2010
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.TimeLineCacheParts">
            <summary>
            Gets the TimeLineCacheParts of the WorkbookPart., only available in Office2013
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookPart.Workbook">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CalculationChainPart">
            <summary>
            Defines the CalculationChainPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CalculationChainPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CalculationChainPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CalculationChainPart.#ctor">
            <summary>
            Construtor of CalculationChainPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CalculationChainPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CalculationChainPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CalculationChainPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CalculationChainPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CalculationChainPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CalculationChainPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CalculationChainPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CalculationChainPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CalculationChainPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CalculationChainPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CalculationChainPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CalculationChainPart.CalculationChain">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ChartsheetPart">
            <summary>
            Defines the ChartsheetPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartsheetPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartsheetPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartsheetPart.#ctor">
            <summary>
            Construtor of ChartsheetPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartsheetPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartsheetPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the ChartsheetPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartsheetPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the ChartsheetPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartsheetPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the ChartsheetPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartsheetPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the ChartsheetPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartsheetPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartsheetPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartsheetPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartsheetPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart.SpreadsheetPrinterSettingsParts">
            <summary>
            Gets the SpreadsheetPrinterSettingsParts of the ChartsheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart.DrawingsPart">
            <summary>
            Gets the DrawingsPart of the ChartsheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart.VmlDrawingParts">
            <summary>
            Gets the VmlDrawingParts of the ChartsheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart.ImageParts">
            <summary>
            Gets the ImageParts of the ChartsheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartsheetPart.Chartsheet">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart">
            <summary>
            Defines the WorksheetCommentsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.#ctor">
            <summary>
            Construtor of WorksheetCommentsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetCommentsPart.Comments">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ConnectionsPart">
            <summary>
            Defines the ConnectionsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ConnectionsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ConnectionsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ConnectionsPart.#ctor">
            <summary>
            Construtor of ConnectionsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ConnectionsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ConnectionsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ConnectionsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ConnectionsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ConnectionsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ConnectionsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ConnectionsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ConnectionsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ConnectionsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ConnectionsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ConnectionsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ConnectionsPart.Connections">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CustomPropertyPart">
            <summary>
            Defines the CustomPropertyPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.#ctor">
            <summary>
            Construtor of CustomPropertyPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomPropertyPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart">
            <summary>
            Defines the CustomXmlMappingsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.#ctor">
            <summary>
            Construtor of CustomXmlMappingsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlMappingsPart.MapInfo">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.DialogsheetPart">
            <summary>
            Defines the DialogsheetPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DialogsheetPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DialogsheetPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DialogsheetPart.#ctor">
            <summary>
            Construtor of DialogsheetPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DialogsheetPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DialogsheetPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the DialogsheetPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DialogsheetPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DialogsheetPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DialogsheetPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DialogsheetPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart.SpreadsheetPrinterSettingsParts">
            <summary>
            Gets the SpreadsheetPrinterSettingsParts of the DialogsheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart.DrawingsPart">
            <summary>
            Gets the DrawingsPart of the DialogsheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart.VmlDrawingParts">
            <summary>
            Gets the VmlDrawingParts of the DialogsheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the DialogsheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DialogsheetPart.DialogSheet">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.DrawingsPart">
            <summary>
            Defines the DrawingsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.#ctor">
            <summary>
            Construtor of DrawingsPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the DrawingsPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the DrawingsPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the DrawingsPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the DrawingsPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.AddCustomXmlPart(System.String)">
            <summary>
            Adds a CustomXmlPart to the DrawingsPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType)">
            <summary>
            Adds a CustomXmlPart to the DrawingsPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.AddCustomXmlPart(System.String,System.String)">
            <summary>
            Adds a CustomXmlPart to the DrawingsPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DrawingsPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType,System.String)">
            <summary>
            Adds a CustomXmlPart to the DrawingsPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DrawingsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DrawingsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DrawingsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DrawingsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.ChartParts">
            <summary>
            Gets the ChartParts of the DrawingsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the DrawingsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the DrawingsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the DrawingsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the DrawingsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the DrawingsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.ImageParts">
            <summary>
            Gets the ImageParts of the DrawingsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.CustomXmlParts">
            <summary>
            Gets the CustomXmlParts of the DrawingsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.WebExtensionParts">
            <summary>
            Gets the WebExtensionParts of the DrawingsPart., only available in Office2013
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DrawingsPart.WorksheetDrawing">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart">
            <summary>
            Defines the ExternalWorkbookPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.#ctor">
            <summary>
            Construtor of ExternalWorkbookPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExternalWorkbookPart.ExternalLink">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CellMetadataPart">
            <summary>
            Defines the CellMetadataPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CellMetadataPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CellMetadataPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CellMetadataPart.#ctor">
            <summary>
            Construtor of CellMetadataPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CellMetadataPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CellMetadataPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CellMetadataPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CellMetadataPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CellMetadataPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CellMetadataPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CellMetadataPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CellMetadataPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CellMetadataPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CellMetadataPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CellMetadataPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CellMetadataPart.Metadata">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.PivotTablePart">
            <summary>
            Defines the PivotTablePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PivotTablePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PivotTablePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PivotTablePart.#ctor">
            <summary>
            Construtor of PivotTablePart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PivotTablePart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTablePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTablePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTablePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTablePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTablePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTablePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTablePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTablePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTablePart.PivotTableCacheDefinitionPart">
            <summary>
            Gets the PivotTableCacheDefinitionPart of the PivotTablePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTablePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTablePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTablePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTablePart.PivotTableDefinition">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart">
            <summary>
            Defines the PivotTableCacheDefinitionPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.#ctor">
            <summary>
            Construtor of PivotTableCacheDefinitionPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.PivotTableCacheRecordsPart">
            <summary>
            Gets the PivotTableCacheRecordsPart of the PivotTableCacheDefinitionPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheDefinitionPart.PivotCacheDefinition">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart">
            <summary>
            Defines the PivotTableCacheRecordsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.#ctor">
            <summary>
            Construtor of PivotTableCacheRecordsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PivotTableCacheRecordsPart.PivotCacheRecords">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.QueryTablePart">
            <summary>
            Defines the QueryTablePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.QueryTablePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.QueryTablePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.QueryTablePart.#ctor">
            <summary>
            Construtor of QueryTablePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.QueryTablePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QueryTablePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.QueryTablePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QueryTablePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.QueryTablePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QueryTablePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.QueryTablePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QueryTablePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QueryTablePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QueryTablePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QueryTablePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QueryTablePart.QueryTable">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.SharedStringTablePart">
            <summary>
            Defines the SharedStringTablePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.#ctor">
            <summary>
            Construtor of SharedStringTablePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SharedStringTablePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SharedStringTablePart.SharedStringTable">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart">
            <summary>
            Defines the WorkbookRevisionHeaderPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.#ctor">
            <summary>
            Construtor of WorkbookRevisionHeaderPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.WorkbookRevisionLogParts">
            <summary>
            Gets the WorkbookRevisionLogParts of the WorkbookRevisionHeaderPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionHeaderPart.Headers">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart">
            <summary>
            Defines the WorkbookRevisionLogPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.#ctor">
            <summary>
            Construtor of WorkbookRevisionLogPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookRevisionLogPart.Revisions">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart">
            <summary>
            Defines the WorkbookUserDataPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.#ctor">
            <summary>
            Construtor of WorkbookUserDataPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookUserDataPart.Users">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.SingleCellTablePart">
            <summary>
            Defines the SingleCellTablePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.#ctor">
            <summary>
            Construtor of SingleCellTablePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SingleCellTablePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SingleCellTablePart.SingleXmlCells">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart">
            <summary>
            Defines the WorkbookStylesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.#ctor">
            <summary>
            Construtor of WorkbookStylesPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorkbookStylesPart.Stylesheet">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.TableDefinitionPart">
            <summary>
            Defines the TableDefinitionPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.#ctor">
            <summary>
            Construtor of TableDefinitionPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.QueryTableParts">
            <summary>
            Gets the QueryTableParts of the TableDefinitionPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableDefinitionPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableDefinitionPart.Table">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart">
            <summary>
            Defines the VolatileDependenciesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.#ctor">
            <summary>
            Construtor of VolatileDependenciesPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VolatileDependenciesPart.VolatileTypes">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WorksheetPart">
            <summary>
            Defines the WorksheetPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.#ctor">
            <summary>
            Construtor of WorksheetPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WorksheetPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WorksheetPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WorksheetPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WorksheetPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the WorksheetPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the WorksheetPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the WorksheetPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the WorksheetPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the WorksheetPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the WorksheetPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddCustomPropertyPart(System.String)">
            <summary>
            Adds a CustomPropertyPart to the WorksheetPart.
            </summary>
            <param name="contentType">the content type of the CustomPropertyPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddCustomPropertyPart(DocumentFormat.OpenXml.Packaging.CustomPropertyPartType)">
            <summary>
            Adds a CustomPropertyPart to the WorksheetPart.
            </summary>
            <param name="partType">The part type of the CustomPropertyPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddCustomPropertyPart(System.String,System.String)">
            <summary>
            Adds a CustomPropertyPart to the WorksheetPart.
            </summary>
            <param name="contentType">the content type of the CustomPropertyPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddCustomPropertyPart(DocumentFormat.OpenXml.Packaging.CustomPropertyPartType,System.String)">
            <summary>
            Adds a CustomPropertyPart to the WorksheetPart.
            </summary>
            <param name="partType">The part type of the CustomPropertyPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddEmbeddedControlPersistenceBinaryDataPart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the WorksheetPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the WorksheetPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddEmbeddedControlPersistenceBinaryDataPart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the WorksheetPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetPart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the WorksheetPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.SpreadsheetPrinterSettingsParts">
            <summary>
            Gets the SpreadsheetPrinterSettingsParts of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.DrawingsPart">
            <summary>
            Gets the DrawingsPart of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.VmlDrawingParts">
            <summary>
            Gets the VmlDrawingParts of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.WorksheetCommentsPart">
            <summary>
            Gets the WorksheetCommentsPart of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.PivotTableParts">
            <summary>
            Gets the PivotTableParts of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.SingleCellTablePart">
            <summary>
            Gets the SingleCellTablePart of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.TableDefinitionParts">
            <summary>
            Gets the TableDefinitionParts of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.ControlPropertiesParts">
            <summary>
            Gets the ControlPropertiesParts of the WorksheetPart., only available in Office2010
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.ImageParts">
            <summary>
            Gets the ImageParts of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.CustomPropertyParts">
            <summary>
            Gets the CustomPropertyParts of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.WorksheetSortMapPart">
            <summary>
            Gets the WorksheetSortMapPart of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.QueryTableParts">
            <summary>
            Gets the QueryTableParts of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.EmbeddedControlPersistenceBinaryDataParts">
            <summary>
            Gets the EmbeddedControlPersistenceBinaryDataParts of the WorksheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.SlicersParts">
            <summary>
            Gets the SlicersParts of the WorksheetPart., only available in Office2010
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.TimeLineParts">
            <summary>
            Gets the TimeLineParts of the WorksheetPart., only available in Office2013
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetPart.Worksheet">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart">
            <summary>
            Defines the ExcelAttachedToolbarsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.#ctor">
            <summary>
            Construtor of ExcelAttachedToolbarsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ExcelAttachedToolbarsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart">
            <summary>
            Defines the WorksheetSortMapPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.#ctor">
            <summary>
            Construtor of WorksheetSortMapPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WorksheetSortMapPart.WorksheetSortMap">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.PresentationPart">
            <summary>
            Defines the PresentationPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.#ctor">
            <summary>
            Construtor of PresentationPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.AddCustomXmlPart(System.String)">
            <summary>
            Adds a CustomXmlPart to the PresentationPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType)">
            <summary>
            Adds a CustomXmlPart to the PresentationPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.AddCustomXmlPart(System.String,System.String)">
            <summary>
            Adds a CustomXmlPart to the PresentationPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType,System.String)">
            <summary>
            Adds a CustomXmlPart to the PresentationPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.AddFontPart(System.String)">
            <summary>
            Adds a FontPart to the PresentationPart.
            </summary>
            <param name="contentType">the content type of the FontPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.AddFontPart(DocumentFormat.OpenXml.Packaging.FontPartType)">
            <summary>
            Adds a FontPart to the PresentationPart.
            </summary>
            <param name="partType">The part type of the FontPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.AddFontPart(System.String,System.String)">
            <summary>
            Adds a FontPart to the PresentationPart.
            </summary>
            <param name="contentType">the content type of the FontPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPart.AddFontPart(DocumentFormat.OpenXml.Packaging.FontPartType,System.String)">
            <summary>
            Adds a FontPart to the PresentationPart.
            </summary>
            <param name="partType">The part type of the FontPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PresentationPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PresentationPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PresentationPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.CustomXmlParts">
            <summary>
            Gets the CustomXmlParts of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.FontParts">
            <summary>
            Gets the FontParts of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.PresentationPropertiesPart">
            <summary>
            Gets the PresentationPropertiesPart of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.TableStylesPart">
            <summary>
            Gets the TableStylesPart of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.ThemePart">
            <summary>
            Gets the ThemePart of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.ViewPropertiesPart">
            <summary>
            Gets the ViewPropertiesPart of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.NotesMasterPart">
            <summary>
            Gets the NotesMasterPart of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.SlideParts">
            <summary>
            Gets the SlideParts of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.SlideMasterParts">
            <summary>
            Gets the SlideMasterParts of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.UserDefinedTagsPart">
            <summary>
            Gets the UserDefinedTagsPart of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.CommentAuthorsPart">
            <summary>
            Gets the CommentAuthorsPart of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.HandoutMasterPart">
            <summary>
            Gets the HandoutMasterPart of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.LegacyDiagramTextInfoPart">
            <summary>
            Gets the LegacyDiagramTextInfoPart of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.VbaProjectPart">
            <summary>
            Gets the VbaProjectPart of the PresentationPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPart.Presentation">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart">
            <summary>
            Defines the CommentAuthorsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.#ctor">
            <summary>
            Construtor of CommentAuthorsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CommentAuthorsPart.CommentAuthorList">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.SlideCommentsPart">
            <summary>
            Defines the SlideCommentsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.#ctor">
            <summary>
            Construtor of SlideCommentsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideCommentsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideCommentsPart.CommentList">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.HandoutMasterPart">
            <summary>
            Defines the HandoutMasterPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.#ctor">
            <summary>
            Construtor of HandoutMasterPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddCustomXmlPart(System.String)">
            <summary>
            Adds a CustomXmlPart to the HandoutMasterPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType)">
            <summary>
            Adds a CustomXmlPart to the HandoutMasterPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddCustomXmlPart(System.String,System.String)">
            <summary>
            Adds a CustomXmlPart to the HandoutMasterPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType,System.String)">
            <summary>
            Adds a CustomXmlPart to the HandoutMasterPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the HandoutMasterPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the HandoutMasterPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the HandoutMasterPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the HandoutMasterPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the HandoutMasterPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the HandoutMasterPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the HandoutMasterPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the HandoutMasterPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the HandoutMasterPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the HandoutMasterPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.CustomXmlParts">
            <summary>
            Gets the CustomXmlParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.ChartParts">
            <summary>
            Gets the ChartParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.ImageParts">
            <summary>
            Gets the ImageParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.VmlDrawingParts">
            <summary>
            Gets the VmlDrawingParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.EmbeddedControlPersistenceBinaryDataParts">
            <summary>
            Gets the EmbeddedControlPersistenceBinaryDataParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.ThemePart">
            <summary>
            Gets the ThemePart of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.UserDefinedTagsParts">
            <summary>
            Gets the UserDefinedTagsParts of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.SlidePart">
            <summary>
            Gets the SlidePart of the HandoutMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.HandoutMasterPart.HandoutMaster">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.NotesMasterPart">
            <summary>
            Defines the NotesMasterPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.#ctor">
            <summary>
            Construtor of NotesMasterPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddCustomXmlPart(System.String)">
            <summary>
            Adds a CustomXmlPart to the NotesMasterPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType)">
            <summary>
            Adds a CustomXmlPart to the NotesMasterPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddCustomXmlPart(System.String,System.String)">
            <summary>
            Adds a CustomXmlPart to the NotesMasterPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType,System.String)">
            <summary>
            Adds a CustomXmlPart to the NotesMasterPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the NotesMasterPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the NotesMasterPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the NotesMasterPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the NotesMasterPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the NotesMasterPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the NotesMasterPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the NotesMasterPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the NotesMasterPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the NotesMasterPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the NotesMasterPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NotesMasterPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NotesMasterPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NotesMasterPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NotesMasterPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.CustomXmlParts">
            <summary>
            Gets the CustomXmlParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.ChartParts">
            <summary>
            Gets the ChartParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.ImageParts">
            <summary>
            Gets the ImageParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.VmlDrawingParts">
            <summary>
            Gets the VmlDrawingParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.EmbeddedControlPersistenceBinaryDataParts">
            <summary>
            Gets the EmbeddedControlPersistenceBinaryDataParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.ThemePart">
            <summary>
            Gets the ThemePart of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.UserDefinedTagsParts">
            <summary>
            Gets the UserDefinedTagsParts of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.SlidePart">
            <summary>
            Gets the SlidePart of the NotesMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesMasterPart.NotesMaster">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.NotesSlidePart">
            <summary>
            Defines the NotesSlidePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.#ctor">
            <summary>
            Construtor of NotesSlidePart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddCustomXmlPart(System.String)">
            <summary>
            Adds a CustomXmlPart to the NotesSlidePart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType)">
            <summary>
            Adds a CustomXmlPart to the NotesSlidePart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddCustomXmlPart(System.String,System.String)">
            <summary>
            Adds a CustomXmlPart to the NotesSlidePart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType,System.String)">
            <summary>
            Adds a CustomXmlPart to the NotesSlidePart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the NotesSlidePart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the NotesSlidePart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the NotesSlidePart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the NotesSlidePart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the NotesSlidePart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the NotesSlidePart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddEmbeddedControlPersistenceBinaryDataPart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the NotesSlidePart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the NotesSlidePart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddEmbeddedControlPersistenceBinaryDataPart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the NotesSlidePart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.NotesSlidePart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the NotesSlidePart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NotesSlidePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NotesSlidePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NotesSlidePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.NotesSlidePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.CustomXmlParts">
            <summary>
            Gets the CustomXmlParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.ChartParts">
            <summary>
            Gets the ChartParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.ImageParts">
            <summary>
            Gets the ImageParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.VmlDrawingParts">
            <summary>
            Gets the VmlDrawingParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.EmbeddedControlPersistenceBinaryDataParts">
            <summary>
            Gets the EmbeddedControlPersistenceBinaryDataParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.NotesMasterPart">
            <summary>
            Gets the NotesMasterPart of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.ThemeOverridePart">
            <summary>
            Gets the ThemeOverridePart of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.SlidePart">
            <summary>
            Gets the SlidePart of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.UserDefinedTagsParts">
            <summary>
            Gets the UserDefinedTagsParts of the NotesSlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.NotesSlidePart.NotesSlide">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart">
            <summary>
            Defines the PresentationPropertiesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.#ctor">
            <summary>
            Construtor of PresentationPropertiesPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationPropertiesPart.PresentationProperties">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.SlidePart">
            <summary>
            Defines the SlidePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.#ctor">
            <summary>
            Construtor of SlidePart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddCustomXmlPart(System.String)">
            <summary>
            Adds a CustomXmlPart to the SlidePart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType)">
            <summary>
            Adds a CustomXmlPart to the SlidePart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddCustomXmlPart(System.String,System.String)">
            <summary>
            Adds a CustomXmlPart to the SlidePart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType,System.String)">
            <summary>
            Adds a CustomXmlPart to the SlidePart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the SlidePart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the SlidePart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the SlidePart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the SlidePart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the SlidePart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the SlidePart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddEmbeddedControlPersistenceBinaryDataPart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlidePart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlidePart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddEmbeddedControlPersistenceBinaryDataPart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlidePart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlidePart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlidePart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlidePart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlidePart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlidePart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddMediaReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlidePart.AddMediaReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlidePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlidePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlidePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlidePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.CustomXmlParts">
            <summary>
            Gets the CustomXmlParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.ChartParts">
            <summary>
            Gets the ChartParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.ImageParts">
            <summary>
            Gets the ImageParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.VmlDrawingParts">
            <summary>
            Gets the VmlDrawingParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.EmbeddedControlPersistenceBinaryDataParts">
            <summary>
            Gets the EmbeddedControlPersistenceBinaryDataParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.SlideCommentsPart">
            <summary>
            Gets the SlideCommentsPart of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.NotesSlidePart">
            <summary>
            Gets the NotesSlidePart of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.ThemeOverridePart">
            <summary>
            Gets the ThemeOverridePart of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.SlideLayoutPart">
            <summary>
            Gets the SlideLayoutPart of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.SlideSyncDataPart">
            <summary>
            Gets the SlideSyncDataPart of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.UserDefinedTagsParts">
            <summary>
            Gets the UserDefinedTagsParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.SlideParts">
            <summary>
            Gets the SlideParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the SlidePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.WebExtensionParts">
            <summary>
            Gets the WebExtensionParts of the SlidePart., only available in Office2013
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlidePart.Slide">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.SlideLayoutPart">
            <summary>
            Defines the SlideLayoutPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.#ctor">
            <summary>
            Construtor of SlideLayoutPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddCustomXmlPart(System.String)">
            <summary>
            Adds a CustomXmlPart to the SlideLayoutPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType)">
            <summary>
            Adds a CustomXmlPart to the SlideLayoutPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddCustomXmlPart(System.String,System.String)">
            <summary>
            Adds a CustomXmlPart to the SlideLayoutPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType,System.String)">
            <summary>
            Adds a CustomXmlPart to the SlideLayoutPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the SlideLayoutPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the SlideLayoutPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the SlideLayoutPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the SlideLayoutPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the SlideLayoutPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the SlideLayoutPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddEmbeddedControlPersistenceBinaryDataPart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlideLayoutPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlideLayoutPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddEmbeddedControlPersistenceBinaryDataPart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlideLayoutPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlideLayoutPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlideLayoutPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlideLayoutPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlideLayoutPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlideLayoutPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddMediaReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.AddMediaReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.CustomXmlParts">
            <summary>
            Gets the CustomXmlParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.ChartParts">
            <summary>
            Gets the ChartParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.ImageParts">
            <summary>
            Gets the ImageParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.VmlDrawingParts">
            <summary>
            Gets the VmlDrawingParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.EmbeddedControlPersistenceBinaryDataParts">
            <summary>
            Gets the EmbeddedControlPersistenceBinaryDataParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.SlideParts">
            <summary>
            Gets the SlideParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.SlideMasterPart">
            <summary>
            Gets the SlideMasterPart of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.ThemeOverridePart">
            <summary>
            Gets the ThemeOverridePart of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.UserDefinedTagsParts">
            <summary>
            Gets the UserDefinedTagsParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the SlideLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideLayoutPart.SlideLayout">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.SlideMasterPart">
            <summary>
            Defines the SlideMasterPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.#ctor">
            <summary>
            Construtor of SlideMasterPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddCustomXmlPart(System.String)">
            <summary>
            Adds a CustomXmlPart to the SlideMasterPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType)">
            <summary>
            Adds a CustomXmlPart to the SlideMasterPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddCustomXmlPart(System.String,System.String)">
            <summary>
            Adds a CustomXmlPart to the SlideMasterPart.
            </summary>
            <param name="contentType">the content type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddCustomXmlPart(DocumentFormat.OpenXml.Packaging.CustomXmlPartType,System.String)">
            <summary>
            Adds a CustomXmlPart to the SlideMasterPart.
            </summary>
            <param name="partType">The part type of the CustomXmlPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddAudioReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.AudioReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the SlideMasterPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the SlideMasterPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the SlideMasterPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the SlideMasterPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the SlideMasterPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the SlideMasterPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlideMasterPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlideMasterPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlideMasterPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the SlideMasterPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlideMasterPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlideMasterPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlideMasterPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the SlideMasterPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddMediaReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideMasterPart.AddMediaReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.MediaReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideMasterPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideMasterPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideMasterPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideMasterPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.CustomXmlParts">
            <summary>
            Gets the CustomXmlParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.ChartParts">
            <summary>
            Gets the ChartParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.ImageParts">
            <summary>
            Gets the ImageParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.VmlDrawingParts">
            <summary>
            Gets the VmlDrawingParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.EmbeddedControlPersistenceBinaryDataParts">
            <summary>
            Gets the EmbeddedControlPersistenceBinaryDataParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.ThemePart">
            <summary>
            Gets the ThemePart of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.SlideParts">
            <summary>
            Gets the SlideParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.SlideLayoutParts">
            <summary>
            Gets the SlideLayoutParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.UserDefinedTagsParts">
            <summary>
            Gets the UserDefinedTagsParts of the SlideMasterPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideMasterPart.SlideMaster">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart">
            <summary>
            Defines the SlideSyncDataPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.#ctor">
            <summary>
            Construtor of SlideSyncDataPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlideSyncDataPart.SlideSyncProperties">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart">
            <summary>
            Defines the UserDefinedTagsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.#ctor">
            <summary>
            Construtor of UserDefinedTagsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.UserDefinedTagsPart.TagList">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart">
            <summary>
            Defines the ViewPropertiesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.#ctor">
            <summary>
            Construtor of ViewPropertiesPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.SlideParts">
            <summary>
            Gets the SlideParts of the ViewPropertiesPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ViewPropertiesPart.ViewProperties">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart">
            <summary>
            Defines the LegacyDiagramTextInfoPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.#ctor">
            <summary>
            Construtor of LegacyDiagramTextInfoPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextInfoPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart">
            <summary>
            Defines the LegacyDiagramTextPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.#ctor">
            <summary>
            Construtor of LegacyDiagramTextPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.LegacyDiagramTextPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ChartPart">
            <summary>
            Defines the ChartPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartPart.#ctor">
            <summary>
            Construtor of ChartPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the ChartPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the ChartPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the ChartPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the ChartPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the ChartPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.ChartDrawingPart">
            <summary>
            Gets the ChartDrawingPart of the ChartPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.EmbeddedPackagePart">
            <summary>
            Gets the EmbeddedPackagePart of the ChartPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.ImageParts">
            <summary>
            Gets the ImageParts of the ChartPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.ThemeOverridePart">
            <summary>
            Gets the ThemeOverridePart of the ChartPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.ChartStyleParts">
            <summary>
            Gets the ChartStyleParts of the ChartPart., only available in Office2013
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.ChartColorStyleParts">
            <summary>
            Gets the ChartColorStyleParts of the ChartPart., only available in Office2013
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartPart.ChartSpace">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ChartDrawingPart">
            <summary>
            Defines the ChartDrawingPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.#ctor">
            <summary>
            Construtor of ChartDrawingPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the ChartDrawingPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the ChartDrawingPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the ChartDrawingPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the ChartDrawingPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.ChartPart">
            <summary>
            Gets the ChartPart of the ChartDrawingPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.ImageParts">
            <summary>
            Gets the ImageParts of the ChartDrawingPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartDrawingPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartDrawingPart.UserShapes">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.DiagramColorsPart">
            <summary>
            Defines the DiagramColorsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.#ctor">
            <summary>
            Construtor of DiagramColorsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramColorsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramColorsPart.ColorsDefinition">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.DiagramDataPart">
            <summary>
            Defines the DiagramDataPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramDataPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramDataPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramDataPart.#ctor">
            <summary>
            Construtor of DiagramDataPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramDataPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramDataPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the DiagramDataPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramDataPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the DiagramDataPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramDataPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the DiagramDataPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramDataPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the DiagramDataPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramDataPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramDataPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramDataPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramDataPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramDataPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramDataPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramDataPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramDataPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramDataPart.ImageParts">
            <summary>
            Gets the ImageParts of the DiagramDataPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramDataPart.SlideParts">
            <summary>
            Gets the SlideParts of the DiagramDataPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramDataPart.WorksheetParts">
            <summary>
            Gets the WorksheetParts of the DiagramDataPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramDataPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramDataPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramDataPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramDataPart.DataModelRoot">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart">
            <summary>
            Defines the DiagramLayoutDefinitionPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.#ctor">
            <summary>
            Construtor of DiagramLayoutDefinitionPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the DiagramLayoutDefinitionPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the DiagramLayoutDefinitionPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the DiagramLayoutDefinitionPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the DiagramLayoutDefinitionPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.ImageParts">
            <summary>
            Gets the ImageParts of the DiagramLayoutDefinitionPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramLayoutDefinitionPart.LayoutDefinition">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.DiagramStylePart">
            <summary>
            Defines the DiagramStylePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramStylePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramStylePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramStylePart.#ctor">
            <summary>
            Construtor of DiagramStylePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramStylePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramStylePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramStylePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramStylePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramStylePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramStylePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramStylePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramStylePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramStylePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramStylePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramStylePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramStylePart.StyleDefinition">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ThemePart">
            <summary>
            Defines the ThemePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemePart.#ctor">
            <summary>
            Construtor of ThemePart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemePart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemePart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the ThemePart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemePart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the ThemePart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemePart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the ThemePart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemePart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the ThemePart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThemePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThemePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThemePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThemePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemePart.ImageParts">
            <summary>
            Gets the ImageParts of the ThemePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemePart.Theme">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ThemeOverridePart">
            <summary>
            Defines the ThemeOverridePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.#ctor">
            <summary>
            Construtor of ThemeOverridePart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the ThemeOverridePart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the ThemeOverridePart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the ThemeOverridePart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the ThemeOverridePart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.ImageParts">
            <summary>
            Gets the ImageParts of the ThemeOverridePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemeOverridePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ThemeOverridePart.ThemeOverride">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.TableStylesPart">
            <summary>
            Defines the TableStylesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TableStylesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TableStylesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TableStylesPart.#ctor">
            <summary>
            Construtor of TableStylesPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TableStylesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableStylesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TableStylesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableStylesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TableStylesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableStylesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TableStylesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableStylesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableStylesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableStylesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableStylesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TableStylesPart.TableStyleList">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CustomXmlPart">
            <summary>
            Defines the CustomXmlPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomXmlPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomXmlPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomXmlPart.#ctor">
            <summary>
            Construtor of CustomXmlPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomXmlPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPart.CustomXmlPropertiesPart">
            <summary>
            Gets the CustomXmlPropertiesPart of the CustomXmlPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart">
            <summary>
            Defines the CustomXmlPropertiesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.#ctor">
            <summary>
            Construtor of CustomXmlPropertiesPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomXmlPropertiesPart.DataStoreItem">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart">
            <summary>
            Defines the EmbeddedControlPersistencePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.#ctor">
            <summary>
            Construtor of EmbeddedControlPersistencePart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.AddEmbeddedControlPersistenceBinaryDataPart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the EmbeddedControlPersistencePart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the EmbeddedControlPersistencePart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.AddEmbeddedControlPersistenceBinaryDataPart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the EmbeddedControlPersistencePart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.AddEmbeddedControlPersistenceBinaryDataPart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistenceBinaryDataPart to the EmbeddedControlPersistencePart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistenceBinaryDataPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.EmbeddedControlPersistenceBinaryDataParts">
            <summary>
            Gets the EmbeddedControlPersistenceBinaryDataParts of the EmbeddedControlPersistencePart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart">
            <summary>
            Defines the EmbeddedObjectPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.#ctor">
            <summary>
            Construtor of EmbeddedObjectPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedObjectPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart">
            <summary>
            Defines the EmbeddedPackagePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.#ctor">
            <summary>
            Construtor of EmbeddedPackagePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedPackagePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.FontPart">
            <summary>
            Defines the FontPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FontPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FontPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.FontPart.#ctor">
            <summary>
            Construtor of FontPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FontPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FontPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FontPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FontPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.FontPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart">
            <summary>
            Defines the SpreadsheetPrinterSettingsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.#ctor">
            <summary>
            Construtor of SpreadsheetPrinterSettingsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetPrinterSettingsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart">
            <summary>
            Defines the WordprocessingPrinterSettingsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.#ctor">
            <summary>
            Construtor of WordprocessingPrinterSettingsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPrinterSettingsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ImagePart">
            <summary>
            Defines the ImagePart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ImagePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ImagePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ImagePart.#ctor">
            <summary>
            Construtor of ImagePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ImagePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ImagePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ImagePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ImagePart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ImagePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.VmlDrawingPart">
            <summary>
            Defines the VmlDrawingPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.#ctor">
            <summary>
            Construtor of VmlDrawingPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the VmlDrawingPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the VmlDrawingPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the VmlDrawingPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the VmlDrawingPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.ImageParts">
            <summary>
            Gets the ImageParts of the VmlDrawingPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.LegacyDiagramTextParts">
            <summary>
            Gets the LegacyDiagramTextParts of the VmlDrawingPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VmlDrawingPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart">
            <summary>
            Defines the EmbeddedControlPersistenceBinaryDataPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.#ctor">
            <summary>
            Construtor of EmbeddedControlPersistenceBinaryDataPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.TargetFileExtensionConstant">
            <summary>
            The fixed value of the TargetFileExtension
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.TargetFileExtension">
            <summary>
            Gets the TargetFileExtension.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart">
            <summary>
            Defines the QuickAccessToolbarCustomizationsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.#ctor">
            <summary>
            Construtor of QuickAccessToolbarCustomizationsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.QuickAccessToolbarCustomizationsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart">
            <summary>
            Defines the RibbonExtensibilityPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.#ctor">
            <summary>
            Construtor of RibbonExtensibilityPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the RibbonExtensibilityPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the RibbonExtensibilityPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the RibbonExtensibilityPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the RibbonExtensibilityPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.ImageParts">
            <summary>
            Gets the ImageParts of the RibbonExtensibilityPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonExtensibilityPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.VbaProjectPart">
            <summary>
            Defines the VbaProjectPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VbaProjectPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VbaProjectPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VbaProjectPart.#ctor">
            <summary>
            Construtor of VbaProjectPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VbaProjectPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VbaProjectPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaProjectPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VbaProjectPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaProjectPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VbaProjectPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaProjectPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VbaProjectPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaProjectPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaProjectPart.VbaDataPart">
            <summary>
            Gets the VbaDataPart of the VbaProjectPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaProjectPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.VbaDataPart">
            <summary>
            Defines the VbaDataPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VbaDataPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VbaDataPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.VbaDataPart.#ctor">
            <summary>
            Construtor of VbaDataPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VbaDataPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaDataPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VbaDataPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaDataPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VbaDataPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaDataPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.VbaDataPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaDataPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaDataPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaDataPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaDataPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.VbaDataPart.VbaSuppData">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.MacroSheetPart">
            <summary>
            Defines the MacroSheetPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.#ctor">
            <summary>
            Construtor of MacroSheetPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.AddCustomPropertyPart(System.String)">
            <summary>
            Adds a CustomPropertyPart to the MacroSheetPart.
            </summary>
            <param name="contentType">the content type of the CustomPropertyPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.AddCustomPropertyPart(DocumentFormat.OpenXml.Packaging.CustomPropertyPartType)">
            <summary>
            Adds a CustomPropertyPart to the MacroSheetPart.
            </summary>
            <param name="partType">The part type of the CustomPropertyPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.AddCustomPropertyPart(System.String,System.String)">
            <summary>
            Adds a CustomPropertyPart to the MacroSheetPart.
            </summary>
            <param name="contentType">the content type of the CustomPropertyPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.AddCustomPropertyPart(DocumentFormat.OpenXml.Packaging.CustomPropertyPartType,System.String)">
            <summary>
            Adds a CustomPropertyPart to the MacroSheetPart.
            </summary>
            <param name="partType">The part type of the CustomPropertyPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the MacroSheetPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the MacroSheetPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the MacroSheetPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the MacroSheetPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the MacroSheetPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.MacroSheetPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the MacroSheetPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MacroSheetPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MacroSheetPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MacroSheetPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MacroSheetPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.SpreadsheetPrinterSettingsParts">
            <summary>
            Gets the SpreadsheetPrinterSettingsParts of the MacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.DrawingsPart">
            <summary>
            Gets the DrawingsPart of the MacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.VmlDrawingParts">
            <summary>
            Gets the VmlDrawingParts of the MacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.WorksheetCommentsPart">
            <summary>
            Gets the WorksheetCommentsPart of the MacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.CustomPropertyParts">
            <summary>
            Gets the CustomPropertyParts of the MacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the MacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the MacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.ImageParts">
            <summary>
            Gets the ImageParts of the MacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.MacroSheetPart.Macrosheet">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart">
            <summary>
            Defines the InternationalMacroSheetPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.#ctor">
            <summary>
            Construtor of InternationalMacroSheetPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.AddCustomPropertyPart(System.String)">
            <summary>
            Adds a CustomPropertyPart to the InternationalMacroSheetPart.
            </summary>
            <param name="contentType">the content type of the CustomPropertyPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.AddCustomPropertyPart(DocumentFormat.OpenXml.Packaging.CustomPropertyPartType)">
            <summary>
            Adds a CustomPropertyPart to the InternationalMacroSheetPart.
            </summary>
            <param name="partType">The part type of the CustomPropertyPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.AddCustomPropertyPart(System.String,System.String)">
            <summary>
            Adds a CustomPropertyPart to the InternationalMacroSheetPart.
            </summary>
            <param name="contentType">the content type of the CustomPropertyPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.AddCustomPropertyPart(DocumentFormat.OpenXml.Packaging.CustomPropertyPartType,System.String)">
            <summary>
            Adds a CustomPropertyPart to the InternationalMacroSheetPart.
            </summary>
            <param name="partType">The part type of the CustomPropertyPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the InternationalMacroSheetPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the InternationalMacroSheetPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the InternationalMacroSheetPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the InternationalMacroSheetPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the InternationalMacroSheetPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the InternationalMacroSheetPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.SpreadsheetPrinterSettingsParts">
            <summary>
            Gets the SpreadsheetPrinterSettingsParts of the InternationalMacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.DrawingsPart">
            <summary>
            Gets the DrawingsPart of the InternationalMacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.VmlDrawingParts">
            <summary>
            Gets the VmlDrawingParts of the InternationalMacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.WorksheetCommentsPart">
            <summary>
            Gets the WorksheetCommentsPart of the InternationalMacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.CustomPropertyParts">
            <summary>
            Gets the CustomPropertyParts of the InternationalMacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the InternationalMacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the InternationalMacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.ImageParts">
            <summary>
            Gets the ImageParts of the InternationalMacroSheetPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.InternationalMacroSheetPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart">
            <summary>
            Defines the DiagramPersistLayoutPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.#ctor">
            <summary>
            Construtor of DiagramPersistLayoutPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the DiagramPersistLayoutPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the DiagramPersistLayoutPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the DiagramPersistLayoutPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the DiagramPersistLayoutPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.ImageParts">
            <summary>
            Gets the ImageParts of the DiagramPersistLayoutPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.DiagramPersistLayoutPart.Drawing">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart">
            <summary>
            Defines the StylesWithEffectsPart, this part is only available in Office2010.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.#ctor">
            <summary>
            Construtor of StylesWithEffectsPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StylesWithEffectsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart">
            <summary>
            Defines the RibbonAndBackstageCustomizationsPart, this part is only available in Office2010.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.#ctor">
            <summary>
            Construtor of RibbonAndBackstageCustomizationsPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the RibbonAndBackstageCustomizationsPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the RibbonAndBackstageCustomizationsPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the RibbonAndBackstageCustomizationsPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the RibbonAndBackstageCustomizationsPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.ImageParts">
            <summary>
            Gets the ImageParts of the RibbonAndBackstageCustomizationsPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart.CustomUI">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart">
            <summary>
            Defines the ControlPropertiesPart, this part is only available in Office2010.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.#ctor">
            <summary>
            Construtor of ControlPropertiesPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ControlPropertiesPart.FormControlProperties">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart">
            <summary>
            Defines the CustomDataPropertiesPart, this part is only available in Office2010.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.#ctor">
            <summary>
            Construtor of CustomDataPropertiesPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.CustomDataPart">
            <summary>
            Gets the CustomDataPart of the CustomDataPropertiesPart., only available in Office2010
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart.DatastoreItem">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CustomDataPart">
            <summary>
            Defines the CustomDataPart, this part is only available in Office2010.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomDataPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomDataPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomDataPart.#ctor">
            <summary>
            Construtor of CustomDataPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomDataPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomDataPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomDataPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomDataPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.CustomDataPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomDataPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.SlicerCachePart">
            <summary>
            Defines the SlicerCachePart, this part is only available in Office2010.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlicerCachePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlicerCachePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlicerCachePart.#ctor">
            <summary>
            Construtor of SlicerCachePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlicerCachePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicerCachePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlicerCachePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicerCachePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlicerCachePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicerCachePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlicerCachePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicerCachePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlicerCachePart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicerCachePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicerCachePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicerCachePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicerCachePart.SlicerCacheDefinition">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.SlicersPart">
            <summary>
            Defines the SlicersPart, this part is only available in Office2010.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlicersPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlicersPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlicersPart.#ctor">
            <summary>
            Construtor of SlicersPart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlicersPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicersPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlicersPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicersPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlicersPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicersPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.SlicersPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicersPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SlicersPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicersPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicersPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicersPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SlicersPart.Slicers">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WebExtensionPart">
            <summary>
            Defines the WebExtensionPart, this part is only available in Office2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExtensionPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExtensionPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExtensionPart.#ctor">
            <summary>
            Construtor of WebExtensionPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExtensionPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExtensionPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the WebExtensionPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExtensionPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the WebExtensionPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExtensionPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the WebExtensionPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExtensionPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the WebExtensionPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebExtensionPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExtensionPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebExtensionPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExtensionPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebExtensionPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExtensionPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebExtensionPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExtensionPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExtensionPart.ImageParts">
            <summary>
            Gets the ImageParts of the WebExtensionPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExtensionPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExtensionPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExtensionPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExtensionPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExtensionPart.WebExtension">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart">
            <summary>
            Defines the WebExTaskpanesPart, this part is only available in Office2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.#ctor">
            <summary>
            Construtor of WebExTaskpanesPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.TargetPathOfWordConstant">
            <summary>
            The fixed value of the TargetPathOfWord
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.TargetPathOfWord">
            <summary>
            Gets the TargetPathOfWord.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.TargetPathOfExcelConstant">
            <summary>
            The fixed value of the TargetPathOfExcel
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.TargetPathOfExcel">
            <summary>
            Gets the TargetPathOfExcel.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.TargetPathOfPPTConstant">
            <summary>
            The fixed value of the TargetPathOfPPT
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.TargetPathOfPPT">
            <summary>
            Gets the TargetPathOfPPT.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.WebExtensionParts">
            <summary>
            Gets the WebExtensionParts of the WebExTaskpanesPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WebExTaskpanesPart.Taskpanes">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart">
            <summary>
            Defines the WordprocessingCommentsExPart, this part is only available in Office2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.#ctor">
            <summary>
            Construtor of WordprocessingCommentsExPart
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.CreatePartCore(System.String)">
            <summary>
            Create an instance of OpenXmlPart according to the given relationship type
            </summary>
            <param name="relationshipType">Relationship type</param>
            <returns>An instance of OpenXmlPart</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddAlternativeFormatImportPart(System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the WordprocessingCommentsExPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType)">
            <summary>
            Adds a AlternativeFormatImportPart to the WordprocessingCommentsExPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddAlternativeFormatImportPart(System.String,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the WordprocessingCommentsExPart.
            </summary>
            <param name="contentType">the content type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddAlternativeFormatImportPart(DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType,System.String)">
            <summary>
            Adds a AlternativeFormatImportPart to the WordprocessingCommentsExPart.
            </summary>
            <param name="partType">The part type of the AlternativeFormatImportPart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddEmbeddedControlPersistencePart(System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WordprocessingCommentsExPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WordprocessingCommentsExPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddEmbeddedControlPersistencePart(System.String,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WordprocessingCommentsExPart.
            </summary>
            <param name="contentType">the content type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddEmbeddedControlPersistencePart(DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType,System.String)">
            <summary>
            Adds a EmbeddedControlPersistencePart to the WordprocessingCommentsExPart.
            </summary>
            <param name="partType">The part type of the EmbeddedControlPersistencePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddEmbeddedObjectPart(System.String)">
            <summary>
            Adds a EmbeddedObjectPart to the WordprocessingCommentsExPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedObjectPart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddEmbeddedPackagePart(System.String)">
            <summary>
            Adds a EmbeddedPackagePart to the WordprocessingCommentsExPart.
            </summary>
            <param name="contentType">The content type of the EmbeddedPackagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddImagePart(System.String)">
            <summary>
            Adds a ImagePart to the WordprocessingCommentsExPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType)">
            <summary>
            Adds a ImagePart to the WordprocessingCommentsExPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddImagePart(System.String,System.String)">
            <summary>
            Adds a ImagePart to the WordprocessingCommentsExPart.
            </summary>
            <param name="contentType">the content type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddImagePart(DocumentFormat.OpenXml.Packaging.ImagePartType,System.String)">
            <summary>
            Adds a ImagePart to the WordprocessingCommentsExPart.
            </summary>
            <param name="partType">The part type of the ImagePart.</param>
            <param name="id">The relationship id.</param>
            <returns>The newly added part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AddVideoReferenceRelationship(DocumentFormat.OpenXml.Packaging.MediaDataPart,System.String)">
            <summary>
            Adds a new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/> to the specified <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.
            </summary>
            <param name="mediaDataPart">The specified target <see cref="T:DocumentFormat.OpenXml.Packaging.MediaDataPart"/>.</param>
            <param name="id">The desired relationship ID. </param>
            <returns>The new <see cref="T:DocumentFormat.OpenXml.Packaging.VideoReferenceRelationship"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="mediaDataPart"/> is null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="id"/> is null.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the specified <paramref name="mediaDataPart"/> is not in this document.</exception>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.AlternativeFormatImportParts">
            <summary>
            Gets the AlternativeFormatImportParts of the WordprocessingCommentsExPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.ChartParts">
            <summary>
            Gets the ChartParts of the WordprocessingCommentsExPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.DiagramColorsParts">
            <summary>
            Gets the DiagramColorsParts of the WordprocessingCommentsExPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.DiagramDataParts">
            <summary>
            Gets the DiagramDataParts of the WordprocessingCommentsExPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.DiagramPersistLayoutParts">
            <summary>
            Gets the DiagramPersistLayoutParts of the WordprocessingCommentsExPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.DiagramLayoutDefinitionParts">
            <summary>
            Gets the DiagramLayoutDefinitionParts of the WordprocessingCommentsExPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.DiagramStyleParts">
            <summary>
            Gets the DiagramStyleParts of the WordprocessingCommentsExPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.EmbeddedControlPersistenceParts">
            <summary>
            Gets the EmbeddedControlPersistenceParts of the WordprocessingCommentsExPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.EmbeddedObjectParts">
            <summary>
            Gets the EmbeddedObjectParts of the WordprocessingCommentsExPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.EmbeddedPackageParts">
            <summary>
            Gets the EmbeddedPackageParts of the WordprocessingCommentsExPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.ImageParts">
            <summary>
            Gets the ImageParts of the WordprocessingCommentsExPart.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingCommentsExPart.CommentsEx">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ChartStylePart">
            <summary>
            Defines the ChartStylePart, this part is only available in Office2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartStylePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartStylePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartStylePart.#ctor">
            <summary>
            Construtor of ChartStylePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartStylePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartStylePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartStylePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartStylePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartStylePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartStylePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartStylePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartStylePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartStylePart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartStylePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartStylePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartStylePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartStylePart.ChartStyle">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ChartColorStylePart">
            <summary>
            Defines the ChartColorStylePart, this part is only available in Office2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.#ctor">
            <summary>
            Construtor of ChartColorStylePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartColorStylePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.ChartColorStylePart.ColorStyle">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.TimeLinePart">
            <summary>
            Defines the TimeLinePart, this part is only available in Office2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TimeLinePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TimeLinePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TimeLinePart.#ctor">
            <summary>
            Construtor of TimeLinePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TimeLinePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLinePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TimeLinePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLinePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TimeLinePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLinePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TimeLinePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLinePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TimeLinePart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLinePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLinePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLinePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLinePart.Timelines">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.TimeLineCachePart">
            <summary>
            Defines the TimeLineCachePart, this part is only available in Office2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.#ctor">
            <summary>
            Construtor of TimeLineCachePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLineCachePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.TimeLineCachePart.TimelineCacheDefinition">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart">
            <summary>
            Defines the WordprocessingPeoplePart, this part is only available in Office2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.GetPartConstraint">
            <summary>
            Get Part constraint data
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.GetDataPartReferenceConstraint">
            <summary>
            Get the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>Part constraint data</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.#ctor">
            <summary>
            Construtor of WordprocessingPeoplePart
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.RelationshipTypeConstant">
            <summary>
            The fixed value of the RelationshipType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.RelationshipType">
            <summary>
            Gets the RelationshipType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.ContentTypeConstant">
            <summary>
            The fixed value of the ContentType
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.ContentType">
            <summary>
            Gets the ContentType.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.TargetPathConstant">
            <summary>
            The fixed value of the TargetPath
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.TargetPath">
            <summary>
            Gets the TargetPath.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.TargetNameConstant">
            <summary>
            The fixed value of the TargetName
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.TargetName">
            <summary>
            Gets the TargetName.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this part is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the part is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.IsContentTypeFixed">
            <summary>
            Is the ContentType for this part fixed? 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingPeoplePart.People">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ImagePartType">
            <summary>
            Defines ImagePartType - types of ImagePart.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePartType.Bmp">
            <summary>
            Windows Bitmap Graphics (.bmp).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePartType.Gif">
            <summary>
            Graphic Interchange Format (.gif).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePartType.Png">
            <summary>
            Portable (Public) Network Graphic (.png).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePartType.Tiff">
            <summary>
            Tagged Image Format File (.tiff).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePartType.Icon">
            <summary>
            Windows Icon (.ico).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePartType.Pcx">
            <summary>
            PC Paintbrush Bitmap Graphic (.pcx).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePartType.Jpeg">
            <summary>
            JPEG/JIFF Image (.jpeg).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePartType.Emf">
            <summary>
            Extended (Enhanced) Windows Metafile Format (.emf).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ImagePartType.Wmf">
            <summary>
            Windows Metafile (.wmf).
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPartType">
            <summary>
            Defines MailMergeRecipientDataPartType - types of MailMergeRecipientDataPart.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPartType.OpenXmlMailMergeRecipientData">
            <summary>
            OpenXml Mail Merge Recipient Data.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.MailMergeRecipientDataPartType.MsWordMailMergeRecipientData">
            <summary>
            Microsoft Word Mail Merge Recipient Data.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.FontPartType">
            <summary>
            Defines FontPartType - types of FontPart.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FontPartType.FontData">
            <summary>
            Font Data (.fntdata).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FontPartType.FontTtf">
            <summary>
            TrueType Font (.ttf).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.FontPartType.FontOdttf">
            <summary>
            Obfuscated TTF Font (.odttf).
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CustomPropertyPartType">
            <summary>
            Defines CustomPropertyPartType - types of CustomPropertyPart.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomPropertyPartType.Spreadsheet">
            <summary>
            application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomPropertyPartType.Xml">
            <summary>
            application/xml.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.ThumbnailPartType">
            <summary>
            Defines ThumbnailPartType - types of ThumbnailPart.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThumbnailPartType.Jpeg">
            <summary>
            JPEG/JIFF Image (.jpeg).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThumbnailPartType.Emf">
            <summary>
            Extended (Enhanced) Windows Metafile Format (.emf).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.ThumbnailPartType.Wmf">
            <summary>
            Windows Metafile (.wmf).
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType">
            <summary>
            Defines EmbeddedControlPersistencePartType - types of EmbeddedControlPart.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType.ActiveX">
            <summary>
            ActiveX (.xml).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistencePartType.ActiveXBin">
            <summary>
            ActieveX (.bin).
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType">
            <summary>
            Defines EmbeddedControlPersistenceBinaryDataPartType - types of EmbeddedControlPart.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.EmbeddedControlPersistenceBinaryDataPartType.ActiveXBin">
            <summary>
            ActieveX (.bin).
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType">
            <summary>
            Defines AlternativeFormatImportPartType - types of AlternativeFormatImportPart.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType.Xhtml">
            <summary>
            Extensible HyperText Markup Language File (.xhtml).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType.Mht">
            <summary>
            MHTML Document (.mht).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType.Xml">
            <summary>
            application/xml (.xml).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType.TextPlain">
            <summary>
            Text (.txt).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType.WordprocessingML">
            <summary>
            Wordprocessing (.docx).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType.OfficeWordMacroEnabled">
            <summary>
            Office Word Macro Enabled (.docm).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType.OfficeWordTemplate">
            <summary>
            Office Word Template (.dotx).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType.OfficeWordMacroEnabledTemplate">
            <summary>
            Office Word Macro Enabled Template (.dotm).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType.Rtf">
            <summary>
            Rich Text Foramt (.rtf).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.AlternativeFormatImportPartType.Html">
            <summary>
            HyperText Markup Language File (.htm).
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CustomXmlPartType">
            <summary>
            Defines CustomXmlPartType - types of CustomXmlPart.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlPartType.AdditionalCharacteristics">
            <summary>
            Additional characteristics (application/xml).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlPartType.Bibliography">
            <summary>
            Bibliography (application/xml).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlPartType.CustomXml">
            <summary>
            Custom XML (application/xml).
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Packaging.CustomXmlPartType.InkContent">
            <summary>
            Ink content (application/inkml+xml).
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.CustomUIPart">
            <summary>
            Defines CustomUiPart. The CustomUiPart served as the base class of RibbonExtensibilityPart and QuickAccessToolbarCustomizationsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomUIPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomUIPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.CustomUIPart.CustomUI">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.StylesPart">
            <summary>
            Defines StylesPart. The StylesPart served as the base class of StylesWithEffectsPart and StyleDefinitionsPart.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StylesPart._rootElement">
            <summary>
            Only for OpenXmlPart derived classes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StylesPart.PartRootElement">
            <summary>
            Gets the root element of this part. The DOM tree will be loaded on demand.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.StylesPart.Styles">
            <summary>
            Gets/Sets the root element of this part.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.WordprocessingDocument">
            <summary>
            Defines WordprocessingDocument - an OpenXmlPackage represents a Word document.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.GetPartConstraint">
            <summary>
            Gets part constraint data.
            </summary>
            <returns>The constraint data of the part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.GetDataPartReferenceConstraint">
            <summary>
            Gets the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>The constraint data of the part.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.MainPartRelationshipType">
            <summary>
            Gets the relationship type of the main part.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.ValidMainPartContentTypes">
            <summary>
            Gets the list of valid content type for main part.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.#ctor">
            <summary>
            Creates a WordprocessingDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.DocumentType">
            <summary>
            Gets the type of the WordprocessingDocument.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.String,DocumentFormat.OpenXml.WordprocessingDocumentType)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target WordprocessingDocument.</param>
            <param name="type">The type of the WordprocessingDocument.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.IO.Stream,DocumentFormat.OpenXml.WordprocessingDocumentType)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to create the WordprocessingDocument.</param>
            <param name="type">The type of the WordprocessingDocument.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.IO.Packaging.Package,DocumentFormat.OpenXml.WordprocessingDocumentType)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package.</param>
            <param name="type">The type of the WordprocessingDocument.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.String,DocumentFormat.OpenXml.WordprocessingDocumentType,System.Boolean)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target WordprocessingDocument.</param>
            <param name="type">The type of the WordprocessingDocument.</param>
            <param name="autoSave">Whether to auto save the created document.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.IO.Stream,DocumentFormat.OpenXml.WordprocessingDocumentType,System.Boolean)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to create the WordprocessingDocument.</param>
            <param name="type">The type of the WordprocessingDocument.</param>
            <param name="autoSave">Whether to auto save the created document.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(System.IO.Packaging.Package,DocumentFormat.OpenXml.WordprocessingDocumentType,System.Boolean)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package</param>
            <param name="type">The type of the WordprocessingDocument.</param>
            <param name="autoSave">Whether to auto save the created document.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CreateFromTemplate(System.String)">
            <summary>
            Creates an editable WordprocessingDocument from a template, opened on
            a MemoryStream with expandable capacity. The template will be attached
            to the WordprocessingDocument.
            </summary>
            <remarks>
            Attaching the template has been chosen as the default behavior because
            this is also what happens when a document is created from a template
            (other than Normal.dotm) using Microsoft Word.
            </remarks>
            <param name="path">The path and file name of the template.</param>
            <returns>The new WordprocessingDocument based on and linked to the template.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CreateFromTemplate(System.String,System.Boolean)">
            <summary>
            Creates an editable WordprocessingDocument from a template, opened on
            a MemoryStream with expandable capacity.
            </summary>
            <remarks>
            This method is provided to offer the choice to not attach the template.
            When templates are attached in Microsoft Word, for example, the absolute
            path will be used in the relationship. These absolute paths are most
            often user-specific, however, so once documents are shared with other
            users, the relationship gets "broken" anyhow.
            </remarks>
            <param name="path">The path and file name of the template.</param>
            <param name="isTemplateAttached">True, if the template should be attached to the document.</param>
            <returns>The new WordprocessingDocument based on and linked to the template.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.String,System.Boolean)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target WordprocessingDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.IO.Stream,System.Boolean)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to open the WordprocessingDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target WordprocessingDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
            <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to open the WordprocessingDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
            <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.IO.Packaging.Package,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
            <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of the WordprocessingDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML WordprocessingDocument.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.ChangeDocumentType(DocumentFormat.OpenXml.WordprocessingDocumentType)">
            <summary>
            Changes the document type.
            </summary>
            <param name="newType">The new type of the document.</param>
            <remarks>The MainDocumentPart will be changed.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CreatePartCore(System.String)">
            <summary>
            Creates an instance of OpenXmlPart according to the given relationship type.
            </summary>
            <param name="relationshipType">Relationship type.</param>
            <returns>An instance of OpenXmlPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddNewPart``1(System.String,System.String)">
            <summary>
            Adds a new part of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The class of the part.</typeparam>
            <param name="contentType">The content type of the part. Must match the defined content type if the part is fixed content type.</param>
            <param name="id">The relationship id. The id will be automaticly generated if this param is null.</param>
            <returns>The added part.</returns>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">When the part is not allowed to be referenced by this part.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">When the part is fixed content type and the passed in contentType does not match the defined content type.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when "contentType" is null reference.</exception>
            <remarks>Mainly used for adding not-fixed content type part - ImagePart, etc</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddMainDocumentPart">
            <summary>
            Creates the MainDocumentPart and add it to this document.
            </summary>
            <returns>The newly added MainDocumentPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddCoreFilePropertiesPart">
            <summary>
            Adds a CoreFilePropertiesPart to the WordprocessingDocument.
            </summary>
            <returns>The newly added CoreFilePropertiesPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddExtendedFilePropertiesPart">
            <summary>
            Adds a ExtendedFilePropertiesPart to the WordprocessingDocument.
            </summary>
            <returns>The newly added ExtendedFilePropertiesPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddCustomFilePropertiesPart">
            <summary>
            Adds a CustomFilePropertiesPart to the WordprocessingDocument.
            </summary>
            <returns>The newly added CustomFilePropertiesPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddDigitalSignatureOriginPart">
            <summary>
            Adds a DigitalSignatureOriginPart to the WordprocessingDocument.
            </summary>
            <returns>The newly added DigitalSignatureOriginPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddThumbnailPart(System.String)">
            <summary>
            Adds a ThumbnailPart to the WordprocessingDocument.
            </summary>
            <param name="contentType">The content type of the ThumbnailPart.</param>
            <returns>The newly added ThumbnailPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddThumbnailPart(DocumentFormat.OpenXml.Packaging.ThumbnailPartType)">
            <summary>
            Adds a ThumbnailPart to the WordprocessingDocument.
            </summary>
            <param name="partType">The type of the ThumbnailPart.</param>
            <returns>The newly added ThumbnailPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddQuickAccessToolbarCustomizationsPart">
            <summary>
            Adds a QuickAccessToolbarCustomizationsPart to the WordprocessingDocument.
            </summary>
            <returns>The newly added QuickAccessToolbarCustomizationsPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddRibbonExtensibilityPart">
            <summary>
            Adds a RibbonExtensibilityPart to the WordprocessingDocument.
            </summary>
            <returns>The newly added RibbonExtensibilityPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddRibbonAndBackstageCustomizationsPart">
            <summary>
            Adds a RibbonAndBackstageCustomizationsPart to the WordprocessingDocument, this part is only available in Office2010.
            </summary>
            <returns>The newly added RibbonExtensibilityPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.AddWebExTaskpanesPart">
            <summary>
            Adds a WebExTaskpanesPart to the WordprocessingDocument, this part is only available in Office2013.
            </summary>
            <returns>The newly added WebExTaskpanesPart.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.MainDocumentPart">
            <summary>
            Gets the MainDocumentPart of the WordprocessingDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CoreFilePropertiesPart">
            <summary>
            Gets the CoreFilePropertiesPart of the WordprocessingDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.ExtendedFilePropertiesPart">
            <summary>
            Gets the ExtendedFilePropertiesPart of the WordprocessingDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CustomFilePropertiesPart">
            <summary>
            Gets the CustomFilePropertiesPart of the WordprocessingDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.ThumbnailPart">
            <summary>
            Gets the ThumbnailPart of the WordprocessingDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.DigitalSignatureOriginPart">
            <summary>
            Gets the DigitalSignatureOriginPart of the WordprocessingDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.RibbonExtensibilityPart">
            <summary>
            Gets the RibbonExtensibilityPart of the WordprocessingDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.QuickAccessToolbarCustomizationsPart">
            <summary>
            Gets the QuickAccessToolbarCustomizationsPart of the WordprocessingDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.RibbonAndBackstageCustomizationsPart">
            <summary>
            Gets the RibbonAndBackstageCustomizationsPart of the WordprocessingDocument, only available in Office2010.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.WebExTaskpanesPart">
            <summary>
            Gets the WebExTaskpanesPart of the WordprocessingDocument, only available in Office2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CreateClone(System.IO.Stream)">
            <summary>
            Creates a new OpenXmlPackage on the given stream.
            </summary>
            <param name="stream">The stream on which the concrete OpenXml package will be created.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.OpenClone(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Opens the cloned OpenXml package on the given stream.
            </summary>
            <param name="stream">The stream on which the cloned OpenXml package will be opened.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CreateClone(System.String)">
            <summary>
            Creates a new OpenXml package on the given file.
            </summary>
            <param name="path">The path and file name of the target OpenXml package.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.OpenClone(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Opens the cloned OpenXml package on the given file.
            </summary>
            <param name="path">The path and file name of the target OpenXml package.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.CreateClone(System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of OpenXmlPackage on the specified instance
            of Package.
            </summary>
            <param name="package">The specified instance of Package.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.ToFlatOpcDocument">
            <summary>
            Converts an OpenXml package in OPC format to an <see cref="T:System.Xml.Linq.XDocument"/>
            in Flat OPC format.
            </summary>
            <returns>The OpenXml package in Flat OPC format.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument)">
            <summary>
            Creates a new editable instance of WordprocessingDocument from an <see cref="T:System.Xml.Linq.XDocument"/>
            in Flat OPC format, opened on a <see cref="T:System.IO.MemoryStream"/>.
            </summary>
            <param name="document">The document in Flat OPC format.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.IO.Stream,System.Boolean)">
            <summary>
            Creates a new instance of WordprocessingDocument from an <see cref="T:System.Xml.Linq.XDocument"/>
            in Flat OPC format.
            </summary>
            <param name="document">The document in Flat OPC format.</param>
            <param name="stream">The <see cref="T:System.IO.Stream"/> on which the WordprocessingDocument will be created.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.String,System.Boolean)">
            <summary>
            Creates a new instance of WordprocessingDocument from an <see cref="T:System.Xml.Linq.XDocument"/>
            in Flat OPC format.
            </summary>
            <param name="document">The document in Flat OPC format.</param>
            <param name="path">The path and file name of the target WordprocessingDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of WordprocessingDocument from an <see cref="T:System.Xml.Linq.XDocument"/>
            in Flat OPC format.
            </summary>
            <param name="document">The document in Flat OPC format.</param>
            <param name="package">The <see cref="T:System.IO.Packaging.Package"/> of the target WordprocessingDocument.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcString(System.String)">
            <summary>
            Creates a new instance of WordprocessingDocument from a string
            in Flat OPC format on a <see cref="T:System.IO.MemoryStream"/> with expandable
            capacity.
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcString(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Creates a new instance of WordprocessingDocument from a string
            in Flat OPC format on a
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <param name="stream">The <see cref="T:System.IO.Stream"/> on which the WordprocessingDocument will be created.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcString(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new instance of WordprocessingDocument from a string
            in Flat OPC format.
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <param name="path">The path and file name of the target WordprocessingDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.WordprocessingDocument.FromFlatOpcString(System.String,System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of WordprocessingDocument from a string
            in Flat OPC format.
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <param name="package">The <see cref="T:System.IO.Packaging.Package"/> of the target WordprocessingDocument.</param>
            <returns>A new instance of WordprocessingDocument.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument">
            <summary>
            Defines SpreadsheetDocument - an OpenXmlPackage represents a Spreadsheet document.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.GetPartConstraint">
            <summary>
            Gets part constraint data.
            </summary>
            <returns>The constraint data of the part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.GetDataPartReferenceConstraint">
            <summary>
            Gets the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>The constraint data of the part.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.MainPartRelationshipType">
            <summary>
            Gets the relationship type of the main part.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.ValidMainPartContentTypes">
            <summary>
            Gets the list of valid content type for main part.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.#ctor">
            <summary>
            Creates a SpreadsheetDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.DocumentType">
            <summary>
            Gets the type of the SpreadsheetDocument.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Create(System.String,DocumentFormat.OpenXml.SpreadsheetDocumentType)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target SpreadsheetDocument.</param>
            <param name="type">The type of the SpreadsheetDocument.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Create(System.IO.Stream,DocumentFormat.OpenXml.SpreadsheetDocumentType)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to create the SpreadsheetDocument.</param>
            <param name="type">The type of the SpreadsheetDocument.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Create(System.IO.Packaging.Package,DocumentFormat.OpenXml.SpreadsheetDocumentType)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package.</param>
            <param name="type">The type of the SpreadsheetDocument.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Create(System.String,DocumentFormat.OpenXml.SpreadsheetDocumentType,System.Boolean)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target SpreadsheetDocument.</param>
            <param name="type">The type of the SpreadsheetDocument.</param>
            <param name="autoSave">Whether to auto save the created document.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Create(System.IO.Stream,DocumentFormat.OpenXml.SpreadsheetDocumentType,System.Boolean)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to create the SpreadsheetDocument.</param>
            <param name="type">The type of the SpreadsheetDocument.</param>
            <param name="autoSave">Whether to auto save the created document.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Create(System.IO.Packaging.Package,DocumentFormat.OpenXml.SpreadsheetDocumentType,System.Boolean)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package.</param>
            <param name="type">The type of the SpreadsheetDocument.</param>
            <param name="autoSave">Whether to auto save the created document.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.CreateFromTemplate(System.String)">
            <summary>
            Creates an editable SpreadsheetDocument from a template, opened on
            a MemoryStream with expandable capacity.
            </summary>
            <param name="path">The path and file name of the template.</param>
            <returns>The new SpreadsheetDocument based on and linked to the template.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Open(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target SpreadsheetDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML SpreadsheetDocument.</exception>
            <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Open(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to open the SpreadsheetDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML SpreadsheetDocument.</exception>
            <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Open(System.IO.Packaging.Package,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML SpreadsheetDocument.</exception>
            <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Open(System.String,System.Boolean)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target SpreadsheetDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML SpreadsheetDocument.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Open(System.IO.Stream,System.Boolean)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to open the SpreadsheetDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML SpreadsheetDocument.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Open(System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of the SpreadsheetDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML SpreadsheetDocument.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.ChangeDocumentType(DocumentFormat.OpenXml.SpreadsheetDocumentType)">
            <summary>
            Changes the document type.
            </summary>
            <param name="newType">The new type of the document.</param>
            <remarks>The WorkbookPart will be changed.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.CreatePartCore(System.String)">
            <summary>
            Creates an instance of OpenXmlPart according to the given relationship type.
            </summary>
            <param name="relationshipType">Relationship type.</param>
            <returns>An instance of OpenXmlPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddNewPart``1(System.String,System.String)">
            <summary>
            Adds a new part of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The class of the part.</typeparam>
            <param name="contentType">The content type of the part. Must match the defined content type if the part is fixed content type.</param>
            <param name="id">The relationship id. The id will be automaticly generated if this param is null.</param>
            <returns>The added part.</returns>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">When the part is not allowed to be referenced by this part.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">When the part is fixed content type and the passed in contentType does not match the defined content type.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when "contentType" is null reference.</exception>
            <remarks>Mainly used for adding not-fixed content type part - ImagePart, etc.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddWorkbookPart">
            <summary>
            Created the WorkbookPart and add it to this document.
            </summary>
            <returns>The newly added WorkbookPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddCoreFilePropertiesPart">
            <summary>
            Addd a CoreFilePropertiesPart to the SpreadsheetDocument.
            </summary>
            <returns>The newly added CoreFilePropertiesPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddExtendedFilePropertiesPart">
            <summary>
            Addd a ExtendedFilePropertiesPart to the SpreadsheetDocument.
            </summary>
            <returns>The newly added ExtendedFilePropertiesPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddCustomFilePropertiesPart">
            <summary>
            Addd a CustomFilePropertiesPart to the SpreadsheetDocument.
            </summary>
            <returns>The newly added CustomFilePropertiesPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddDigitalSignatureOriginPart">
            <summary>
            Addd a DigitalSignatureOriginPart to the SpreadsheetDocument.
            </summary>
            <returns>The newly added DigitalSignatureOriginPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddThumbnailPart(System.String)">
            <summary>
            Addd a ThumbnailPart to the SpreadsheetDocument.
            </summary>
            <param name="contentType">The content type of the ThumbnailPart.</param>
            <returns>The newly added ThumbnailPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddThumbnailPart(DocumentFormat.OpenXml.Packaging.ThumbnailPartType)">
            <summary>
            Adds a ThumbnailPart to the SpreadsheetDocument.
            </summary>
            <param name="partType">The type of the ThumbnailPart.</param>
            <returns>The newly added ThumbnailPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddQuickAccessToolbarCustomizationsPart">
            <summary>
            Adds a QuickAccessToolbarCustomizationsPart to the SpreadsheetDocument.
            </summary>
            <returns>The newly added QuickAccessToolbarCustomizationsPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddRibbonExtensibilityPart">
            <summary>
            Adds a RibbonExtensibilityPart to the SpreadsheetDocument.
            </summary>
            <returns>The newly added RibbonExtensibilityPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddRibbonAndBackstageCustomizationsPart">
            <summary>
            Adds a RibbonAndBackstageCustomizationsPart to the SpreadsheetDocument, this part is only available in Office2010.
            </summary>
            <returns>The newly added RibbonExtensibilityPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.AddWebExTaskpanesPart">
            <summary>
            Adds a WebExTaskpanesPart to the SpreadsheetDocument, this part is only available in Office2013.
            </summary>
            <returns>The newly added WebExTaskpanesPart.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.WorkbookPart">
            <summary>
            Gets the WorkbookPart of the SpreadsheetDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.CoreFilePropertiesPart">
            <summary>
            Gets the CoreFilePropertiesPart of the SpreadsheetDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.ExtendedFilePropertiesPart">
            <summary>
            Gets the ExtendedFilePropertiesPart of the SpreadsheetDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.CustomFilePropertiesPart">
            <summary>
            Gets the CustomFilePropertiesPart of the SpreadsheetDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.ThumbnailPart">
            <summary>
            Gets the ThumbnailPart of the SpreadsheetDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.RibbonExtensibilityPart">
            <summary>
            Gets the RibbonExtensibilityPart of the SpreadsheetDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.QuickAccessToolbarCustomizationsPart">
            <summary>
            Gets the QuickAccessToolbarCustomizationsPart of the SpreadsheetDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.DigitalSignatureOriginPart">
            <summary>
            Gets the DigitalSignatureOriginPart of the SpreadsheetDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.RibbonAndBackstageCustomizationsPart">
            <summary>
            Gets the RibbonAndBackstageCustomizationsPart of the SpreadsheetDocument, only available in Office2010.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.WebExTaskpanesPart">
            <summary>
            Gets the WebExTaskpanesPart of the SpreadsheetDocument, only available in Office2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.CreateClone(System.IO.Stream)">
            <summary>
            Creates a new OpenXmlPackage on the given stream.
            </summary>
            <param name="stream">The stream on which the concrete OpenXml package will be created.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.OpenClone(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Opens the cloned OpenXml package on the given stream.
            </summary>
            <param name="stream">The stream on which the cloned OpenXml package will be opened.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.CreateClone(System.String)">
            <summary>
            Creates a new OpenXml package on the given file.
            </summary>
            <param name="path">The path and file name of the target OpenXml package.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.OpenClone(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Opens the cloned OpenXml package on the given file.
            </summary>
            <param name="path">The path and file name of the target OpenXml package.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.CreateClone(System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of OpenXmlPackage on the specified instance
            of Package.
            </summary>
            <param name="package">The specified instance of Package.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.ToFlatOpcDocument">
            <summary>
            Converts an OpenXml package in OPC format to an <see cref="T:System.Xml.Linq.XDocument"/>
            in Flat OPC format.
            </summary>
            <returns>The OpenXml package in Flat OPC format.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument)">
            <summary>
            Creates a new editable instance of SpreadsheetDocument from an <see cref="T:System.Xml.Linq.XDocument"/>
            in Flat OPC format, opened on a <see cref="T:System.IO.MemoryStream"/>.
            </summary>
            <param name="document">The document in Flat OPC format.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.IO.Stream,System.Boolean)">
            <summary>
            Creates a new instance of SpreadsheetDocument from a workbook
            in Flat OPC format.
            </summary>
            <param name="document">The workbook in Flat OPC format.</param>
            <param name="stream">The stream on which the SpreadsheetDocument will be created.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.String,System.Boolean)">
            <summary>
            Creates a new instance of SpreadsheetDocument from a workbook
            in Flat OPC format.
            </summary>
            <param name="document">The workbook in Flat OPC format.</param>
            <param name="path">The path and file name of the target SpreadsheetDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of SpreadsheetDocument from a workbook
            in Flat OPC format on the specified instance of Package.
            </summary>
            <param name="document">The workbook in Flat OPC format.</param>
            <param name="package">The specified instance of Package.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.FromFlatOpcString(System.String)">
            <summary>
            Creates a new instance of SpreadsheetDocument from a string
            in Flat OPC format on a <see cref="T:System.IO.MemoryStream"/> with expandable
            capacity.
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.FromFlatOpcString(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Creates a new instance of SpreadsheetDocument from a string
            in Flat OPC format on a
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <param name="stream">The <see cref="T:System.IO.Stream"/> on which the SpreadsheetDocument will be created.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.FromFlatOpcString(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new instance of SpreadsheetDocument from a string
            in Flat OPC format.
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <param name="path">The path and file name of the target SpreadsheetDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.FromFlatOpcString(System.String,System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of SpreadsheetDocument from a string
            in Flat OPC format.
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <param name="package">The <see cref="T:System.IO.Packaging.Package"/> of the target SpreadsheetDocument.</param>
            <returns>A new instance of SpreadsheetDocument.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Packaging.PresentationDocument">
            <summary>
            Defines PresentationDocument - an OpenXmlPackage represents a Presentation document
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.GetPartConstraint">
            <summary>
            Gets part constraint data.
            </summary>
            <returns>The constraint data of the part.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.GetDataPartReferenceConstraint">
            <summary>
            Gets the constraint rule of DataPartReferenceRelationship.
            </summary>
            <returns>The constraint data of the part.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.MainPartRelationshipType">
            <summary>
            Gets the relationship type of the main part.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.ValidMainPartContentTypes">
            <summary>
            Gets the list of valid content type for main part.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.#ctor">
            <summary>
            Creates a PresentationDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.DocumentType">
            <summary>
            Gets the type of the PresentationDocument.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.String,DocumentFormat.OpenXml.PresentationDocumentType)">
            <summary>
            Creates a new instance of the PresentationDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target PresentationDocument.</param>
            <param name="type">The type of the PresentationDocument.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.IO.Stream,DocumentFormat.OpenXml.PresentationDocumentType)">
            <summary>
            Created a new instance of the PresentationDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to create the PresentationDocument.</param>
            <param name="type">The type of the PresentationDocument.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.IO.Packaging.Package,DocumentFormat.OpenXml.PresentationDocumentType)">
            <summary>
            Created a new instance of the PresentationDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package.</param>
            <param name="type">The type of the PresentationDocument.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.String,DocumentFormat.OpenXml.PresentationDocumentType,System.Boolean)">
            <summary>
            Created a new instance of the PresentationDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target PresentationDocument.</param>
            <param name="type">The type of the PresentationDocument.</param>
            <param name="autoSave">Whether to auto save the created document.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.IO.Stream,DocumentFormat.OpenXml.PresentationDocumentType,System.Boolean)">
            <summary>
            Creates a new instance of the PresentationDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to create the PresentationDocument.</param>
            <param name="type">The type of the PresentationDocument.</param>
            <param name="autoSave">Whether to auto save the created document.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Create(System.IO.Packaging.Package,DocumentFormat.OpenXml.PresentationDocumentType,System.Boolean)">
            <summary>
            Creates a new instance of the PresentationDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package.</param>
            <param name="type">The type of the PresentationDocument.</param>
            <param name="autoSave">Whether to auto save the created document.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Write access.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.CreateFromTemplate(System.String)">
            <summary>
            Creates an editable PresentationDocument from a template, opened on
            a MemoryStream with expandable capacity.
            </summary>
            <param name="path">The path and file name of the template.</param>
            <returns>The new PresentationDocument based on the template.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.String,System.Boolean)">
            <summary>
            Creates a new instance of the PresentationDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target PresentationDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.IO.Stream,System.Boolean)">
            <summary>
            Creates a new instance of the PresentationDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to open the PresentationDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of the PresentationDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a new instance of the PresentationDocument class from the specified file.
            </summary>
            <param name="path">The path and file name of the target PresentationDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "path" is null reference.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
            <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a new instance of the PresentationDocument class from the IO stream.
            </summary>
            <param name="stream">The IO stream on which to open the PresentationDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "stream" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "stream" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
            <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.IO.Packaging.Package,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Creates a new instance of the PresentationDocument class from the spcified package.
            </summary>
            <param name="package">The specified OpenXml package.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of PresentationDocument.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when "package" is null reference.</exception>
            <exception cref="T:System.IO.IOException">Thrown when "package" is not opened with Read (ReadWrite) access.</exception>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">Thrown when the package is not valid Open XML PresentationDocument.</exception>
            <exception cref="T:System.ArgumentException">Thrown when specified to process the markup compatibility but the given target FileFormatVersion is incorrect.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.ChangeDocumentType(DocumentFormat.OpenXml.PresentationDocumentType)">
            <summary>
            Changes the document type.
            </summary>
            <param name="newType">The new type of the document.</param>
            <remarks>The PresentationPart will be changed.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.CreatePartCore(System.String)">
            <summary>
            Creates an instance of OpenXmlPart according to the given relationship type.
            </summary>
            <param name="relationshipType">Relationship type.</param>
            <returns>An instance of OpenXmlPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddPresentationPart">
            <summary>
            Creates the PresentationPart and add it to this document.
            </summary>
            <returns>The newly added PresentationPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddCoreFilePropertiesPart">
            <summary>
            Adds a CoreFilePropertiesPart to the PresentationDocument.
            </summary>
            <returns>The newly added CoreFilePropertiesPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddExtendedFilePropertiesPart">
            <summary>
            Adds a ExtendedFilePropertiesPart to the PresentationDocument.
            </summary>
            <returns>The newly added ExtendedFilePropertiesPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddCustomFilePropertiesPart">
            <summary>
            Adds a CustomFilePropertiesPart to the PresentationDocument.
            </summary>
            <returns>The newly added CustomFilePropertiesPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddDigitalSignatureOriginPart">
            <summary>
            Adds a DigitalSignatureOriginPart to the PresentationDocuments.
            </summary>
            <returns>The newly added DigitalSignatureOriginPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddThumbnailPart(System.String)">
            <summary>
            Adds a ThumbnailPart to the PresentationDocument.
            </summary>
            <param name="contentType">The content type of the ThumbnailPart.</param>
            <returns>The newly added ThumbnailPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddThumbnailPart(DocumentFormat.OpenXml.Packaging.ThumbnailPartType)">
            <summary>
            Adds a ThumbnailPart to the PresentationDocument.
            </summary>
            <param name="partType">The type of the ThumbnailPart.</param>
            <returns>The newly added ThumbnailPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddNewPart``1(System.String,System.String)">
            <summary>
            Adds a new part of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The class of the part.</typeparam>
            <param name="contentType">The content type of the part. Must match the defined content type if the part is fixed content type.</param>
            <param name="id">The relationship id. The id will be automaticly generated if this param is null.</param>
            <returns>The added part.</returns>
            <exception cref="T:DocumentFormat.OpenXml.Packaging.OpenXmlPackageException">When the part is not allowed to be referenced by this part.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">When the part is fixed content type and the passed in contentType does not match the defined content type.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when "contentType" is null reference.</exception>
            <remarks>Mainly used for adding not-fixed content type part - ImagePart, etc.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddQuickAccessToolbarCustomizationsPart">
            <summary>
            Add a QuickAccessToolbarCustomizationsPart to the PresentationDocument.
            </summary>
            <returns>The newly added QuickAccessToolbarCustomizationsPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddRibbonExtensibilityPart">
            <summary>
            Add a RibbonExtensibilityPart to the PresentationDocument.
            </summary>
            <returns>The newly added RibbonExtensibilityPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddRibbonAndBackstageCustomizationsPart">
            <summary>
            Add a RibbonAndBackstageCustomizationsPart to the PresentationDocument, this part is only available in Office2010.
            </summary>
            <returns>The newly added RibbonExtensibilityPart.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.AddWebExTaskpanesPart">
            <summary>
            Adds a WebExTaskpanesPart to the PresentationDocument, this part is only available in Office2013.
            </summary>
            <returns>The newly added WebExTaskpanesPart.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.PresentationPart">
            <summary>
            Gets the PresentationPart of the PresentationDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.CoreFilePropertiesPart">
            <summary>
            Gets the CoreFilePropertiesPart of the PresentationDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.ExtendedFilePropertiesPart">
            <summary>
            Gets the ExtendedFilePropertiesPart of the PresentationDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.CustomFilePropertiesPart">
            <summary>
            Gets the CustomFilePropertiesPart of the PresentationDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.ThumbnailPart">
            <summary>
            Gets the ThumbnailPart of the PresentationDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.DigitalSignatureOriginPart">
            <summary>
            Gets the DigitalSignatureOriginPart of the PresentationDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.RibbonExtensibilityPart">
            <summary>
            Gets the RibbonExtensibilityPart of the PresentationDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.QuickAccessToolbarCustomizationsPart">
            <summary>
            Gets the QuickAccessToolbarCustomizationsPart of the PresentationDocument.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.RibbonAndBackstageCustomizationsPart">
            <summary>
            Gets the RibbonAndBackstageCustomizationsPart of the PresentationDocument, only available in Office2010.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Packaging.PresentationDocument.WebExTaskpanesPart">
            <summary>
            Gets the WebExTaskpanesPart of the PresentationDocument, only available in Office2013.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.CreateClone(System.IO.Stream)">
            <summary>
            Creates a new OpenXmlPackage on the given stream.
            </summary>
            <param name="stream">The stream on which the concrete OpenXml package will be created.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.OpenClone(System.IO.Stream,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Opens the cloned OpenXml package on the given stream.
            </summary>
            <param name="stream">The stream on which the cloned OpenXml package will be opened.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.CreateClone(System.String)">
            <summary>
            Creates a new OpenXml package on the given file.
            </summary>
            <param name="path">The path and file name of the target OpenXml package.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.OpenClone(System.String,System.Boolean,DocumentFormat.OpenXml.Packaging.OpenSettings)">
            <summary>
            Opens the cloned OpenXml package on the given file.
            </summary>
            <param name="path">The path and file name of the target OpenXml package.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <param name="openSettings">The advanced settings for opening a document.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.CreateClone(System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of OpenXmlPackage on the specified instance
            of Package.
            </summary>
            <param name="package">The specified instance of Package.</param>
            <returns>A new instance of OpenXmlPackage.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.ToFlatOpcDocument">
            <summary>
            Converts an OpenXml package in OPC format to an <see cref="T:System.Xml.Linq.XDocument"/>
            in Flat OPC format.
            </summary>
            <returns>The OpenXml package in Flat OPC format.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument)">
            <summary>
            Creates a new editable instance of PresentationDocument from an <see cref="T:System.Xml.Linq.XDocument"/>
            in Flat OPC format, opened on a <see cref="T:System.IO.MemoryStream"/>.
            </summary>
            <param name="document">The document in Flat OPC format.</param>
            <returns>A new instance of PresentationDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.IO.Stream,System.Boolean)">
            <summary>
            Creates a new instance of PresentationDocument from a presentation
            in Flat OPC format.
            </summary>
            <param name="document">The presentation in Flat OPC format.</param>
            <param name="stream">The stream on which the PresentationDocument will be created.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of PresentationDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.String,System.Boolean)">
            <summary>
            Creates a new instance of PresentationDocument from a presentation
            in Flat OPC format.
            </summary>
            <param name="document">The presentation in Flat OPC format.</param>
            <param name="path">The path and file name of the target PresentationDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of PresentationDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcDocument(System.Xml.Linq.XDocument,System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of PresentationDocument from a presentation
            in Flat OPC format on the specified instance of Package.
            </summary>
            <param name="document">The presentation in Flat OPC format.</param>
            <param name="package">The specified instance of Package.</param>
            <returns>A new instance of PresentationDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcString(System.String)">
            <summary>
            Creates a new instance of PresentationDocument from a string
            in Flat OPC format on a <see cref="T:System.IO.MemoryStream"/> with expandable
            capacity.
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <returns>A new instance of PresentationDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcString(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Creates a new instance of PresentationDocument from a string
            in Flat OPC format on a
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <param name="stream">The <see cref="T:System.IO.Stream"/> on which the PresentationDocument will be created.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of PresentationDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcString(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new instance of PresentationDocument from a string
            in Flat OPC format.
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <param name="path">The path and file name of the target PresentationDocument.</param>
            <param name="isEditable">In ReadWrite mode. False for Read only mode.</param>
            <returns>A new instance of PresentationDocument.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Packaging.PresentationDocument.FromFlatOpcString(System.String,System.IO.Packaging.Package)">
            <summary>
            Creates a new instance of PresentationDocument from a string
            in Flat OPC format.
            </summary>
            <param name="text">The string in Flat OPC format.</param>
            <param name="package">The <see cref="T:System.IO.Packaging.Package"/> of the target PresentationDocument.</param>
            <returns>A new instance of PresentationDocument.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.ExceptionMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.AddedPartIsNotAllowed">
            <summary>
              Looks up a localized string similar to The part cannot be added here..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.CannotChangeDocumentType">
            <summary>
              Looks up a localized string similar to Cannot change the document type..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.CannotChangeDocumentTypeSerious">
            <summary>
              Looks up a localized string similar to Cannot change the document type. The document may be corrupt..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.CannotFindAttribute">
            <summary>
              Looks up a localized string similar to The element does not allow the specified attribute..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.CannotLoadRootElement">
            <summary>
              Looks up a localized string similar to Cannot load the root element from the part. The part contains invalid data..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.CannotReloadDomTreeWithoutAssociatedPart">
            <summary>
              Looks up a localized string similar to Cannot reload the DOM tree since this element is not associated with an OpenXmlPart..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.CannotSaveDomTreeWithoutAssociatedPart">
            <summary>
              Looks up a localized string similar to Cannot save DOM tree since this element is not associated with an OpenXmlPart..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.CannotSetAttribute">
            <summary>
              Looks up a localized string similar to Cannot set XML namespace declaration here. Use AddNamespaceDeclaration method instead..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.CannotValidateAcbElement">
            <summary>
              Looks up a localized string similar to The OpenXmlValidator cannot validate against AlternateContent, AlternateContentChoice and AlternateContentFallback..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.CannotValidateMiscNode">
            <summary>
              Looks up a localized string similar to The OpenXmlValidator cannot validate against OpenXmlMiscNode..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.CannotValidateUnknownElement">
            <summary>
              Looks up a localized string similar to The OpenXmlValidator cannot validate against OpenXmlUnknownElement..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.CycleReference">
            <summary>
              Looks up a localized string similar to A circular reference has been detected..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.DataPartIsInUse">
            <summary>
              Looks up a localized string similar to The specified DataPart is referenced by other parts..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.DataPartReferenceIsNotAllowed">
            <summary>
              Looks up a localized string similar to The specified DataPartReferenceRelationship is not allowed with this parent..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.DocumentFileFormatVersionMismatch">
            <summary>
              Looks up a localized string similar to You should not validate document preprocessed based on FileFormatVersions.{0} against FileFormatVersions.{1} constraints. The preprocessing file format version is set in OpenSettings. Also check the file format version setting in the OpenXmlValidator..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.DocumentTooBig">
            <summary>
              Looks up a localized string similar to The document has exceeded the size limit. Its type cannot be changed..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.DuplicatedPrefix">
            <summary>
              Looks up a localized string similar to The prefix &quot;{0}&quot; is already defined in current node..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ElementIsNotChild">
            <summary>
              Looks up a localized string similar to The specified oldChild is not a child of this element..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ElementIsNotInOffice2007">
            <summary>
              Looks up a localized string similar to The validator is set to validate content based on Microsoft Office 2007 rules. The passed in element is not defined in Microsoft Office 2007..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ElementIsNotInOffice2010">
            <summary>
              Looks up a localized string similar to The validator is set to validate content based on Microsoft Office 2010 rules. The passed in element is not defined in Microsoft Office 2010..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ElementIsNotInOffice2013">
            <summary>
              Looks up a localized string similar to The validator is set to validate content based on Microsoft Office 2013 rules. The passed in element is not defined in Microsoft Office 2013..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ElementIsPartOfTree">
            <summary>
              Looks up a localized string similar to Cannot insert the OpenXmlElement &quot;newChild&quot; because it is part of a tree. .
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.EmptyCollection">
            <summary>
              Looks up a localized string similar to Empty collection..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ErrorContentType">
            <summary>
              Looks up a localized string similar to The contentType parameter has incorrect value..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ExtendedPartIsOpenXmlPart">
            <summary>
              Looks up a localized string similar to An ExtendedPart was encountered with a relationship type that starts with &quot;http://schemas.openxmlformats.org&quot;. Expected a defined part instead based on the relationship type..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ExtendedPartNotAllowed">
            <summary>
              Looks up a localized string similar to ExtendedPart must be added by AddExtendedPart( )..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ExternalRelationshipIsNotReferenced">
            <summary>
              Looks up a localized string similar to The specified ExternalRelationship is not referenced by this part..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.FileFormatNotSupported">
            <summary>
              Looks up a localized string similar to The specified FileFormatVersions parameter has an invalid value: {0}.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.Fmt_PartRootIsInvalid">
            <summary>
              Looks up a localized string similar to The root XML element &quot;{0}&quot; in the part is incorrect. The expected root XML element is: &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ForeignDataPart">
            <summary>
              Looks up a localized string similar to The specified DataPart is not in this document..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ForeignMediaDataPart">
            <summary>
              Looks up a localized string similar to The specified MediaDataPart is not in this document..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ForeignOpenXmlPart">
            <summary>
              Looks up a localized string similar to The specified OpenXmlPart is not referenced by this part..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.HyperlinkRelationshipIsNotReferenced">
            <summary>
              Looks up a localized string similar to The specified ExternalRelationship is not referenced by this part..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ImplicitConversionExceptionOnNull">
            <summary>
              Looks up a localized string similar to Error in implicit conversion. Cannot convert null object..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InnerXmlCannotBeSet">
            <summary>
              Looks up a localized string similar to This OpenXmlElement&apos;s InnerXml cannot be set..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InvalidContentTypePart">
            <summary>
              Looks up a localized string similar to The content type of the part is invalid. The expected content type is: {0}..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InvalidEnumValue">
            <summary>
              Looks up a localized string similar to The specified value is not valid according to the specified enum type..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InvalidMainPartContentType">
            <summary>
              Looks up a localized string similar to Cannot set the MainPartContentType property to this value because it is not valid for this type of document..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InvalidMCMode">
            <summary>
              Looks up a localized string similar to The specified MarkupCompatibilityProcessSettings.TargetFileFormatVersions is invalid to process the extensibility markup..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InvalidOuterXml">
            <summary>
              Looks up a localized string similar to The XML has invalid content and cannot be constructed as an element..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InvalidOuterXmlForMiscNode">
            <summary>
              Looks up a localized string similar to The XML has invalid content and cannot be constructed as an element..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InvalidPackageType">
            <summary>
              Looks up a localized string similar to The specified package is not valid..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InvalidPartContentType">
             <summary>
               Looks up a localized string similar to The document cannot be opened because there is an invalid part with an unexpected content type. 
            [Part Uri={0}], 
            [Content Type={1}], 
            [Expected Content Type={2}]..
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InvalidUriFormat">
            <summary>
              Looks up a localized string similar to Invalid Hyperlink: Malformed URI is embedded as a hyperlink in the document..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InvalidWriteStringCall">
            <summary>
              Looks up a localized string similar to Text string can only be written out in OpenXmlLeafTextElement..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.InvalidXmlIDStringException">
            <summary>
              Looks up a localized string similar to An invalid XML ID string.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.LeafElementInnerXmlCannotBeSet">
            <summary>
              Looks up a localized string similar to This OpenXmlLeafElement&apos;s InnerXml can only be set to null or to an empty string..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.LocalNameIsNull">
            <summary>
              Looks up a localized string similar to LocalName is null or empty..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.MainPartIsDifferent">
            <summary>
              Looks up a localized string similar to The part cannot be added to this package because its content type is not allowed in this type of document..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.MediaDataPartShouldNotReferenceOtherParts">
            <summary>
              Looks up a localized string similar to An Audio / Video part shall not have implicit or explicit relationships to other parts defined by Open XML Standard..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.MultipleRelationshipsToSamePart">
            <summary>
              Looks up a localized string similar to There are more than one relationship references that target the specified part..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.NoMainPart">
            <summary>
              Looks up a localized string similar to The specified package is invalid. The main part is missing..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.NonCompositeNoChild">
            <summary>
              Looks up a localized string similar to Non-composite elements do not have child elements..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.NonImplemented">
            <summary>
              Looks up a localized string similar to The method or operation has not been implemented..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.NoSpecifiedExternalRelationship">
            <summary>
              Looks up a localized string similar to No external relationship with the specified ID was found..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.NoSpecifiedHyperlinkRelationship">
            <summary>
              Looks up a localized string similar to No hyperlink relationship with the specified ID was found..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.NoSpecifiedReferenceRelationship">
            <summary>
              Looks up a localized string similar to No ReferenceRelationship with the specified ID was found..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.NsNotUnderStand">
            <summary>
              Looks up a localized string similar to Current Markup Compatibility mode does not understand namespace prefix &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.OnlyOnePartAllowed">
            <summary>
              Looks up a localized string similar to Only one instance of the type is allowed for this parent..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PackageAccessModeIsReadonly">
            <summary>
              Looks up a localized string similar to This operation requires that the document be opened with ReadWrite (or Write) access..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PackageMustCanBeRead">
            <summary>
              Looks up a localized string similar to This operation requires that the package be opened with Read access..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PackageRelatedArgumentNullException">
            <summary>
              Looks up a localized string similar to Arguments openXmlPackage and its parent cannot be null at same time..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ParentIsNull">
            <summary>
              Looks up a localized string similar to The parent of this element is null..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PartExistsWithDifferentRelationshipId">
            <summary>
              Looks up a localized string similar to The specified part is already referenced as a target part by a relationship with a different ID..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PartIsDestroyed">
            <summary>
              Looks up a localized string similar to The part has been destroyed..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PartIsEmpty">
            <summary>
              Looks up a localized string similar to The XML content is empty..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PartIsNotAllowed">
            <summary>
              Looks up a localized string similar to The specified part is not allowed with this parent..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PartIsNotInOffice2007">
            <summary>
              Looks up a localized string similar to The validator is set to validate content based on Microsoft Office 2007 rules. The passed in part is not defined in Microsoft Office 2007..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PartIsNotInOffice2010">
            <summary>
              Looks up a localized string similar to The validator is set to validate content based on Microsoft Office 2010 rules. The passed in part is not defined in Microsoft Office 2010..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PartIsNotInOffice2013">
            <summary>
              Looks up a localized string similar to The validator is set to validate content based on Microsoft Office 2013 rules. The passed in part is not defined in Microsoft Office 2013..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PartNotInSamePackage">
            <summary>
              Looks up a localized string similar to A relationship can only be created between two parts in a package..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PartNotInVersion">
            <summary>
              Looks up a localized string similar to The OpenXmlPart is not a valid part in the specified FileFormat version..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PartRootAlreadyHasAssociation">
            <summary>
              Looks up a localized string similar to Cannot set the given root element to this part. The given part root element has already been associated with another OpenXmlPart..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PartUnknown">
            <summary>
              Looks up a localized string similar to The XML content is unknown. Cannot create an OpenXmlReader on that content..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.PropertyMutualExclusive">
            <summary>
              Looks up a localized string similar to The {0} property cannot be set when the {1} property is not null..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ReaderInEndState">
            <summary>
              Looks up a localized string similar to The reader is now positioned at the end element tag..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ReaderInEofState">
            <summary>
              Looks up a localized string similar to The reader is now positioned at EOF..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ReaderInNullState">
            <summary>
              Looks up a localized string similar to The reader is now positioned before the first element. Call OpenXmlReader.Read() before this operation..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ReferenceRelationshipIsNotReferenced">
            <summary>
              Looks up a localized string similar to The specified ReferenceRelationship is not referenced by this part..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.RelationshipIdConflict">
            <summary>
              Looks up a localized string similar to Id conflicts with the Id of an existing relationship..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.RequiredPartDoNotExist">
            <summary>
              Looks up a localized string similar to A required part is missing. The class name is stored in the PartClassName property..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.SamePartWithDifferentRelationshipType">
            <summary>
              Looks up a localized string similar to A shared part is referenced by multiple source parts with a different relationship type..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.StreamAccessModeShouldBeWrite">
            <summary>
              Looks up a localized string similar to The stream was not opened for writing..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.StrictReadOnly">
            <summary>
              Looks up a localized string similar to ISO 29500 Strict formatted document can&apos;t be opened while edit operation is enabled..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.StringArgumentEmptyException">
            <summary>
              Looks up a localized string similar to The string argument cannot be empty..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.StringIsEmpty">
            <summary>
              Looks up a localized string similar to The specified string is empty..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.TextIsInvalidEnumValue">
            <summary>
              Looks up a localized string similar to The text value is not a valid enumeration value..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.TextIsInvalidOnOffValue">
            <summary>
              Looks up a localized string similar to The text value is invalid. It can be only &apos;true&apos;, &apos;false&apos;, &apos;on&apos;, &apos;off&apos;, &apos;0&apos;, &apos;1&apos;..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.TextIsInvalidTrueFalseBlankValue">
            <summary>
              Looks up a localized string similar to The text value is invalid. It can be only &apos;true&apos;, &apos;false&apos;, &apos;t&apos;, &apos;f&apos;, &apos;&apos;..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.TextIsInvalidTrueFalseValue">
            <summary>
              Looks up a localized string similar to The text value is invalid. It can be only &apos;true&apos;, &apos;false&apos;, &apos;t&apos;, &apos;f&apos;..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.UnknowMCContent">
            <summary>
              Looks up a localized string similar to There is invalid extensibility markup in &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.UnknownPackage">
            <summary>
              Looks up a localized string similar to The specified package is unknown..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.UseAddHyperlinkRelationship">
            <summary>
              Looks up a localized string similar to Do not add hyperlink relationships through the AddExternalRelationship() method. Use AddHyperlinkRelationship() instead..
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ExceptionMessages.ValidationException">
            <summary>
              Looks up a localized string similar to The OpenXmlPackage.Validate method found an error in the document..
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.NamespaceIdMap.TryGetTransitionalNamespace(System.String,System.String@)">
            <summary>
            Attempts to get the Transitional equivalent namespace.
            </summary>
            <param name="strictNamespace">A namespace in Strict.</param>
            <param name="transitionalNamespace">An equivalent namespace in Transitional.</param>
            <returns>Returns true when a Transitional equivalent namespace is found, returns false when it is not found.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.NamespaceIdMap.TryGetTransitionalRelationship(System.String,System.String@)">
            <summary>
            Attempts to get the Transitional equivalent relationship.
            </summary>
            <param name="strictRelationship">A relationship in Strict.</param>
            <param name="transitionalRelationship">An equivalent relationship in Transitional.</param>
            <returns>Returns true when a Transitional equivalent relationship is found, returns false when it is not.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.NamespaceIdMap.GetNamespaceUri(System.Byte)">
            <summary>
            Gets the namespace URI for the specified namespace ID.
            </summary>
            <param name="namespaceId">The namespace ID.</param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.NamespaceIdMap.GetNamespaceUri(System.String)">
            <summary>
            Gets the namespace URI for the specified namespace prefix.
            </summary>
            <param name="prefix">The namespace prefix.</param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.NamespaceIdMap.GetNamespacePrefix(System.Byte)">
            <summary>
            Gets the default namespace prefix for the specified namespace ID.
            </summary>
            <param name="namespaceId">The namespace ID.</param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.NamespaceIdMap.TryGetExtendedNamespace(System.String,System.String@)">
            <summary>
            Try to get the expected namespace if the passed namespace is an obsolete.
            </summary>
            <param name="namespaceUri">The namespace to pass.</param>
            <param name="extNamespaceUri">The expected namespace when the passed namespace is an obsolete.</param>
            <returns>True when the passed namespace is an obsolete and the expected namespace found</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlAttribute">
            <summary>
            Represents an Open XML attribute.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the OpenXmlAttribute structure using the supplied qualified name, namespace URI, and text value.
            </summary>
            <param name="qualifiedName">The qualified attribute name.</param>
            <param name="namespaceUri">The namespace URI of the attribute.</param>
            <param name="value">The text value of the attribute.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlAttribute.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the OpenXmlAttribute structure using the supplied namespace prefix, local name, namespace URI, and text value.
            </summary>
            <param name="prefix">The namespace prefix of the attribute. </param>
            <param name="localName">The local name of the attribute.</param>
            <param name="namespaceUri">The namespace URI of the attribute.</param>
            <param name="value">The text value of the attribute.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlAttribute.NamespaceUri">
            <summary>
            Gets or sets the namespace URI of the current attribute.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlAttribute.LocalName">
            <summary>
            Gets or sets the local name of the attribute.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlAttribute.Prefix">
            <summary>
            Gets or sets the namespace prefix of the current attribute. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlAttribute.Value">
            <summary>
            Gets or sets the text value of the attribute.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlAttribute.XmlQualifiedName">
            <summary>
            When overridden in a derived class, gets the qualified name of the attribute.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlAttribute.XName">
            <summary>
            Gets the qualified name of the current attribute.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlAttribute.Equals(DocumentFormat.OpenXml.OpenXmlAttribute)">
            <summary>
            Determines if this instance of an OpenXmlAttribute structure is equal to the specified instance of an OpenXmlAttribute structure.
            </summary>
            <param name="other">An instance of an OpenXmlAttribute structure.</param>
            <returns>Returns true if instances are equal; otherwise, returns false.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlAttribute.op_Equality(DocumentFormat.OpenXml.OpenXmlAttribute,DocumentFormat.OpenXml.OpenXmlAttribute)">
            <summary>
            Determines if two instances of OpenXmlAttribute structures are equal.
            </summary>
            <param name="attribute1">The first instance of an OpenXmlAttribute structure.</param>
            <param name="attribute2">The second instance of an OpenXmlAttribute structure.</param>
            <returns>Returns true if all corresponding members are equal; otherwise, returns false.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlAttribute.op_Inequality(DocumentFormat.OpenXml.OpenXmlAttribute,DocumentFormat.OpenXml.OpenXmlAttribute)">
            <summary>
            Determines if two instances of OpenXmlAttribute structures are not equal.
            </summary>
            <param name="attribute1">The first instance of an OpenXmlAttribute structure.</param>
            <param name="attribute2">The second instance of an OpenXmlAttribute structure.</param>
            <returns>Returns true if some corresponding members are different; otherwise, returns false.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlAttribute.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is a OpenXmlAttribute structure and if so, indicates whether it is equal to this instance of an OpenXmlAttribute structure. 
            </summary>
            <param name="obj">An Object.</param>
            <returns>Returns true if obj is an OpenXmlAttribute structure and it is equal to this instance of an OpenXmlAttribute structure; otherwise, returns false.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlAttribute.GetHashCode">
            <summary>
            Gets the hash code for this instance of an OpenXmlAttribute structure. 
            </summary>
            <returns>The hash code for this instance of an OpenXmlAttribute structure.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlCompositeType">
            <summary>
            Specifies the type of each child element's occurence. 
            Used in GetElement() and SetElement() for generated code.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.OpenXmlCompositeType.OneSequence">
            <summary>
            xsd:sequence, and maxOccurs=1.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.OpenXmlCompositeType.OneChoice">
            <summary>
            xsd:choice, and maxOccurs=1.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.OpenXmlCompositeType.OneAll">
            <summary>
            xsd:all.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlCompositeElement">
            <summary>
            Represents the base class for composite elements.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlCompositeElement class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OpenXmlCompositeElement class using the supplied outer XML.
            </summary>
            <param name="outerXml">The outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the OpenXmlCompositeElement class using the supplied collection of elements.
            </summary>
            <param name="childrenElements">A collection of elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
            <summary>
            Initializes a new instance of the OpenXmlCompositeElement class using the supplied collection of OpenXmlElement elements.
            </summary>
            <param name="childrenElements">A collection of OpenXmlElement elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the OpenXmlCompositeElement using the supplied array of OpenXmlElement elements.
            </summary>
            <param name="childrenElements">An array of OpenXmlElement elements.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlCompositeElement.FirstChild">
            <summary>
            Gets the first child of the current OpenXmlElement element.
            </summary>
            <remarks>
            Returns null (Nothing in Visual Basic) if there is no such OpenXmlElement element. 
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlCompositeElement.LastChild">
            <summary>
            Gets the last child of the current OpenXmlElement element.
            Returns null (Nothing in Visual Basic) if there is no such OpenXmlElement element. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlCompositeElement.HasChildren">
            <summary>
            Gets a value that indicates whether the current element has any child elements. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlCompositeElement.InnerText">
            <summary>
            Gets or sets the concatenated values of the current node and all of its children. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlCompositeElement.InnerXml">
            <summary>
            Gets or sets the markup that represents only the child nodes of the current node.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.AppendChild``1(``0)">
            <summary>
            Appends the specified element to the end of the current element's list of child nodes. 
            </summary>
            <param name="newChild">The OpenXmlElement element to append.</param>
            <returns>The OpenXmlElement element that was appended. </returns>
            <remarks>Returns null if newChild equals null.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.InsertAfter``1(``0,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Inserts the specified element immediately after the specified reference element.
            </summary>
            <param name="newChild">The OpenXmlElement element to insert.</param>
            <param name="refChild">The OpenXmlElement element that is in the reference node.</param>
            <returns>The OpenXmlElement element that was inserted.</returns>
            <remarks>Returns null if newChild is null. </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.InsertBefore``1(``0,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Inserts the specified element immediately before the specified reference element.
            </summary>
            <param name="newChild">The OpenXmlElement to insert.</param>
            <param name="refChild">The OpenXmlElement that is in the reference node.</param>
            <returns>The OpenXmlElement that was inserted.</returns>
            <remarks>Returns null if newChild equals null.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.InsertAt``1(``0,System.Int32)">
            <summary>
            Inserts the specified element at the specified index of the current element's children.
            </summary>
            <param name="newChild">The OpenXmlElement element to insert.</param>
            <param name="index">The zero-based index to insert the element to.</param>
            <returns>The OpenXmlElement element that was inserted.</returns>
            <remarks>Returns null if newChild equals null.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when index is less than 0 or is greater than the count of children.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.PrependChild``1(``0)">
            <summary>
            Inserts the specified element at the beginning of the current element's list of child nodes. 
            </summary>
            <param name="newChild">The OpenXmlElement element to add.</param>
            <returns>The OpenXmlElement that was added.</returns>
            <remarks>Returns null if newChild equals null.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.RemoveChild``1(``0)">
            <summary>
            Removes the specified child element. 
            </summary>
            <param name="oldChild">The element to remove. </param>
            <returns>The element that was removed. </returns>
            <remarks>Returns null if newChild equals null. </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.RemoveAllChildren">
            <summary>
            Removes all of the current element's child elements.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.ReplaceChild``1(DocumentFormat.OpenXml.OpenXmlElement,``0)">
            <summary>
            Replaces one of the current element's child elements with another OpenXmlElement element.
            </summary>
            <param name="newChild">The new OpenXmlElement to put in the child list.</param>
            <param name="oldChild">The OpenXmlElement to be replaced in the child list.</param>
            <returns>The OpenXmlElement that was replaced.</returns>
            <remarks>Returns null if newChild equals null.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.WriteContentTo(System.Xml.XmlWriter)">
            <summary>
            Saves all of the current node's children to the specified XmlWriter. 
            </summary>
            <param name="w">The XmlWriter at which to save the child nodes. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.ElementInsertingEvent(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Fires the ElementInserting event.
            </summary>
            <param name="element">The OpenXmlElement element to insert.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.ElementInsertedEvent(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Fires the ElementInserted event.
            </summary>
            <param name="element">The OpenXmlElement element to insert.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.ElementRemovingEvent(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Fires the ElementRemoving event.
            </summary>
            <param name="element">The OpenXmlElement element to remove.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.ElementRemovedEvent(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Fires the ElementRemoved event.
            </summary>
            <param name="element">The OpenXmlElement element to be removed.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.Populate(System.Xml.XmlReader,DocumentFormat.OpenXml.OpenXmlLoadMode)">
            <summary>
            Populates the XML into a strong typed DOM tree.
            </summary>
            <param name="xmlReader">The XmlReader to read the XML content.</param>
            <param name="loadMode">Specifies a load mode that is either lazy or full.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlCompositeElement.ElementTagNames">
            <summary>
            Gets the tag names of the child elements.
            </summary>
            <remarks>
            This property is overriden in generated classes.
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlCompositeElement.ElementNamespaceIds">
            <summary>
            Gets the namespace IDs of the child elements.
            </summary>
            <remarks>
            This property is overriden in generated classes.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlCompositeElement.GetElement``1(System.Int32)">
            <summary>
            Gets the child element that has the specified sequence number.
            Sequence numbers are generated by a code generator.
            </summary>
            <param name="sequenceNumber">The sequence number of the element.</param>
            <returns>An element that has the specified sequence number. Returns null (Nothing in Visual Basic) if no element is found having the specified sequence number.</returns>
            <remarks>
            Returns null if there are invalid children.
            </remarks>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlElement">
            <summary>
            Represents a base class that all elements in an Office Open XML document derive from.
            </summary>
            <remarks>
            Annotations will not be cloned when calling .Clone() and .CloneNode(bool).
            </remarks>
            <summary>
            Represents a base class for all elements in an Office Open XML document.
            </summary>
            <remarks>
            Annotations will not be cloned when calling .Clone() and .CloneNode(bool).
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlElement class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OpenXmlElement class using the supplied outer XML of the element.
            </summary>
            <param name="outerXml">The outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.next">
            <summary>
            Gets the next element in the linked list.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.XmlParsed">
            <summary>
            Returns true if the inner raw xml is parsed.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.RawOuterXml">
            <summary>
            Gets the raw OuterXml.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.FixedAttributesArray">
            <summary>
            Gets an array of fixed attributes (attributes that are defined in the schema).
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.Attributes">
            <summary>
            Gets an array of fixed attributes.
            The attributes will be parsed out if they are not yet parsed.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.NamespaceId">
            <summary>
            Gets the namespace ID of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.AttributeTagNames">
            <summary>
            Gets the tag names of each attribute.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.AttributeNamespaceIds">
            <summary>
            Gets the namespace IDs of each attribute.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.ElementTypeId">
            <summary>
            Gets the type ID of the current element. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.OpenXmlElementContext">
            <summary>
            Gets the OpenXmlEementContext of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.RootElementContext">
            <summary>
            Gets the OpenXmlEementContext from the root element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.FirstChild">
            <summary>
            Gets the first child of the OpenXmlElement element.
            Returns null (Nothing in Visual Basic) if there is no such OpenXmlElement element. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.LastChild">
            <summary>
            Gets the last child of the OpenXmlElement element.
            Returns null (Nothing in Visual Basic) if there is no such OpenXmlElement element. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.HasAttributes">
            <summary>
            Gets a boolean value that indicates whether the current element has any attributes. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.ExtendedAttributes">
            <summary>
            Gets all extended attributes (attributes not defined in the schema) of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.HasChildren">
            <summary>
            Gets a value that indicates whether the current element has any child elements. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.ChildElements">
            <summary>
            Gets all the child nodes of the current element. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.Parent">
            <summary>
            Gets the parent element of the current element. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.NamespaceUri">
            <summary>
            Gets the namespace URI of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.LocalName">
            <summary>
            Gets the local name of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.Prefix">
            <summary>
            Gets the namespace prefix of current element. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.NamespaceDeclarations">
            <summary>
            Gets all the namespace declarations defined in the current element. Returns an empty enumerator if there is no namespace declaration.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.XmlQualifiedName">
            <summary>
            Gets the qualified name of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.XName">
            <summary>
            Gets the qualified name of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.InnerText">
            <summary>
            Gets the concatenated values of the node and all of its children. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.InnerXml">
            <summary>
            Gets or sets the markup that represents only the child elements of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.OuterXml">
            <summary>
            Gets the markup that represents the current element and all of its child elements. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.GetAttribute(System.String,System.String)">
            <summary>
            Gets an Open XML attribute with the specified tag name and namespace URI.
            </summary>
            <param name="localName">The tag name.</param>
            <param name="namespaceUri">The namespace URI.</param>
            <returns>Returns a clone of the OpenXmlAttribute with local name equal to "localName" and namespace URI equal to "namespaceUri".</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">When the "localName" is empty.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">When the element does not have the specified attribute.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.GetAttributes">
            <summary>
            Gets a list that contains a copy of all the attributes.
            </summary>
            <returns>A list of attributes. Return an empty list if there are no attributes.</returns>
            <remarks>The returned list is a non-live copy.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.GetAttributes(System.Collections.Generic.ICollection{DocumentFormat.OpenXml.OpenXmlAttribute})">
            <summary>
            Gets a collection that contains a copy of all the attributes.
            </summary>
            <param name="attributes">The collection to hold the copy of the attributes.</param>
            <remarks>The returned collection is a non-live copy.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.SetAttribute(DocumentFormat.OpenXml.OpenXmlAttribute)">
            <summary>
            Sets an attribute to the specified element.
            If the attribute is a known attribute, the value of the attribute is set.
            If the attribute is an extended attribute, the 'openxmlAttribute' is added to the extended attributes list.
            </summary>
            <param name="openXmlAttribute">The attribute to be set on the element.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when the LocalName of the "openxmlAttribute" parameter is null or empty.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when an attempt to set a namespace declaration is made.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.RemoveAttribute(System.String,System.String)">
            <summary>
            Removes the attribute from the current element.
            </summary>
            <param name="localName">The local name of the attribute.</param>
            <param name="namespaceUri">The namesapce URI of the attribute.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the localName is empty.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.SetAttributes(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlAttribute})">
            <summary>
            Sets a number of attributes to the element.
            If an attribute is a known attribute, the value of the attribute is set.
            If an attribute is an extended attribute, the 'openxmlAttribute' is added to the extended attributes list.
            </summary>
            <param name="openXmlAttributes">The attributes to be set on the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.ClearAllAttributes">
            <summary>
            Clears all of the attributes, including both known attributes and extended attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.AddNamespaceDeclaration(System.String,System.String)">
            <summary>
            Adds a namepace declaration to the current node. 
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="uri">The uri.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if the prefix is already used in the current node.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.RemoveNamespaceDeclaration(System.String)">
            <summary>
            Removes the namespace declaration for the specified prefix. Removes nothing if there is no prefix.
            </summary>
            <param name="prefix"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.GetFirstChild``1">
            <summary>
            Finds the first child element in type T.
            </summary>
            <typeparam name="T">Type of element.</typeparam>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.PreviousSibling">
            <summary>
            Gets the OpenXmlElement element that immediately precedes the current OpenXmlElement element. 
            Returns null (Nothing in Visual Basic ) if there is no preceding OpenXmlElement element.
            </summary>
            <returns>The OpenXmlElement element that immediately precedes the current OpenXmlElement element.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.PreviousSibling``1">
            <summary>
            Gets the OpenXmlElement element with the specified type that precedes the current OpenXmlElement. 
            Returns null (Nothing in Visual Basic) if there is no preceding OpenXmlElement element.
            </summary>
            <returns>The OpenXmlElement element with the specified type that precedes the current OpenXmlElement element.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.NextSibling">
            <summary>
            Gets the OpenXmlElement element that immediately follows the current OpenXmlElement element. 
            Returns null (Nothing in Visual Basic) if there is no next OpenXmlElement element. 
            </summary>
            <returns>The OpenXmlElement element that immediately follows the current OpenXmlElement element.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.NextSibling``1">
            <summary>
            Gets the OpenXmlElement element with the specified type that follows the current OpenXmlElement element. 
            Returns null (Nothing in Visual Basic) if there is no next OpenXmlElement.
            </summary>
            <returns>The OpenXmlElement element with the specified type that follows the current OpenXmlElement element.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Ancestors">
            <summary>
            Enumerates all of the current element's ancestors. 
            </summary>
            <returns>An IEnumerable object that contains a list of the current OpenXmlElement element's ancestors.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Ancestors``1">
            <summary>
            Enumerates only the current element's ancestors that have the specified type.
            </summary>
            <typeparam name="T">The element type.</typeparam>
            <returns>An IEnumerable object that contains a list of the current OpenXmlElement element's ancestors.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Elements``1">
            <summary>
            Enumerates only the current element's children that have the specified type.
            </summary>
            <typeparam name="T">The element type.</typeparam>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Elements">
            <summary>
            Enumerates all of the current element's children. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Descendants``1">
            <summary>
            Enumerate all of the current element's descendants of type T. 
            </summary>
            <typeparam name="T">The element type.</typeparam>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Descendants">
            <summary>
            Enumerates all of the current element's descendants. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.ElementsBefore">
            <summary>
            Enumerates all of the sibling elements that precede the current element and have the same parent as the current element. 
            </summary>
            <returns>An IEnumerable object that contains a list of OpenXmlElement elements.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.ElementsAfter">
            <summary>
            Enumerates all of the sibling elements that follow the current element and have the same parent as the current element. 
            </summary>
            <returns>An IEnumerable object that contains a list of OpenXmlElement elements.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.CloneNode(System.Boolean)">
            <summary>
            When overridden in a derived class, creates a duplicate of the node. 
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>The cloned node. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current node to the specified XmlWriter. 
            </summary>
            <param name="xmlWriter">The XmlWriter to which to save the current node. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Append(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
            <summary>
            Appends each element from a list of elements to the end of the current element's list of child elements. 
            </summary>
            <param name="newChildren">The list that contains the OpenXmlElement elements to be appended.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Append(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Appends each element from an array of elements to the end of the current element's list of child elements. 
            </summary>
            <param name="newChildren">The array of OpenXmlElement elements to be appended.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.AppendChild``1(``0)">
            <summary>
            Appends the specified element to the end of the current element's list of child nodes. 
            </summary>
            <param name="newChild">The OpenXmlElement element to append.</param>
            <returns>The OpenXmlElement element that was appended. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.InsertAfter``1(``0,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Inserts the specified element immediately after the specified reference element.
            </summary>
            <param name="newChild">The OpenXmlElement element to insert.</param>
            <param name="refChild">The reference OpenXmlElement element. newChild is placed after refChild. </param>
            <returns>The OpenXmlElement element that was inserted.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.InsertBefore``1(``0,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Inserts the specified element immediately before the specified reference element.
            </summary>
            <param name="newChild">The OpenXmlElement element to insert.</param>
            <param name="refChild">The reference OpenXmlElement element. newChild is placed before refChild.</param>
            <returns>The OpenXmlElement element that was inserted.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.InsertAfterSelf``1(``0)">
            <summary>
            Inserts the specified element immediately after the current element.
            </summary>
            <param name="newElement">The new element to insert.</param>
            <returns>The inserted element.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the "newElement" parameter is a null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the parent is a null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.InsertBeforeSelf``1(``0)">
            <summary>
            Inserts the specified element immediately before the current element.
            </summary>
            <param name="newElement">The new element to insert.</param>
            <returns>The inserted element.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the "newElement" parameter is a null reference.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when the parent is a null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.InsertAt``1(``0,System.Int32)">
            <summary>
            Inserts the specified element at the specified index in the current element's list of child elements.
            </summary>
            <param name="newChild">The OpenXmlElement element to insert.</param>
            <param name="index">The zero-based index where the element is to be inserted.</param>
            <returns>The OpenXmlElement element that was inserted.</returns>
            <remarks>Returns null if newChild equals null.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.PrependChild``1(``0)">
            <summary>
            Inserts the specified element at the beginning of the current element's list of child elements. 
            </summary>
            <param name="newChild">The OpenXmlElement element to add.</param>
            <returns>The OpenXmlElement element that was added.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.RemoveChild``1(``0)">
            <summary>
            Removes the specified child element from the current element's list of child elements. 
            </summary>
            <param name="oldChild">The child element to remove. </param>
            <returns>The element that was removed. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.ReplaceChild``1(DocumentFormat.OpenXml.OpenXmlElement,``0)">
            <summary>
            Replaces a child element with another child element in the current element's list of child elements.
            </summary>
            <param name="newChild">The new child element to put in the list.</param>
            <param name="oldChild">The child element to replace in the list.</param>
            <returns>The OpenXmlElement element that was replaced.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.RemoveAllChildren">
            <summary>
            Removes all of the current element's child elements.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.RemoveAllChildren``1">
            <summary>
            Remove all of the current element's child elements that are of type T.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Remove">
            <summary>
            Removes the current element from its parent.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the parent is a null reference.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.IsAfter(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Determines if the current element appears after a specified element in document order.
            </summary>
            <param name="element">The element to compare for order.</param>
            <returns>Returns true if the current element appears after the specified element in document order; otherwise returns false.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.IsBefore(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Determines if the current element appears before a specified element in document order.
            </summary>
            <param name="element">The element to compare for order.</param>
            <returns>Returns true if the current element appears before the specified element in document order; otherwise returns false.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.GetOrder(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Gets the order of the two specified elements in document order.
            </summary>
            <param name="element1">The first element to compare for order.</param>
            <param name="element2">The second element to compare for order.</param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.WriteContentTo(System.Xml.XmlWriter)">
            <summary>
            Saves all of the children of the current node to the specified XmlWriter. 
            </summary>
            <param name="w">The XmlWriter at which to save the child nodes. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.TrySetFixedAttribute(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Attempts to set the attribute to a known attribute.
            </summary>
            <param name="namespaceUri"></param>
            <param name="localName"></param>
            <param name="value"></param>
            <param name="strictTranslation"></param>
            <returns>true if the attribute is a known attribute.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.PushMcContext(System.Xml.XmlReader)">
            <summary>
            Reads MC attributes from the xmlReader and than pushes MC Context on needed.
            This xmlReader will keeps on the element start after this method.
            </summary>
            <param name="xmlReader">This method screen all attribute from xmlReader, and then set the xmlReader back to the element start.</param>
            <returns>Returns true if a MCAttributes is pushed.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.CheckMustUnderstandAttr(System.Xml.XmlReader,DocumentFormat.OpenXml.MarkupCompatibilityAttributes,DocumentFormat.OpenXml.Packaging.MarkupCompatibilityProcessSettings)">
            <summary>
            if this is a normal node, check mustunderstand attr in loading time
            </summary>
            <param name="reader">The XmlReader.</param>
            <param name="mcAttributes">The MarkupCompatibilityAttributes.</param>
            <param name="mcSettings">The MarkupCompatibilityProcessSettings.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.CheckMustUnderstandAttr">
            <summary>
            if this is a node in ACB, check mustunderstand after loaded
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Indicates whether the current element is available in a specific version of Office Application.
            For strong typed element, the return value will be generated according to the schema.
            For OpenXmlUnknownElement element, always returns false, no matter what the version is.
            For OpenXmlMiscNode element, always returns true, no matter what the version is.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.AddAnnotation(System.Object)">
            <summary>
            Adds an object to the current OpenXmlElement element's list of annotations.
            </summary>
            <param name="annotation">The annotation to add to the current OpenXmlElement element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Annotation``1">
            <summary>
            Get the first annotation object of the specified type from the current OpenXmlElement element.
            </summary>
            <typeparam name="T">The type of the annotation to retrieve.</typeparam>
            <returns>The first annotation object of the specified type.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Annotation(System.Type)">
            <summary>
            Get the first annotation object of the specified type from the current OpenXmlElement element.
            </summary>
            <param name="type">The type of the annotation to retrieve.</param>
            <returns>The first annotation object with the specified type.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Annotations``1">
            <summary>
            Gets a collection of annotations with the specified type for the current OpenXmlElement element.
            </summary>
            <typeparam name="T">The type of the annotations to retrieve.</typeparam>
            <returns>An IEnumerable(T) object that contains the annotations for current OpenXmlElement element.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Annotations(System.Type)">
            <summary>
            Gets a collection of annotations with the specified type for the current OpenXmlElement element.
            </summary>
            <param name="type">The type of the annotations to retrieve.</param>
            <returns>An IEnumerable(T) object that contains the annotations for the current OpenXmlElement element.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.RemoveAnnotations``1">
            <summary>
            Removes the annotations with the specified type from the current OpenXmlElement element.
            </summary>
            <typeparam name="T">The type of the annotations to remove.</typeparam>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.RemoveAnnotations(System.Type)">
            <summary>
            Removes the annotations of the specified type from the current OpenXmlElement element.
            </summary>
            <param name="type">The type of the annotations to remove.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the child collection. 
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the child collection. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.Clone">
            <summary>
            Creates a duplicate of the current node. 
            </summary>
            <remarks>
            Cloning an OpenXmlNode copies all attributes and their values, including those generated by the XML processor to represent defaulted attributes. This method recursively clones the node and the subtree underneath it.
            Cloning is equivalent to calling CloneNode(true).
            </remarks>
            <returns>The cloned node.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.IsXmlnsUri(System.String)">
            <summary>
            Indicates whether the specified namespace uri equals @"http://www.w3.org/2000/xmlns/".
            </summary>
            <param name="nsUri">The namespace uri.</param>
            <returns>True if nsUri == @"http://www.w3.org/2000/xmlns/".</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.IsKnownNamespace(System.String)">
            <summary>
            Indicates whether the specified namespace is a known namespace.
            </summary>
            <param name="namespaceUri"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.IsKnownElement(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Returns true when the specified element is not an OpenXmlUnknownElement and it is not an OpenXmlMiscNode.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElement.MCAttributes">
            <summary>
            Sets the markup compatibility attributes. Returns null if no markup compatibility attributes are defined for the current element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.LoadMCAttribute(System.Xml.XmlReader)">
            <summary>
            Loads the MC attributes from the xmlReader.
            This xmlReader will keeps on the element start after this method.
            </summary>
            <param name="xmlReader">This method screen all attribute from xmlReader, and then set the xmlReader back to the element start.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.AddMCAttributes(System.Collections.Generic.ICollection{DocumentFormat.OpenXml.OpenXmlAttribute})">
            <summary>
            Adds the MC attributes to the "attributes" collection.
            </summary>
            <param name="attributes"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.GetMCAttribute(System.String)">
            <summary>
            Finds the corresponding MC attribute from the attribute name.
            </summary>
            <param name="localName"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.LookupNamespace(System.String)">
            <summary>
            Resolves the namespace prefix in the context of the current node.
            </summary>
            <param name="prefix">The prefix to resolve.</param>
            <returns>The resolved namespace. Returns null (Nothing in Visual Basic) if the prefix cannot be resolved.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.LookupPrefix(System.String)">
            <summary>
            Finds the corresponding prefix for a namespace uri in the current element scope.
            </summary>
            <param name="namespaceUri">The namespace uri.</param>
            <returns>The corresponding prefix. Returns null (Nothing in Visual Basic) if no prefix is found.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.GetNextNonMiscElementSibling">
            <summary>
            Returns the next sibling element that is not an OpenXmlMiscNode element.
            </summary>
            <returns>The next sibling element that is not an OpenXmlMiscNode element.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.GetFirstNonMiscElementChild">
            <summary>
            Returns the first child element that is not an OpenXmlMiscNode element.
            </summary>
            <returns>The first child element that is not an OpenXmlMiscNode element.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElement.GetPartRootElement">
            <summary>
            Gets the root element of the current OpenXmlElement element.
            </summary>
            <returns>
            Returns the root element if it is an OpenXmlPartRootElement element. Returns the current element if it is an OpenXmlPartRootElement element.
            Returns null (Nothing in Visual Basic) if the current element has no parent or the root element is not an OpenXmlPartRootElement element.
            </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.AttributeFormatter">
            <summary>
            The base class of the Attribute formatter. (abstract)
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AttributeFormatter.#ctor(System.Int32)">
            <summary>
            The constructor to set the length of characters to express.
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.AttributeFormatter.StringToValue(System.String)">
            <summary>
            Convert string to long. (abstract)
            </summary>
            <param name="strValue"></param>
            <returns>the converted long value</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.AttributeFormatter.ValueToString(System.Int64)">
            <summary>
            Convert long to string. (abstract)
            </summary>
            <param name="longValue"></param>
            <returns>the converted string</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.BinAttributeFormatter">
            <summary>
            Convert format between long and bin.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.BinAttributeFormatter.#ctor(System.Int32)">
            <summary>
            The constructor to set the length of characters to express.
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.BinAttributeFormatter.StringToValue(System.String)">
            <summary>
            Convert string to long.
            </summary>
            <param name="strValue"></param>
            <returns>the converted long value</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.BinAttributeFormatter.ValueToString(System.Int64)">
            <summary>
            Convert long to string.
            </summary>
            <param name="longValue"></param>
            <returns>the converted string</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.HexAttributeFormatter">
            <summary>
            Convert format between long and hex.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.HexAttributeFormatter.#ctor(System.Int32)">
            <summary>
            The constructor to set the length of characters to express.
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.HexAttributeFormatter.StringToValue(System.String)">
            <summary>
            Convert string to long.
            </summary>
            <param name="strValue"></param>
            <returns>the converted long value</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.HexAttributeFormatter.ValueToString(System.Int64)">
            <summary>
            Convert long to string.
            </summary>
            <param name="longValue"></param>
            <returns>the converted string</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.TagAttributeTranslator">
            <summary>
            The base class of the Attribute translator for Tag.
            TagAttributeTranslator converts an attribute from OrigAttrName="OrigAttrValue" to NewAttrName="NewAttrValue".
            AttrTrait is currently used as the bit mask when NewAttrValue needs to be in the bit field representation.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.TagAttributeTranslator.SetLocalNameAndValue(System.String,System.String)">
            <summary>
            Set LocalName and Value.
            </summary>
            <param name="strLocalName"></param>
            <param name="strValue"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.TagAttributeTranslator.GetIndexByAttributeName">
            <summary>
            Get the index to specify the attribute name to translate.
            </summary>
            <returns>The index</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TagAttributeTranslator.GetIndexByValue">
            <summary>
            Get the index to specify the value to translate.
            </summary>
            <returns>The index</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TagAttributeTranslator.SetIndex">
            <summary>
            Set the index.
            </summary>
            <returns>The index</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.TagAttributeTranslator.Index">
            <summary>
            Get the Index
            </summary>
            <returns>The index</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.TagAttributeTranslator.LocalName">
            <summary>
            Get the LocalName
            </summary>
            <returns>The LocalName</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.TagAttributeTranslator.Value">
            <summary>
            Get the Value
            </summary>
            <returns>The value</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.TagAttributeTranslator.Trait">
            <summary>
            Get the Trait.
            </summary>
            <returns>The Trait</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.TagAttributeTranslator.Formatter">
            <summary>
            Get the formatter.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DocumentTagAttributeTranslator.SetIndex">
            <summary>
            Set the index to specify the value to translate.
            </summary>
            <returns>The index</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.CnfStyleTagAttributeTranslator.SetIndex">
            <summary>
            Set the index to specify the attribute name to translate.
            </summary>
            <returns>The index</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.CnfStyleTagAttributeTranslator.Value">
            <summary>
            Get the attribute value.
            </summary>
            <returns>The attribute value</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TblLookTagAttributeTranslator.SetIndex">
            <summary>
            Set the index to specify the attribute name to translate.
            </summary>
            <returns>The index</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.TblLookTagAttributeTranslator.Value">
            <summary>
            Get the attribute value.
            </summary>
            <returns>The attribute value</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.IndTagAttributeTranslator.SetIndex">
            <summary>
            Set the index to specify the attribte name to translate.
            </summary>
            <returns>The index</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.IndTagAttributeTranslator.Value">
            <summary>
            Get the attribute value.
            </summary>
            <returns>The attribute value</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.JcTabTagAttributeTranslator.SetIndex">
            <summary>
            Set the index to specify the value to translate.
            </summary>
            <returns>The index</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.StylePaneSortMethodTagAttributeTranslator.SetIndex">
            <summary>
            Set the index to specify the value to translate.
            </summary>
            <returns>The index</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TextDirectionTagAttributeTranslator.SetIndex">
            <summary>
            Set the index to specify the value to translate.
            </summary>
            <returns>The index</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.AttributeTranslator">
            <summary>
            Translate Strict attributes to Transitional
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.AttributeTranslator.Translate(System.String,System.String,System.String)">
            <summary>
            Translate Strict attribute to Transitional
            </summary>
            <param name="strTag"></param>
            <param name="strLocalName"></param>
            <param name="strValue"></param>
            <returns>The translator</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlLoadMode">
            <summary>
            OpenXmlLoadMode - load mode, default is Lazy
                Full - load all the OpenXmlElements recursively
                Lazy (default) - load N layer descendant elements from the current element, lazy load (cache OuterXml) for others
                        default is populate 3 layers 
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.OpenXmlLoadMode.Full">
            <summary>
            Load all the OpenXmlElements recursively
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.OpenXmlLoadMode.Lazy">
            <summary>
            Load only one layer element, cache OuterXml
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlElementContext">
            <summary>
            Represents the OpenXml loading context.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElementContext.XmlNameTable">
            <summary>
            The XmlNameTable to be used by internal XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElementContext.XmlReaderSettings">
            <summary>
            The XmlReaderSettings to be used by internal XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElementContext.LoadMode">
            <summary>
            Load mode
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElementContext.LazySteps">
            <summary>
            Layers to be full populated, only effective when LoadMode==Lazy.
            Start from 0 (populate only the children layer).
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElementContext.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlElementContext class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElementContext.IsXmlnsUri(System.String)">
            <summary>
            Determines whether the namespace uri equals @"http://www.w3.org/2000/xmlns/".
            </summary>
            <param name="nsUri">The namespace uri.</param>
            <returns>Returns true if nsUri equals @"http://www.w3.org/2000/xmlns/".</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElementContext.ElementInsertingEvent(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Fires the ElementInserting event.
            </summary>
            <param name="element">The OpenXmlElement element to insert.</param>
            <param name="parent">The parent element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElementContext.ElementInsertedEvent(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Fires the ElementInserted event.
            </summary>
            <param name="element">The inserted OpenXmlElement element.</param>
            <param name="parent">The parent element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElementContext.ElementRemovingEvent(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Fires the ElementRemoving event.
            </summary>
            <param name="element">The OpenXmlElement element to remove.</param>
            <param name="parent">The parent element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElementContext.ElementRemovedEvent(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Fires the ElementRemoved event.
            </summary>
            <param name="element">The removed OpenXmlElement element.</param>
            <param name="parent">The parent element.</param>
        </member>
        <member name="E:DocumentFormat.OpenXml.OpenXmlElementContext.ElementInserting">
            <summary>
            Occurs when an element is about to be inserted into the element hierarchy.
            </summary>
        </member>
        <member name="E:DocumentFormat.OpenXml.OpenXmlElementContext.ElementInserted">
            <summary>
            Occurs when an element has been inserted into the element hierarchy.
            </summary>
        </member>
        <member name="E:DocumentFormat.OpenXml.OpenXmlElementContext.ElementRemoving">
            <summary>
            Occurs when an element is being removed from the element hierarchy.
            </summary>
        </member>
        <member name="E:DocumentFormat.OpenXml.OpenXmlElementContext.ElementRemoved">
            <summary>
            Occurs when an element has been removed from the element hierarchy.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.ElementEventArgs">
            <summary>
            Represents arguments for element events.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.ElementEventArgs.#ctor(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Initializes a new instance of the ElementEventArgs class using the
             supplied elements.
            </summary>
            <param name="element">
            The element that caused the event.
            </param>
            <param name="parentElement">
            The parent element of the element that caused the event.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.ElementEventArgs.Element">
            <summary>
            Gets the element that caused the event.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ElementEventArgs.ParentElement">
            <summary>
            Gets the parent element of the element that caused the event.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlElementList">
            <summary>
            Represents an ordered collection of OpenXmlElement elements.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElementList.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlElementList class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElementList.GetItem(System.Int32)">
            <summary>
            Gets the OpenXmlElement element at the specified index.
            </summary>
            <param name="index">
            A zero-based integer that represents an index in the list of elements.
            </param>
            <returns>
            An OpenXmlElement element at the specified index in the collection. Returns
             null (Nothing in Visual Basic) if the index is greater than or equal
             to the number of elements in the list.
            </returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElementList.Count">
            <summary>
            Gets the number of OpenXmlElement elements in the OpenXmlElementList.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlElementList.Item(System.Int32)">
            <summary>
            Gets a node at the specified index.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElementList.First``1">
            <summary>
            Finds the first child element of type T.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElementList.OfType``1">
            <summary>
            Gets an IEnumerable for a specific type of element.
            </summary>
            <typeparam name="T">Type of element</typeparam>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlElementList.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlChildElements">
            <summary>
            Implements OpenXmlElementList.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.EmptyElementList.EmptyElementListSingleton">
            <summary>
            Static singleton.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.EmptyEnumerator`1">
            <summary>
            Empty Enumerator.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.EmptyEnumerator`1.EmptyEnumeratorSingleton">
            <summary>
            Static singleton.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlLeafElement">
            <summary>
            Represents the base class from which leaf elements are derived.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlLeafElement.ShadowElement">
            <summary>
            Represents a shadow element to hold child elements if there are any. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlLeafElement.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlLeafElement class. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlLeafElement.HasChildren">
            <summary>
            Gets a value that indicates whether the current element has any child
             elements.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlLeafElement.InnerXml">
            <summary>
            Gets or sets the markup that only represents child elements of the current
             element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlLeafElement.WriteContentTo(System.Xml.XmlWriter)">
            <summary>
            Saves all child elements of the current element to the specified XmlWriter. 
            </summary>
            <param name="w">The XmlWriter to which to save the child elements. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlLeafElement.RemoveAllChildren">
            <summary>
            Removes all child elements of the current element.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlLeafTextElement">
            <summary>
            Represents the base class from which leaf elements that have text are derived.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlLeafTextElement.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlLeafTextElement class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlLeafTextElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OpenXmlLeafTextElement class using the supplied text.  
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlLeafTextElement.InnerTextToValue(System.String)">
            <summary>
            Convert the text into value (depends on the type defined in the schema).
            </summary>
            <param name="text">The text to convert.</param>
            <returns>An OpenXmlSimpleType value.</returns>
            <remarks>All generated classes that are derived from this class will generate this method.</remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlLeafTextElement.HasChildren">
            <summary>
            Gets a value that indicates whether the current element has any child
             elements.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlLeafTextElement.InnerText">
            <summary>
            Gets or sets the concatenated values of the element and all of its
             child elements.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlLeafTextElement.InnerXml">
            <summary>
            Gets or sets the markup that only represents child elements of the
             current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlLeafTextElement.Text">
            <summary>
            Gets or sets the text of the current element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlLeafTextElement.WriteContentTo(System.Xml.XmlWriter)">
            <summary>
            Saves all the child elements of the current element to the specified XmlWriter. 
            </summary>
            <param name="w">The XmlWriter to which to save the elements. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlLeafTextElement.RemoveAllChildren">
            <summary>
            Removes all child elements of the current element.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlMiscNode">
            <summary>
            Represents an Open XML non element node (i.e. PT, Comments, Entity, Notation, XmlDeclaration).
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlMiscNode.#ctor(System.Xml.XmlNodeType)">
            <summary>
            Initializes a new instance of the OpenXmlMiscNode class using the
            supplied XmlNodeType value.
            </summary>
            <param name="nodeType">
            The XmlNodeType value.
            </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlMiscNode.#ctor(System.Xml.XmlNodeType,System.String)">
            <summary>
            Initializes a new instance of the OpenXmlMiscNode class using the
            supplied XmlNodeType and outer XML values.
            </summary>
            <param name="nodeType">The XmlNodeType value.</param>
            <param name="outerXml">The outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlMiscNode.XmlNodeType">
            <summary>
            Specifies the type of XML node. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlMiscNode.ElementTypeId">
            <summary>
            The type ID of the element. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlMiscNode.HasChildren">
            <summary>
            Gets a value that indicates whether the current element has any child
            elements.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlMiscNode.LocalName">
            <summary>
            When overridden in a derived class, gets the local name of the node.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlMiscNode.NamespaceUri">
            <summary>
            Gets the namespace URI of the current node.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlMiscNode.Prefix">
            <summary>
            Gets or sets the namespace prefix of the current node.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlMiscNode.XmlQualifiedName">
            <summary>
            When overridden in a derived class, gets the qualified name of the node.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlMiscNode.InnerXml">
            <summary>
            Gets or sets the markup that represents only the child nodes of the
            current node.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlMiscNode.CloneNode(System.Boolean)">
            <summary>
            When overridden in a derived class, creates a duplicate of the node. 
            </summary>
            <param name="deep">
            Specify true to recursively clone the subtree under the specified
            node; false to clone only the node itself.
            </param>
            <returns>The cloned node. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlMiscNode.RemoveAllChildren">
            <summary>
            Removes all child elements.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlMiscNode.WriteContentTo(System.Xml.XmlWriter)">
            <summary>
            Saves all the children of the node to the specified XmlWriter. 
            </summary>
            <param name="w">The XmlWriter to which you want to save. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlMiscNode.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current node to the specified XmlWriter. 
            </summary>
            <param name="xmlWriter">
            The XmlWriter at which to save the current node.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlMiscNode.Value">
            <summary>
            Holds the XmlReader.Value on loading.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlMiscNode.LoadOuterXml(System.Xml.XmlReader)">
            <summary>
            Load the out xml from the XmlReader.
            </summary>
            <param name="xmlReader"></param>
            <remarks>The XmlReader not be moved.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlMiscNode.LoadAttributes(System.Xml.XmlReader)">
            <summary>
            Do nothing for MiscNode.
            Override this method because the MC loading algorithm try to call this method in parent's Populate. 
            While the OpenXmlElement.LoadAttributes() will cause the reader be moved which should not.
            </summary>
            <param name="xmlReader"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlMiscNode.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            For OpenXmlMiscNode, always return true, no matter what the version is.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlPartRootElement">
            <summary>
            Represents a base class for all root elements.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlPartRootElement class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.#ctor(DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Initializes a new instance of the OpenXmlPartRootElement class using the supplied OpenXmlPart.
            </summary>
            <param name="openXmlPart">The OpenXmlPart class.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OpenXmlPartRootElement class using the supplied outer XML.
            </summary>
            <param name="outerXml">The outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
            <summary>
            Initializes a new instance of the OpenXmlPartRootElement class using the supplied list of child elements.
            </summary>
            <param name="childElements">All child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the OpenXmlPartRootElement class using the supplied array of child elements.
            </summary>
            <param name="childElements">All child elements</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartRootElement.RootElementContext">
            <summary>
            Gets the OpenXmlEementContext.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.LoadFromPart(DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Load the DOM tree from the Open XML part.
            </summary>
            <param name="openXmlPart">The part this root element to be loaded from.</param>
            <exception cref="T:System.IO.InvalidDataException">Thrown when the part contains an incorrect root element.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.LoadFromPart(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.IO.Stream)">
            <summary>
            Load the DOM tree from the Open XML part.
            </summary>
            <param name="openXmlPart">The part this root element to be loaded from.</param>
            <param name="partStream">The stream of the part.</param>
            <returns>
            Returns true when the part stream is loaded successfully into this root element.
            Returns false when the part stream does not contain any xml element.
            </returns>
            <exception cref="T:System.IO.InvalidDataException">Thrown when the part stream contains an incorrect root element.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.SaveToPart(DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Save the DOM into the OpenXML part.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.Save(System.IO.Stream)">
            <summary>
            Saves the DOM tree to the specified stream.
            </summary>
            <param name="stream">
            The stream to which to save the XML.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartRootElement.OpenXmlPart">
            <summary>
            Get / set the part that is associated with the DOM tree.
            It returns null when the DOM tree is not associated with a part.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.Save">
            <summary>
            Saves the data in the DOM tree back to the part. This method can
            be called multiple times and each time it is called, the stream
            will be flushed.
            </summary>
            <remarks>
            Call this method explicitly to save the changes in the DOM tree.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown when the tree is not associated with a part.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.Reload">
            <summary>
            Reloads the part content into an Open XML DOM tree. This method can
            be called multiple times and each time it is called, the tree will
            be reloaded and previous changes on the tree are abandoned.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the tree is not associated with a part.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartRootElement.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current node to the specified XmlWriter. 
            </summary>
            <param name="xmlWriter">
            The XmlWriter to which to save the current node.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartRootElement.WriteAllNamespaceOnRoot">
            <summary>
            If this property is true, then the Save method will try write all namespace declation on the root element.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.XmlConvertingReaderFactory">
            <summary>
            Defines the XmlConvertingReaderFactory.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.XmlConvertingReader">
            <summary>
            Defines the XmlConvertingReader - This XmlReader tries to replace the Strict namespaces with equivalent Transitional namespaces.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.#ctor(System.Xml.XmlReader,System.Boolean)">
            <summary>
            XmlConvertingReader
            </summary>
            <param name="baseReader">XmlReader</param>
            <param name="strictTranslation">bool</param>
            <returns></returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.StrictTranslation">
            <summary>
            Return true if strictTranslation is enabled.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.Close">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.Dispose(System.Boolean)">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.Read">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.GetAttribute(System.Int32)">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.GetAttribute(System.String)">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.GetAttribute(System.String,System.String)">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.LookupNamespace(System.String)">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.MoveToAttribute(System.Int32)">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.MoveToAttribute(System.String)">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.MoveToAttribute(System.String,System.String)">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.MoveToElement">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.MoveToFirstAttribute">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.MoveToNextAttribute">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.ReadAttributeValue">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.ResolveEntity">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.XmlConvertingReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
            <summary>
            Override the method defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.AttributeCount">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.BaseURI">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.CanReadBinaryContent">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.CanReadValueChunk">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.CanResolveEntity">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.Depth">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.EOF">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.HasValue">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.IsDefault">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.IsEmptyElement">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.Item(System.Int32)">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.Item(System.String)">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.Item(System.String,System.String)">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.LocalName">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.Name">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.NamespaceURI">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.NameTable">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.NodeType">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.Prefix">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.QuoteChar">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.ReadState">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.Value">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.XmlLang">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.XmlConvertingReader.XmlSpace">
            <summary>
            Override the property defined in XmlReader
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlReader">
            <summary>
            Represents the Open XML reader class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlReader class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the OpenXmlReader class using the supplied Boolean value.
            </summary>
            <param name="readMiscNodes">Specify false to indicate to the reader to skip all miscellaneous nodes. The default value is false.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.Create(DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Creates an OpenXmlReader from the specified OpenXmlPart.
            </summary>
            <param name="openXmlPart">The OpenXmlPart to read.</param>
            <returns>The newly created OpenXmlReader.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.Create(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Boolean)">
            <summary>
            Creates an OpenXmlReader from the specified OpenXmlPart and Boolean values.
            </summary>
            <param name="openXmlPart">The OpenXmlPart to read.</param>
            <param name="readMiscNodes">Specify false to indicate to the reader to skip all miscellaneous nodes. The default value is false.</param>
            <returns>The newly created OpenXmlReader.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.Create(System.IO.Stream)">
            <summary>
            Creates an OpenXmlReader from the specified part stream.
            </summary>
            <param name="partStream">The part stream.</param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.Create(System.IO.Stream,System.Boolean)">
            <summary>
            Creates an OpenXmlReader from the specified part stream and Boolean values.
            </summary>
            <param name="partStream">The part stream.</param>
            <param name="readMiscNodes">Specify false to indicate to the reader to skip all miscellaneous nodes. The default value is false.</param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.Create(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Creates an OpenXmlReader from the OpenXmlElement (travel the DOM tree).
            </summary>
            <param name="openXmlElement">The OpenXmlElement to read.</param>
            <returns>The newly created OpenXmlReader.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.Create(DocumentFormat.OpenXml.OpenXmlElement,System.Boolean)">
            <summary>
            Creates an OpenXmlReader from the OpenXmlElement (travel the DOM tree).
            </summary>
            <param name="openXmlElement">The OpenXmlElement to read.</param>
            <param name="readMiscNodes">Specify false to indicate to the reader to skip all miscellaneous nodes. The default value is false.</param>
            <returns>The newly created OpenXmlReader.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.ReadMiscNodes">
            <summary>
            Gets a value that indicates whether the OpenXmlReader will read or skip all miscellaneous nodes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.Encoding">
            <summary>
            Gets the encoding of the XML file.
            </summary>
            <remarks>
            Returns null if the encoding is not specified in the XML file.
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.StandaloneXml">
            <summary>
            Gets the standalone property in the XML declaration of the XML stream. The default value is null.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.HasAttributes">
            <summary>
            Gets a value that indicates whether the current node has any attributes. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.Attributes">
            <summary>
            Gets the list of attributes of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.NamespaceDeclarations">
            <summary>
            Gets the namespace declarations of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.ElementType">
            <summary>
            Gets the type of the corresponding strongly typed class of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.IsMiscNode">
            <summary>
            When overridden in a derived class, gets a value that indicates whether the current node is a miscellaneous XML node (non element). 
            </summary>
            <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.IsStartElement">
            <summary>
            When overridden in a derived class, gets a value that indicates whether the current node is an element start. 
            </summary>
            <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.IsEndElement">
            <summary>
            When overridden in a derived class, gets a value that indicates whether the current node is an element end. 
            </summary>
            <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.Depth">
            <summary>
            Gets the depth of the current node in the XML document. The depth of the root element is 0.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.EOF">
            <summary>
            When overridden in a derived class, gets a value that indicates whether the reader is positioned at the end of the stream. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.LocalName">
            <summary>
            When overridden in a derived class, gets the local name of the current node. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.NamespaceUri">
            <summary>
            When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlReader.Prefix">
            <summary>
            When overridden in a derived class, gets the namespace prefix associated with the current node. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.Read">
            <summary>
            Moves to read the next element.
            </summary>
            <returns>Returns true if the next element was read successfully; false if there are no more elements to read. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.ReadFirstChild">
            <summary>
            Moves to read the first child element.
            </summary>
            <returns>Returns true if the first child element was read successfully; false if there are no child elements to read. </returns>
            <remarks>This method can only be called on element start. At the current node, the reader will move to the end tag if there is no child element.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.ReadNextSibling">
            <summary>
            Moves to read the next sibling element.
            </summary>
            <returns>Returns true if the next sibling element was read successfully; false if there are no more sibling elements to read. </returns>
            <remarks>At the current node, the reader will move to the end tag of the parent node if there are no more sibling elements.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.Skip">
            <summary>
            Skips the child elements of the current node. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.LoadCurrentElement">
            <summary>
            Loads the element at current cursor.
            </summary>
            <returns>The OpenXmlElement that was loaded.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the current is the end element.</exception>
            <remarks>The new current element is the end of the element after LoadCurrentElement().</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.GetText">
            <summary>
            Gets the text of the element if the element is an OpenXmlLeafTextElement. Returns String.Empty for other elements.
            </summary>
            <returns>
            The text of the element if the element is an OpenXmlLeafTextElement. Returns String.Empty for other elements.
            </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.Close">
            <summary>
            Closes the reader.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.ThrowIfObjectDisposed">
            <summary>
            Thrown if the object is disposed.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.Dispose(System.Boolean)">
            <summary>
            Closes the reader, and releases all resources. 
            </summary>
            <param name="disposing">Specify true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlReader.Dispose">
            <summary>
            Closes the reader, and releases all resources. 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlPartReader">
            <summary>
            Represents the Open XML part reader class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.#ctor(DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Initializes a new instance of the OpenXmlPartReader class using the supplied OpenXmlPart class.
            </summary>
            <param name="openXmlPart">The OpenXmlPart to read.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.#ctor(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenXmlPartReader class using the supplied OpenXmlPart and Boolean values.
            </summary>
            <param name="openXmlPart">The OpenXmlPart to read.</param>
            <param name="readMiscNodes">Specify false to indicate to the reader to skip all miscellaneous nodes. The default value is false.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the OpenXmlPartReader class using the supplied stream.
            </summary>
            <param name="partStream">The part stream of the OpenXmlPart to read.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenXmlPartReader class using the supplied stream and Boolean values.
            </summary>
            <param name="partStream">The part stream of the OpenXmlPart to read.</param>
            <param name="readMiscNodes">Specify false to indicate to the reader to skip all miscellaneous nodes. The default value is false.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.Encoding">
            <summary>
            Gets the encoding of the XML file.
            </summary>
            <remarks>
            Returns null if encoding is not specified in the XML file.
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.StandaloneXml">
            <summary>
            Gets the standalone property of the XML file. Returns false if there is no "standalone" in the XML declaration stream.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.Attributes">
            <summary>
            Gets the list of attributes of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.NamespaceDeclarations">
            <summary>
            Gets the namespace declarations of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.ElementType">
            <summary>
            Gets the type of the corresponding strong typed class of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.IsMiscNode">
            <summary>
            Gets a value that indicates whether the current node is a miscellaneous XML node (non element). 
            </summary>
            <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.IsStartElement">
            <summary>
            Gets a value that indicates whether the current node is an element start. 
            </summary>
            <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.IsEndElement">
            <summary>
            Gets a value that indicates whether the current node is an element end. 
            </summary>
            <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.Depth">
            <summary>
            Gets the depth of the current node in the XML document. The depth of the root element is 0.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.EOF">
            <summary>
            Gets a value that indicates whether the reader is positioned at the end of the stream. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.LocalName">
            <summary>
            Gets the local name of the current node. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.NamespaceUri">
            <summary>
            Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlPartReader.Prefix">
            <summary>
            Gets the namespace prefix associated with the current node. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.Read">
            <summary>
            Moves to read the next element.
            </summary>
            <returns>Returns true if the next element was read successfully; false if there are no more elements to read. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.ReadFirstChild">
            <summary>
            Moves to read the first child element.
            </summary>
            <returns>Returns true if the first child element was read successfully; false if there are no child elements to read. </returns>
            <remarks>This method can only be called on element start. At the current node, the reader will move to the end tag if there is no child element.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.ReadNextSibling">
            <summary>
            Moves to read the next sibling element.
            </summary>
            <returns>Returns true if the next sibling element was read successfully; false if there are no more sibling elements to read. </returns>
            <remarks>At the current node, the reader will move to the end tag of the parent if there are no more sibling elements.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.Skip">
            <summary>
            Skips the child elements of the current node. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.MoveToNextElement">
            <summary>
            Moves to next element
            </summary>
            <returns>true if the next element was read successfully; false if there are no more elements to read. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.MoveToFirstChild">
            <summary>
            Move to first child 
            </summary>
            <returns>true if the first child element was read successfully; false if there are no child elements to read. </returns>
            <remarks>Only can be called on element start. Current will move to the end tag if no child element.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.MoveToNextSibling">
            <summary>
            Move to  next sibling element 
            </summary>
            <returns>true if the next sibling element was read successfully; false if there are no more sibling elements to read. </returns>
            <remarks>Current will move to the end tag of the parent if no more sibling element.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.InnerSkip">
            <summary>
            Skips the children of the current node. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.LoadCurrentElement">
            <summary>
            Loads the element at the current cursor.
            </summary>
            <returns>The OpenXmlElement object.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the current element is element end.</exception>
            <remarks>The new current element is the end of the element after LoadCurrentElement().</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.GetText">
            <summary>
            Gets the text of the element if the element is an OpenXmlLeafTextElement. Returns String.Empty for other elements.
            </summary>
            <returns>
            The text of the element if the element is an OpenXmlLeafTextElement. Returns String.Empty for other elements.
            </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartReader.Close">
            <summary>
            Closes the reader.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlDomReader">
            <summary>
            Represents the Open XML document reader class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.#ctor(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Initializes a new instance of the OpenXmlDomReader class.
            </summary>
            <param name="openXmlElement">The OpenXmlElement to read.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.#ctor(DocumentFormat.OpenXml.OpenXmlElement,System.Boolean)">
            <summary>
            Initializes a new instance of the OpenXmlDomReader class using the supplied OpenXmlElement and Boolean values.
            </summary>
            <param name="openXmlElement">The OpenXmlElement to read.</param>
            <param name="readMiscNodes">Specify false to indicate to the reader to skip all miscellaneous nodes. The default value is false.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlDomReader.Attributes">
            <summary>
            Gets the list of attributes of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlDomReader.NamespaceDeclarations">
            <summary>
            Gets the namespace declarations of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlDomReader.ElementType">
            <summary>
            Gets the type of the corresponding strong typed class of the current element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlDomReader.IsMiscNode">
            <summary>
            Gets a value that indicates whether the current node is a miscellaneous XML node (non element). 
            </summary>
            <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlDomReader.IsStartElement">
            <summary>
            Gets a value that indicates whether the current node is an element start. 
            </summary>
            <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlDomReader.IsEndElement">
            <summary>
            Gets a value that indicates whether the current node is an element end. 
            </summary>
            <remarks>IsStartElement and IsEndElement will be false when IsMiscNode==true.</remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlDomReader.Depth">
            <summary>
            Gets the depth of the current node in the XML document. The depth of the root element is 0.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlDomReader.EOF">
            <summary>
            Gets a value that indicates whether the reader is positioned at the end of the stream. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlDomReader.LocalName">
            <summary>
            Gets the local name of the current node. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlDomReader.NamespaceUri">
            <summary>
            Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlDomReader.Prefix">
            <summary>
            Gets the namespace prefix associated with the current node. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.Read">
            <summary>
            Moves to read the next element.
            </summary>
            <returns>Returns true if the next element was read successfully; false if there are no more elements to read. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.ReadFirstChild">
            <summary>
            Moves to read the first child element.
            </summary>
            <returns>Returns true if the first child element was read successfully; false if there are no child elements to read. </returns>
            <remarks>This method can only be called on element start. At the current node, the reader will move to the end tag if there is no child element.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.ReadNextSibling">
            <summary>
            Moves to read the next sibling element.
            </summary>
            <returns>Returns true if the next sibling element was read successfully; false if there are no more sibling elements to read. </returns>
            <remarks>At the current node, the reader will move to the end tag of the parent if there are no more sibling elements.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.Skip">
            <summary>
            Skips the children of the current node. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.MoveToNextElement">
            <summary>
            Move to next element 
            </summary>
            <returns>true if the next element was read successfully; false if there are no more elements to read. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.MoveToFirstChild">
            <summary>
            Move to first child 
            </summary>
            <returns>true if the first child element was read successfully; false if there are no child elements to read. </returns>
            <remarks>Only can be called on element start. Current will move to the end tag if no child element.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.MoveToNextSibling">
            <summary>
            Move to  next sibling element 
            </summary>
            <returns>true if the next sibling element was read successfully; false if there are no more sibling elements to read. </returns>
            <remarks>Current will move to the end tag of the parent if no more sibling element.</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.InnerSkip">
            <summary>
            Skips the children of the current node. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.LoadCurrentElement">
            <summary>
            Loads the element at the current cursor.
            </summary>
            <returns>The OpenXmlElement object.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when the current element is element end.</exception>
            <remarks>The new current element is the end of the element after LoadCurrentElement().</remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.GetText">
            <summary>
            Gets the text of the element if the element is an OpenXmlLeafTextElement. Returns String.Empty for other elements.
            </summary>
            <returns>
            The text of the element if the element is an OpenXmlLeafTextElement. Returns String.Empty for other elements.
            </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlDomReader.Close">
            <summary>
            Closes the reader.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlSimpleType">
            <summary>
            Represents the abstract base class for all simple types that are used in attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleType.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlSimpleType class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleType.#ctor(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Initializes a new instance of the OpenXmlSimpleType class.
            </summary>
            <param name="source">The source OpenXmlSimpleType.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlSimpleType.TextValue">
            <summary>
            DON'T use this property. Only for OpenXmlSimpleType.cs internal use.
            The internal raw text value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleType.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleType.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlSimpleType.HasValue">
            <summary>
            Gets a value that indicates whether the underneath text value is a valid value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlSimpleType.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleType.ToString">
            <summary>
            Returns a String that represents the current value. 
            </summary>
            <returns>A String that represents the current value. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleType.Clone">
            <summary>
            Creates a duplicate of the current value.
            </summary>
            <remarks>
            This method is a deep copy clone.
            </remarks>
            <returns>The cloned value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleType.op_Implicit(DocumentFormat.OpenXml.OpenXmlSimpleType)~System.String">
            <summary>
            Implicitly converts a specified attribute value to a String value.
            </summary>
            <param name="xmlAttribute">The OpenXmlSimpleType instance.</param>
            <returns>The converted string value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleType.GetListItems">
            <summary>
            When overridden in the derived ListValue class, this method returns items in the list.
            </summary>
            <returns>Returns items in the list.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleType.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Test whether the value is allowed in the specified file format version. Only for EnumValue.
            </summary>
            <param name="fileFormat">The file format version.</param>
            <returns>True if the value is defined in the specified file format version.</returns>
            <remarks>
            Method to support enum validation in schema validation.
            </remarks>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlSimpleValue`1">
            <summary>
            Represents a generic value for simple value types (Int32, UInt32, Byte, struct, etc).
            </summary>    
            <typeparam name="T">The type of the value.</typeparam>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleValue`1.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlSimpleValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleValue`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the OpenXmlSimpleValue class.
            </summary>
            <param name="value">The value in type T.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleValue`1.#ctor(DocumentFormat.OpenXml.OpenXmlSimpleValue{`0})">
            <summary>
            Initializes a new instance of the OpenXmlSimpleValue class by deep copying the supplied OpenXmlSimpleValue class.
            </summary>
            <param name="source">The source OpenXmlSimleValue class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlSimpleValue`1.HasValue">
            <summary>
            Gets a value that indicates whether the underneath text value is a valid value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlSimpleValue`1.Value">
            <summary>
            Gets or sets the value of the simple value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlSimpleValue`1.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlSimpleValue`1.op_Implicit(DocumentFormat.OpenXml.OpenXmlSimpleValue{`0})~`0">
            <summary>
            Implicitly converts the specified value to T.
            </summary>
            <param name="xmlAttribute">The OpenXmlSimpleValue instance.</param>
            <returns>The internal value in the OpenXmlSimpleValue class.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="T:DocumentFormat.OpenXml.BooleanValue">
            <summary>
            Represents the Boolean value for attributes.
            </summary> 
        </member>
        <member name="M:DocumentFormat.OpenXml.BooleanValue.#ctor">
            <summary>
            Initializes a new instance of the BooleanValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.BooleanValue.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BooleanValue class using the supplied Boolean value.
            </summary>
            <param name="value">The Boolean value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.BooleanValue.#ctor(DocumentFormat.OpenXml.BooleanValue)">
            <summary>
            Initializes a new instance of the BooleanValue class by deep copying
            the supplied BooleanValue class.
            </summary>
            <param name="source">
            The source BooleanValue class.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.BooleanValue.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.BooleanValue.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.BooleanValue.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.BooleanValue.op_Implicit(DocumentFormat.OpenXml.BooleanValue)~System.Boolean">
            <summary>
            Implicitly converts the specified value to a Boolean value.
            </summary>
            <param name="xmlAttribute">The BooleanValue to convert.</param>
            <returns>The converted Boolean value.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.BooleanValue.op_Implicit(System.Boolean)~DocumentFormat.OpenXml.BooleanValue">
            <summary>
            Initializes a new instance of the BooleanValue class by implicitly
            converting the supplied Boolean value.
            </summary>
            <param name="value">The Boolean value.</param>
            <returns>A new BooleanValue instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.BooleanValue.FromBoolean(System.Boolean)">
            <summary>
            Returns a new BooleanValue object that was created by using the supplied Boolean value.
            </summary>
            <param name="value">A Boolean value to use to create a new BooleanValue object.</param>
            <returns>A BooleanValue that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.BooleanValue.ToBoolean(DocumentFormat.OpenXml.BooleanValue)">
            <summary>
            Returns the Boolean representation of a BooleanValue object.
            </summary>
            <param name="xmlAttribute">
            A BooleanValue object to retrieve a Boolean representation.
            </param>
            <returns>A Boolean value that represents a BooleanValue object.</returns>		
        </member>
        <member name="T:DocumentFormat.OpenXml.ByteValue">
            <summary>
            Represents the byte value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.ByteValue.#ctor">
            <summary>
            Initializes a new instance of the ByteValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.ByteValue.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the ByteValue class using the supplied
            Byte value.
            </summary>
            <param name="value">The Byte value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.ByteValue.#ctor(DocumentFormat.OpenXml.ByteValue)">
            <summary>
            Initializes a new instance of the ByteValue class by deep copying
            the supplied ByteValue class.
            </summary>
            <param name="source">
            The source ByteValue class.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.ByteValue.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.ByteValue.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.ByteValue.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.ByteValue.op_Implicit(DocumentFormat.OpenXml.ByteValue)~System.Byte">
            <summary>
            Implicitly converts the specified value to a Byte value.
            </summary>
            <param name="xmlAttribute">
            The ByteValue to convert.
            </param>
            <returns>
            The converted Byte value.
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>		
        </member>
        <member name="M:DocumentFormat.OpenXml.ByteValue.op_Implicit(System.Byte)~DocumentFormat.OpenXml.ByteValue">
            <summary>
            Initializes a new instance of the ByteValue class by implicitly converting
            the supplied Byte value.
            </summary>
            <param name="value">
            The Byte value.
            </param>
            <returns>A new ByteValue instance with the value.</returns>		
        </member>
        <member name="M:DocumentFormat.OpenXml.ByteValue.FromByte(System.Byte)">
            <summary>
            Returns a new ByteValue object created from a Byte value.
            </summary>
            <param name="value">A Byte value to create a new ByteValue object from.</param>
            <returns>A ByteValue that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.ByteValue.ToByte(DocumentFormat.OpenXml.ByteValue)">
            <summary>
            Returns the Byte value representation of a ByteValue object.
            </summary>
            <param name="xmlAttribute">
            A ByteValue object to retrieve a Byte value representation.
            </param>
            <returns>A Byte value that represents a ByteValue object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.SByteValue">
            <summary>
            Represents the SByte value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.SByteValue.#ctor">
            <summary>
            Initializes a new instance of the SByteValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.SByteValue.#ctor(System.SByte)">
            <summary>
            Initializes a new instance of the SByteValue class using the supplied SByte value.
            </summary>
            <param name="value">The SByte value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.SByteValue.#ctor(DocumentFormat.OpenXml.SByteValue)">
            <summary>
            Initializes a new instance of the SByteValue by deep copying the supplied SByteValue class.
            </summary>
            <param name="source">The source SByteValue class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.SByteValue.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.SByteValue.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.SByteValue.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.SByteValue.op_Implicit(DocumentFormat.OpenXml.SByteValue)~System.SByte">
            <summary>
            Implicitly converts the specified SByteValue to an SByte value.
            </summary>
            <param name="xmlAttribute">The SByteValue to convert.</param>
            <returns>The converted SByte value.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.SByteValue.op_Implicit(System.SByte)~DocumentFormat.OpenXml.SByteValue">
            <summary>
            Implicitly converts the specified SByte value to an SByteValue instance.
            </summary>
            <param name="value">The specified SByte value.</param>
            <returns>A new SByteValue instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.SByteValue.FromSByte(System.SByte)">
            <summary>
            Returns a new SByteValue object created from a Byte value.
            </summary>
            <param name="value">An SByte value to use to create a new SByteValue object.</param>
            <returns>An SByteValue that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.SByteValue.ToSByte(DocumentFormat.OpenXml.SByteValue)">
            <summary>
            Returns the SByte representation of an SByteValue object.
            </summary>
            <param name="xmlAttribute">
            An SByteValue object to retrieve an SByte representation.
            </param>
            <returns>An SByte value that represents an SByteValue object.</returns>		
        </member>
        <member name="T:DocumentFormat.OpenXml.Int16Value">
            <summary>
            Represents the Int16 value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int16Value.#ctor">
            <summary>
            Initializes a new instance of the Int16Value class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int16Value.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the Int16Value class using the supplied Int16 value.
            </summary>
            <param name="value">The Int16 value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int16Value.#ctor(DocumentFormat.OpenXml.Int16Value)">
            <summary>
            Initializes a new instance of the Int16Value by deep copying the supplied IntValue class.
            </summary>
            <param name="source">The source Int16Value class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Int16Value.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int16Value.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int16Value.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int16Value.op_Implicit(DocumentFormat.OpenXml.Int16Value)~System.Int16">
            <summary>
            Implicitly converts the specified value to an Int16 value.
            </summary>
            <param name="xmlAttribute">The Int16Value to convert.</param>
            <returns>The converted Int16 value.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int16Value.op_Implicit(System.Int16)~DocumentFormat.OpenXml.Int16Value">
            <summary>
            Implicitly converts an Int16 value to a Int16Value instance.
            </summary>
            <param name="value">The specified value.</param>
            <returns>A new Int16Value instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int16Value.FromInt16(System.Int16)">
            <summary>
            Returns a new Int16Value object that was created from an Int16 value.
            </summary>
            <param name="value">An Int16 value to use to create a new Int16Value object.</param>
            <returns>An Int16Value that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int16Value.ToInt16(DocumentFormat.OpenXml.Int16Value)">
            <summary>
            Returns an Int16 representation of an Int16Value object.
            </summary>
            <param name="xmlAttribute">
            An Int16Value object to retrieve an Int16 representation.
            </param>
            <returns>An Int16 value that represents an Int16Value object.</returns>		
        </member>
        <member name="T:DocumentFormat.OpenXml.Int32Value">
            <summary>
            Represents the Int32 value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int32Value.#ctor">
            <summary>
            Initializes a new instance of the Int32Value class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int32Value.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Int32Value class using the supplied Int32 value.
            </summary>
            <param name="value">The Int32 value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int32Value.#ctor(DocumentFormat.OpenXml.Int32Value)">
            <summary>
            Initializes a new instance of the Int32Value by deep copying the supplied Int32Value class.
            </summary>
            <param name="source">The source Int32Value class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Int32Value.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int32Value.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int32Value.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int32Value.op_Implicit(DocumentFormat.OpenXml.Int32Value)~System.Int32">
            <summary>
            Implicitly converts the specified value to an Int32 value.
            </summary>
            <param name="xmlAttribute">The Int32Value to convert.</param>
            <returns>
            The converted Int32 value.
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int32Value.op_Implicit(System.Int32)~DocumentFormat.OpenXml.Int32Value">
            <summary>
            Implicitly converts an Int32 value to a specified Int32Value instance.
            </summary>
            <param name="value">The specified Int32 value.</param>
            <returns>A new Int32Value instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int32Value.FromInt32(System.Int32)">
            <summary>
            Returns a new Int32Value object that was created from an Int32 value.
            </summary>
            <param name="value">An Int32 value to use to create a new Int32Value object.</param>
            <returns>An Int32Value that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int32Value.ToInt32(DocumentFormat.OpenXml.Int32Value)">
            <summary>
            Returns the Int32 representation of an Int32Value object.
            </summary>
            <param name="xmlAttribute">
            An Int32Value object to use to retrieve an Int32 representation.
            </param>
            <returns>An Int32 value that represents an Int32Value object.</returns>		
        </member>
        <member name="T:DocumentFormat.OpenXml.Int64Value">
            <summary>
            Represents the Int64 value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int64Value.#ctor">
            <summary>
            Initializes a new instance of the Int64Value class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int64Value.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the Int64Value class using the supplied Int64 value.
            </summary>
            <param name="value">The Int64 value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int64Value.#ctor(DocumentFormat.OpenXml.Int64Value)">
            <summary>
            Initializes a new instance of the Int64Value by deep copying the supplied Int64Value class.
            </summary>
            <param name="source">The source Int64Value class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Int64Value.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int64Value.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int64Value.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int64Value.op_Implicit(DocumentFormat.OpenXml.Int64Value)~System.Int64">
            <summary>
            Implicitly converts the specified Int64Value to an Int64 value.
            </summary>
            <param name="xmlAttribute">The Int64Value to convert.</param>
            <returns>The converted Int64 value.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int64Value.op_Implicit(System.Int64)~DocumentFormat.OpenXml.Int64Value">
            <summary>
            Implicitly converts an Int64 value to an Int64Value value.
            </summary>
            <param name="value">The specified value.</param>
            <returns>A new Int64Value instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int64Value.FromInt64(System.Int64)">
            <summary>
            Returns a new Int64Value object that was created from an Int64 value.
            </summary>
            <param name="value">An Int64 value to use to create a new Int64Value object.</param>
            <returns>An Int64Value that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Int64Value.ToInt64(DocumentFormat.OpenXml.Int64Value)">
            <summary>
            Returns the Int64 representation of an Int64Value object.
            </summary>
            <param name="xmlAttribute">
            An Int64Value object used to retrieve an Int64 representation.
            </param>
            <returns>An Int64 value that represents an Int64Value object.</returns>		
        </member>
        <member name="T:DocumentFormat.OpenXml.IntegerValue">
            <summary>
            Represents the xsd:integer value for attributes.
            </summary>
            <remarks>
            Integer is derived from decimal by fixing the value of fractionDigits to be 0 and disallowing the trailing decimal point. 
            The value space of integer is the infinite set {...,-2,-1,0,1,2,...}. The base type of integer is decimal. 
            
            Use Int64 as the internal type for now. 
            TODO: Should decimal be used as the internal type?
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.IntegerValue.#ctor">
            <summary>
            Initializes a new instance of the IntegerValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.IntegerValue.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the IntegerValue class using the supplied Int64 value.
            </summary>
            <param name="value">The Int64 value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.IntegerValue.#ctor(DocumentFormat.OpenXml.IntegerValue)">
            <summary>
            Initializes a new instance of the IntegerValue class by deep copying the supplied IntegerValue class.
            </summary>
            <param name="source">The source IntegerValue class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.IntegerValue.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.IntegerValue.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.IntegerValue.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.IntegerValue.op_Implicit(DocumentFormat.OpenXml.IntegerValue)~System.Int64">
            <summary>
            Implicitly converts the specified IntegerValue to an Int64 value.
            </summary>
            <param name="xmlAttribute">The IntegerValue to convert.</param>
            <returns>
            The converted Int64 value.
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.IntegerValue.op_Implicit(System.Int64)~DocumentFormat.OpenXml.IntegerValue">
            <summary>
            Implicitly converts the specified Int64 value to an IntegerValue class.
            </summary>
            <param name="value">The specified value.</param>
            <returns>A new IntegerValue instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.IntegerValue.FromInt64(System.Int64)">
            <summary>
            Returns a new IntegerValue object created from an Int64 value.
            </summary>
            <param name="value">An Int64 value to use to create a new IntegerValue object.</param>
            <returns>An IntegerValue that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.IntegerValue.ToInt64(DocumentFormat.OpenXml.IntegerValue)">
            <summary>
            Returns the Int64 representation of an IntegerValue object.
            </summary>
            <param name="xmlAttribute">
            An IntegerValue object used to retrieve an Int64 representation.
            </param>
            <returns>An Int64 value that represents an IntegerValue object.</returns>		
        </member>
        <member name="T:DocumentFormat.OpenXml.UInt16Value">
            <summary>
            Represents the UInt16 value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt16Value.#ctor">
            <summary>
            Initializes a new instance of the UInt16Value class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt16Value.#ctor(System.UInt16)">
            <summary>
            Initializes a new instance of the UInt16Value class using the supplied UInt16 value.
            </summary>
            <param name="value">The UInt16 value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt16Value.#ctor(DocumentFormat.OpenXml.UInt16Value)">
            <summary>
            Initializes a new instance of the UInt16Value class by deep copying the supplied UInt16Value class.
            </summary>
            <param name="source">The source UInt16Value class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.UInt16Value.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt16Value.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt16Value.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt16Value.op_Implicit(DocumentFormat.OpenXml.UInt16Value)~System.UInt16">
            <summary>
            Implicitly converts the specified UInt16Value object to a UInt16 value.
            </summary>
            <param name="xmlAttribute">The UInt16Value to convert.</param>
            <returns>The converted UInt16 value.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt16Value.op_Implicit(System.UInt16)~DocumentFormat.OpenXml.UInt16Value">
            <summary>
            Implicitly converts a UInt16 value to a UInt16Value class.
            </summary>
            <param name="value">The specified value.</param>
            <returns>A new UInt16Value instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt16Value.FromUInt16(System.UInt16)">
            <summary>
            Returns a new UInt16Value object created from a UInt16 value.
            </summary>
            <param name="value">A UInt16 value to use to create a new UInt16Value object.</param>
            <returns>A UInt16Value that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt16Value.ToUInt16(DocumentFormat.OpenXml.UInt16Value)">
            <summary>
            Returns the UInt16 representation of a UInt16Value object.
            </summary>
            <param name="xmlAttribute">
            A UInt16Value object to retrieve a UInt16 representation.
            </param>
            <returns>A UInt16 value that represents a UInt16Value object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.UInt32Value">
            <summary>
            Represents the UInt32 value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt32Value.#ctor">
            <summary>
            Initializes a new instance of the UInt32Value class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt32Value.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the UInt32Value class using the supplied UInt32 value.
            </summary>
            <param name="value">The UInt32 value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt32Value.#ctor(DocumentFormat.OpenXml.UInt32Value)">
            <summary>
            Initializes a new instance of the UInt32Value class by deep copying the supplied UInt32Value class.
            </summary>
            <param name="source">The source UInt32Value class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.UInt32Value.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt32Value.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt32Value.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt32Value.op_Implicit(DocumentFormat.OpenXml.UInt32Value)~System.UInt32">
            <summary>
            Implicitly converts the specified UInt32Value class to a UInt32 value.
            </summary>
            <param name="xmlAttribute">The UInt32Value class to convert.</param>
            <returns>The converted UInt32 value.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt32Value.op_Implicit(System.UInt32)~DocumentFormat.OpenXml.UInt32Value">
            <summary>
            Implicitly converts a specified UInt32 value to a UInt32Value class.
            </summary>
            <param name="value">The specified value.</param>
            <returns>A new UInt32Value instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt32Value.FromUInt32(System.UInt32)">
            <summary>
            Returns a new UInt32Value object created from a UInt32 value.
            </summary>
            <param name="value">A UInt32 value to use to create a new UInt32Value object.</param>
            <returns>A UInt32Value class that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt32Value.ToUInt32(DocumentFormat.OpenXml.UInt32Value)">
            <summary>
            Returns the UInt32 value representation of a UInt32Value object.
            </summary>
            <param name="xmlAttribute">
            A UInt32Value object used to retrieve a UInt32 value representation.
            </param>
            <returns>A UInt32 value that represents a UInt32Value object.</returns>		
        </member>
        <member name="T:DocumentFormat.OpenXml.UInt64Value">
            <summary>
            Represents the UInt64 value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt64Value.#ctor">
            <summary>
            Initializes a new instance of the UInt64Value class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt64Value.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the UInt64Value class using the supplied UInt64 value.
            </summary>
            <param name="value">The UInt64 value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt64Value.#ctor(DocumentFormat.OpenXml.UInt64Value)">
            <summary>
            Initializes a new instance of the UInt64Value class by deep copying the UInt64Value class.
            </summary>
            <param name="source">The source UInt64Value class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.UInt64Value.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt64Value.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt64Value.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt64Value.op_Implicit(DocumentFormat.OpenXml.UInt64Value)~System.UInt64">
            <summary>
            Implicitly converts the specified UInt64Value object to a UInt64 value.
            </summary>
            <param name="xmlAttribute">The UInt64Value object to convert.</param>
            <returns>The converted UInt64 value.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt64Value.op_Implicit(System.UInt64)~DocumentFormat.OpenXml.UInt64Value">
            <summary>
            Implicitly converts a specified UInt64 value to a UInt64Value class.
            </summary>
            <param name="value">The specified value.</param>
            <returns>A new UInt64Value instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt64Value.FromUInt64(System.UInt64)">
            <summary>
            Returns a new UInt64Value object created from a UInt64 value.
            </summary>
            <param name="value">A UInt64 value to use to create a new UInt64Value object.</param>
            <returns>A UInt64Value that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.UInt64Value.ToUInt64(DocumentFormat.OpenXml.UInt64Value)">
            <summary>
            Returns the UInt64 value representation of a UInt64Value object.
            </summary>
            <param name="xmlAttribute">
            A UInt64Value object used to retrieve a UInt64 representation.
            </param>
            <returns>A UInt64 value that represents a UInt64Value object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.DecimalValue">
            <summary>
            Represents the decimal value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DecimalValue.#ctor">
            <summary>
            Initializes a new instance of the DecimalValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DecimalValue.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the DecimalValue class using the supplied
            Decimal value.
            </summary>
            <param name="value">The Decimal value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.DecimalValue.#ctor(DocumentFormat.OpenXml.DecimalValue)">
            <summary>
            Initializes a new instance of the DecimalValue class by deep copying
            the supplied DecimalValue class.
            </summary>
            <param name="source">
            The source DecimalValue class.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.DecimalValue.InnerText">
            <summary>
            The inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DecimalValue.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DecimalValue.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.DecimalValue.op_Implicit(DocumentFormat.OpenXml.DecimalValue)~System.Decimal">
            <summary>
            Implicitly converts the specified value to a Decimal value.
            </summary>
            <param name="xmlAttribute">
            The DecimalValue to convert.
            </param>
            <returns>
            The converted Decimal value.
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.DecimalValue.op_Implicit(System.Decimal)~DocumentFormat.OpenXml.DecimalValue">
            <summary>
            Initializes a new instance of the DecimalValue class by implicitly
            converting the supplied Decimal value.
            </summary>
            <param name="value">
            The Decimal value.
            </param>
            <returns>A new DecimalValue instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.DecimalValue.FromDecimal(System.Decimal)">
            <summary>
            Returns a new DecimalValue object that was created from a Decimal value.
            </summary>
            <param name="value">A Decimal value to use to create a new DecimalValue object.</param>
            <returns>A DecimalValue object that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.DecimalValue.ToDecimal(DocumentFormat.OpenXml.DecimalValue)">
            <summary>
            Returns the Decimal representation of a DecimalValue object.
            </summary>
            <param name="xmlAttribute">
            A DecimalValue object to use to retrieve a Decimal representation.
            </param>
            <returns>A Decimal value that represents a DecimalValue object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.SingleValue">
            <summary>
            Represents the Single value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.SingleValue.#ctor">
            <summary>
            Initializes a new instance of the SingleValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.SingleValue.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the SingleValue class using the supplied Single value.
            </summary>
            <param name="value">The Single value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.SingleValue.#ctor(DocumentFormat.OpenXml.SingleValue)">
            <summary>
            Initializes a new instance of the SingleValue class by deep copying the supplied SingleValue class.
            </summary>
            <param name="source">The source SingleValue class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.SingleValue.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.SingleValue.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.SingleValue.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.SingleValue.op_Implicit(DocumentFormat.OpenXml.SingleValue)~System.Single">
            <summary>
            Implicitly converts the specified SingleValue object to a Single value.
            </summary>
            <param name="xmlAttribute">The SingleValue to convert.</param>
            <returns>
            The converted Single value.
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.SingleValue.op_Implicit(System.Single)~DocumentFormat.OpenXml.SingleValue">
            <summary>
            Implicitly converts the specified Single value to a SingleValue object.
            </summary>
            <param name="value">The specified value.</param>
            <returns>A new SingleValue instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.SingleValue.FromSingle(System.Single)">
            <summary>
            Returns a new SingleValue object that was created from a Single value.
            </summary>
            <param name="value">A Single value to use to create a new SingleValue object.</param>
            <returns>A SingleValue object that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.SingleValue.ToSingle(DocumentFormat.OpenXml.SingleValue)">
            <summary>
            Returns the Single value representation of a SingleValue object.
            </summary>
            <param name="xmlAttribute">
            A SingleValue object used to retrieve a Single value representation.
            </param>
            <returns>A Single value that represents a SingleValue object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.DoubleValue">
            <summary>
            Represents the double value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DoubleValue.#ctor">
            <summary>
            Initializes a new instance of the DoubleValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DoubleValue.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the DoubleValue class using the supplied
            Double value.
            </summary>
            <param name="value">The Double value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.DoubleValue.#ctor(DocumentFormat.OpenXml.DoubleValue)">
            <summary>
            Initializes a new instance of the DoubleValue by deep copying the
            supplied DoubleValue value.
            </summary>
            <param name="source">
            The source DoubleValue class.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.DoubleValue.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DoubleValue.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DoubleValue.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.DoubleValue.op_Implicit(DocumentFormat.OpenXml.DoubleValue)~System.Double">
            <summary>
            Implicitly converts the specified value to a Double value.
            </summary>
            <param name="xmlAttribute">
            The DoubleValue object to convert.
            </param>
            <returns>
            The converted Double value.
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.DoubleValue.op_Implicit(System.Double)~DocumentFormat.OpenXml.DoubleValue">
            <summary>
            Initializes a new instance of the DoubleValue class by implicitly
            converting the supplied Double value.
            </summary>
            <param name="value">
            The Double value.
            </param>
            <returns>A new DoubleValue instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.DoubleValue.FromDouble(System.Double)">
            <summary>
            Returns a new DoubleValue object created from a Double value.
            </summary>
            <param name="value">A Double value to use to create a new DoubleValue object.</param>
            <returns>A DoubleValue object that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.DoubleValue.ToDouble(DocumentFormat.OpenXml.DoubleValue)">
            <summary>
            Returns the Double value representation of a DoubleValue object.
            </summary>
            <param name="xmlAttribute">
            A DoubleValue object used to retrieve a Double value representation.
            </param>
            <returns>A Double value that represents a DoubleValue object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.DateTimeValue">
            <summary>
            Represents the DateTime value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DateTimeValue.#ctor">
            <summary>
            Initializes a new instance of the DateTimeValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DateTimeValue.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the DateTimeValue class using the supplied
            DateTime value.
            </summary>
            <param name="value">The DateTime value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.DateTimeValue.#ctor(DocumentFormat.OpenXml.DateTimeValue)">
            <summary>
            Initializes a new instance of the DateTimeValue class by deep copying the
            supplied DateTimeValue class.
            </summary>
            <param name="source">
            The source DateTimeValue class.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.DateTimeValue.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DateTimeValue.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.DateTimeValue.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.DateTimeValue.op_Implicit(DocumentFormat.OpenXml.DateTimeValue)~System.DateTime">
            <summary>
            Implicitly converts the specified value to a DateTime value.
            </summary>
            <param name="xmlAttribute">
            The DateTimeValue object to convert.
            </param>
            <returns>
            The converted DateTime value.
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.DateTimeValue.op_Implicit(System.DateTime)~DocumentFormat.OpenXml.DateTimeValue">
            <summary>
            Initializes a new instance of the DateTimeValue class by implicitly
            converting the supplied DateTime value.
            </summary>
            <param name="value">
            The DateTime value.
            </param>
            <returns>A new DateTimeValue instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.DateTimeValue.FromDateTime(System.DateTime)">
            <summary>
            Returns a new DateTimeValue object that was created from a DateTime value.
            </summary>
            <param name="value">A DateTime value to use to create a new DateTimeValue object.</param>
            <returns>A DateTimeValue object that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.DateTimeValue.ToDateTime(DocumentFormat.OpenXml.DateTimeValue)">
            <summary>
            Returns the DateTime value representation of a DateTimeValue object.
            </summary>
            <param name="xmlAttribute">
            A DateTimeValue object used to retrieve a DateTime value representation.
            </param>
            <returns>A DateTime value that represents a DateTimeValue object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.StringValue">
            <summary>
            Represents the string value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.StringValue.#ctor">
            <summary>
            Initializes a new instance of the StringValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.StringValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the StringValue class using the supplied string.
            </summary>
            <param name="value">The string value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.StringValue.#ctor(DocumentFormat.OpenXml.StringValue)">
            <summary>
            Initializes a new instance of the StringValue class by deep copying the supplied StringValue class.
            </summary>
            <param name="source">The source StringValue class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.StringValue.Value">
            <summary>
            Gets the string value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.StringValue.op_Implicit(DocumentFormat.OpenXml.StringValue)~System.String">
            <summary>
            Implicitly converts the specified value to a String value.
            </summary>
            <param name="xmlAttribute">The StringValue to convert.</param>
            <returns>
            The converted String value. Returns null when xmlAttribute is null.
            </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.StringValue.op_Implicit(System.String)~DocumentFormat.OpenXml.StringValue">
            <summary>
            Implicitly converts the specified String value to a StringValue object.
            </summary>
            <param name="value">The specified value.</param>
            <returns>A new StringValue instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.StringValue.FromString(System.String)">
            <summary>
            Returns a new StringValue object that was created from a String value.
            </summary>
            <param name="value">A String value to use to create a new StringValue object.</param>
            <returns>A StringValue that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.StringValue.ToString(DocumentFormat.OpenXml.StringValue)">
            <summary>
            Returns the String value representation of a StringValue object.
            </summary>
            <param name="xmlAttribute">
            A StringValue object used to retrieve a String value representation.
            </param>
            <returns>A String value that represents a StringValue object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.HexBinaryValue">
            <summary>
            Represent the xsd:hexBinary value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.HexBinaryValue.#ctor">
            <summary>
            Initializes a new instance of the HexBinaryValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.HexBinaryValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HexBinaryValue class using the supplied string.
            </summary>
            <param name="hexBinary">The string value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.HexBinaryValue.#ctor(DocumentFormat.OpenXml.HexBinaryValue)">
            <summary>
            Initializes a new instance of the HexBinaryValue class by deep copying the supplied HexBinaryValue class.
            </summary>
            <param name="source">The source HexBinaryValue class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.HexBinaryValue.Value">
            <summary>
            Gets the hexBinary string value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.HexBinaryValue.op_Implicit(DocumentFormat.OpenXml.HexBinaryValue)~System.String">
            <summary>
            Implicitly converts the specified value to a String value.
            </summary>
            <param name="xmlAttribute">The HexBinaryValue object to convert.</param>
            <returns>The converted HexBinary string. Returns null when xmlAttribute is null.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.HexBinaryValue.op_Implicit(System.String)~DocumentFormat.OpenXml.HexBinaryValue">
            <summary>
            Implicitly converts the specified String value to a HexBinaryValue object.
            </summary>
            <param name="value">The specified hexBinary value.</param>
            <returns>A new HexBinaryValue instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.HexBinaryValue.FromString(System.String)">
            <summary>
            Returns a new HexBinaryValue object that was created from a String value.
            </summary>
            <param name="value">A String value to use to create a new HexBinaryValue object.</param>
            <returns>A HexBinaryValue object that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.HexBinaryValue.ToString(DocumentFormat.OpenXml.HexBinaryValue)">
            <summary>
            Returns the String value representation of a HexBinaryValue object.
            </summary>
            <param name="xmlAttribute">
            A HexBinaryValue object used to retrieve a String value representation.
            </param>
            <returns>A String value that represents a HexBinaryValue object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Base64BinaryValue">
            <summary>
            Represents the xsd:base64Binary value for attributes.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Base64BinaryValue.#ctor">
            <summary>
            Initializes a new instance of the Base64BinaryValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Base64BinaryValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Base64BinaryValue class by deep copying
            the supplied String value.
            </summary>
            <param name="base64Binary">
            The String value.
            </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Base64BinaryValue.#ctor(DocumentFormat.OpenXml.Base64BinaryValue)">
            <summary>
            Initializes a new instance of the Base64BinaryValue class by deep copying
            the supplied Base64BinaryValue class.
            </summary>
            <param name="source">
            The source Base64BinaryValue class.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Base64BinaryValue.Value">
            <summary>
            Gets the base64Binary string value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Base64BinaryValue.op_Implicit(DocumentFormat.OpenXml.Base64BinaryValue)~System.String">
            <summary>
            Implicitly converts the specified value to a String value.
            </summary>
            <param name="xmlAttribute">The Base64BinaryValue object to convert.</param>
            <returns>The base64Binary string. Returns null when xmlAttribute is null.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Base64BinaryValue.op_Implicit(System.String)~DocumentFormat.OpenXml.Base64BinaryValue">
            <summary>
            Initializes a new instance of a Base64BinaryValue class using the
            supplied string.
            </summary>
            <param name="value">The specified base64Binary value.</param>
            <returns>A new Base64BinaryValue instance with the value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Base64BinaryValue.FromString(System.String)">
            <summary>
            Returns a new Base64BinaryValue object that was created from a String value.
            </summary>
            <param name="value">A String value to use to create a new Base64BinaryValue object.</param>
            <returns>A Base64BinaryValue that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Base64BinaryValue.ToString(DocumentFormat.OpenXml.Base64BinaryValue)">
            <summary>
            Returns the String value representation of a Base64BinaryValue object.
            </summary>
            <param name="xmlAttribute">
            A Base64BinaryValue object used to retrieve a String value representation.
            </param>
            <returns>A String value that represents a Base64BinaryValue object.</returns>		
        </member>
        <member name="T:DocumentFormat.OpenXml.ListValue`1">
            <summary>
            Represents the list value attributes (xsd:list).
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.ListValue`1.#ctor">
            <summary>
            Initializes a new instance of the ListValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.ListValue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the ListValue class using the supplied list of values.
            </summary>
            <param name="list">The list of the values.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.ListValue`1.#ctor(DocumentFormat.OpenXml.ListValue{`0})">
            <summary>
            Initializes a new instance of the ListValue class by deep copying the supplied ListValue class.
            </summary>
            <param name="source">The source ListValue class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.ListValue`1.HasValue">
            <summary>
            Gets a value that indicates whether the underneath text value is
            a valid value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.ListValue`1.Items">
            <summary>
            Gets the values.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.ListValue`1.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.ListValue`1.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.ListValue`1.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.ListValue`1.GetListItems">
            <summary>
            Only the ListValue will overrid this method.
            </summary>
            <returns>Returns items in list.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.EnumValue`1">
            <summary>
            Represents the enum value for attributes.
            </summary>
            <typeparam name="T">Every enum value must be an enum with the EnumStringValueAttribute object.</typeparam>
        </member>
        <member name="M:DocumentFormat.OpenXml.EnumValue`1.#ctor">
            <summary>
            Initializes a new instance of the EnumValue class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.EnumValue`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the EnumValue class using the supplied
            value of type T.
            </summary>
            <param name="value">
            The value of type T.
            </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.EnumValue`1.#ctor(DocumentFormat.OpenXml.EnumValue{`0})">
            <summary>
            Initializes a new instance of the EnumValue by deep copying the supplied
            EnumValue class.
            </summary>
            <param name="source">
            The source EnumValue class.
            </param>
        </member>
        <member name="P:DocumentFormat.OpenXml.EnumValue`1.HasValue">
            <summary>
            Gets a value that indicates whether the underneath text value is a valid value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.EnumValue`1.Value">
            <summary>
            Gets or sets the value of the enum.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.EnumValue`1.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.EnumValue`1.op_Implicit(DocumentFormat.OpenXml.EnumValue{`0})~`0">
            <summary>
            Implicitly converts the specified value to an enum.
            </summary>
            <param name="xmlAttribute">The EnumValue to convert.</param>
            <returns>
            The converted enum value.
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown when xmlAttribute is null.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.EnumValue`1.op_Implicit(`0)~DocumentFormat.OpenXml.EnumValue{`0}">
            <summary>
            Initializes a new EnumValue class by converting the supplied enum
            value.
            </summary>
            <param name="value">The specified value.</param>
            <returns>A new EnumValue instance corresponding to the value.</returns>		
        </member>
        <member name="M:DocumentFormat.OpenXml.EnumValue`1.op_Implicit(DocumentFormat.OpenXml.EnumValue{`0})~System.String">
            <summary>
            Implicitly converts the specified value to a String value.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The converted string.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.EnumValue`1.Parse">
            <summary>
            Convert the text to meaningful value.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.EnumValue`1.TryParse">
            <summary>
            Convert the text to meaningful value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.EnumValue`1.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Test whether the value is allowed in the specified file format version.
            </summary>
            <param name="fileFormat">The file format version.</param>
            <returns>True if the value is defined in the specified file format version.</returns>
            <remarks>
            Method to support enum validation in schema validation.
            </remarks>
        </member>
        <member name="T:DocumentFormat.OpenXml.EnumStringAttribute">
            <summary>
            Represents the custom attribute for fields in a generated enum.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.EnumStringAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the EnumStringAttribute class using
            the supplied text string.
            </summary>
            <param name="value">The text string.</param>		
        </member>
        <member name="P:DocumentFormat.OpenXml.EnumStringAttribute.Value">
            <summary>
            Gets the text string in the custom attribute.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.TrueFalseValueImpl">
            <summary>
            Defines the base class implementing the common logic of
            <see cref="T:DocumentFormat.OpenXml.TrueFalseValue"/>, <see cref="T:DocumentFormat.OpenXml.TrueFalseBlankValue"/> and <see cref="T:DocumentFormat.OpenXml.OnOffValue"/>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseValueImpl.#ctor(System.Func{System.String,System.Boolean},System.Func{System.Boolean,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:DocumentFormat.OpenXml.TrueFalseValueImpl"/> class using the supplied callbacks.
            </summary>
            <param name="getBooleanValueMethod">The method to convert text value to boolean value.</param>
            <param name="getDefaultTextMethod">The method to convert boolean value to default text value.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.TrueFalseValueImpl.InnerText">
            <summary>
            Gets and sets the inner XML text.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.TrueFalseValueImpl.HasValue">
            <summary>
            Gets a value that indicates whether the underneath text value is a valid value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.TrueFalseValueImpl.Value">
            <summary>
            Gets and sets the boolean value of the <see cref="T:DocumentFormat.OpenXml.TrueFalseValueImpl"/> type.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseValueImpl.CloneImp">
            <summary>
            Not implemented by <see cref="T:DocumentFormat.OpenXml.TrueFalseValueImpl"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.TrueFalseValue">
            <summary>
            Represents the data type for attributes that have enum values that are Boolean values that represent 't' or 'f', or 'true' or 'false'.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseValue.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:DocumentFormat.OpenXml.TrueFalseValue"/> class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseValue.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:DocumentFormat.OpenXml.TrueFalseValue"/> class using the supplied Boolean value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseValue.#ctor(DocumentFormat.OpenXml.TrueFalseValue)">
            <summary>
            Initializes a new instance of the <see cref="T:DocumentFormat.OpenXml.TrueFalseValue"/> class using the supplied TrueFalseValue class.
            </summary>
            <param name="source">The source <see cref="T:DocumentFormat.OpenXml.TrueFalseValue"/> class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.TrueFalseValue.HasValue">
            <summary>
            Gets a value that indicates whether the underneath text value is a valid value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.TrueFalseValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.TrueFalseValue.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseValue.op_Implicit(DocumentFormat.OpenXml.TrueFalseValue)~System.Boolean">
            <summary>
            Implicitly converts a TrueFalseValue class to a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="xmlAttribute">The <see cref="T:DocumentFormat.OpenXml.TrueFalseValue"/> to convert.</param>
            <returns>The converted <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseValue.op_Implicit(System.Boolean)~DocumentFormat.OpenXml.TrueFalseValue">
            <summary>
            Implicitly converts a <see cref="T:System.Boolean"/> value to a TrueFalseValue instance.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to convert.</param>
            <returns>The converted <see cref="T:DocumentFormat.OpenXml.TrueFalseValue"/> value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseValue.FromBoolean(System.Boolean)">
            <summary>
            Returns a new TrueFalseValue object that was created from a Boolean value.
            </summary>
            <param name="value">A Boolean value to use to create a new TrueFalseValue object.</param>
            <returns>A TrueFalseValue that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseValue.ToBoolean(DocumentFormat.OpenXml.TrueFalseValue)">
            <summary>
            Returns the internal Boolean representation of a TrueFalseValue object.
            </summary>
            <param name="xmlAttribute">A TrueFalseValue object to retrieve an internal Boolean representation.</param>
            <returns>A Boolean value that represents a TrueFalseValue object.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseValue.GetBooleanValue(System.String)">
            <summary>
            Gets the real boolean value of the text value.
            </summary>
            <param name="textValue">The text value which could be 't', 'f', 'true', 'false'.</param>
            <returns>Ture on text value is 't', 'true'; False on text value is 'f', 'false'.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseValue.GetDefaultTextValue(System.Boolean)">
            <summary>
            Gets the defaul text value.
            </summary>
            <param name="boolValue">The boolean value.</param>
            <returns>"t" false true, "f" for false.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.TrueFalseBlankValue">
            <summary>
            Represents the datatype for attributes that have enum values that are Boolean values that represent 't' or 'f', or 'true' or 'false'.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseBlankValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DocumentFormat.OpenXml.TrueFalseBlankValue"/> class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseBlankValue.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DocumentFormat.OpenXml.TrueFalseBlankValue"/> class using the supplied Boolean value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseBlankValue.#ctor(DocumentFormat.OpenXml.TrueFalseBlankValue)">
            <summary>
            Initializes a new instance of the <see cref="T:DocumentFormat.OpenXml.TrueFalseBlankValue"/> class using the supplied TrueFalseBlankValue class.
            </summary>
            <param name="source">The source <see cref="T:DocumentFormat.OpenXml.TrueFalseBlankValue"/> class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.TrueFalseBlankValue.HasValue">
            <summary>
            Gets a value that indicates whether the underneath text value is valid value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.TrueFalseBlankValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.TrueFalseBlankValue.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseBlankValue.op_Implicit(DocumentFormat.OpenXml.TrueFalseBlankValue)~System.Boolean">
            <summary>
            Implicitly converts a TrueFalseBlankValue object to a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="xmlAttribute">The source <see cref="T:DocumentFormat.OpenXml.TrueFalseBlankValue"/> to convert.</param>
            <returns>The converted <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseBlankValue.op_Implicit(System.Boolean)~DocumentFormat.OpenXml.TrueFalseBlankValue">
            <summary>
            Implicitly converts a <see cref="T:System.Boolean"/> value to a TrueFalsBlankValue value.
            </summary>
            <param name="value">The source <see cref="T:System.Boolean"/> value to convert.</param>
            <returns>The converted <see cref="T:DocumentFormat.OpenXml.TrueFalseBlankValue"/> value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseBlankValue.FromBoolean(System.Boolean)">
            <summary>
            Returns a new TrueFalseBlankValue object created from a Boolean value.
            </summary>
            <param name="value">A Boolean value to create a new TrueFalseBlankValue object from.</param>
            <returns>A TrueFalseBlankValue that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseBlankValue.ToBoolean(DocumentFormat.OpenXml.TrueFalseBlankValue)">
            <summary>
            Returns the internal Boolean representation of a TrueFalseBlankValue object.
            </summary>
            <param name="xmlAttribute">A TrueFalseBlankValue object to retrieve an internal Boolean representation.</param>
            <returns>A Boolean value that represents a TrueFalseBlankValue object.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseBlankValue.GetBooleanValue(System.String)">
            <summary>
            Gets the real boolean value of the text value.
            </summary>
            <param name="textValue">The text value which could be 't', 'f', 'true', 'false', ''.</param>
            <returns>True on text value is 't', 'true'; False on text value is 'f', 'false', '' </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.TrueFalseBlankValue.GetDefaultTextValue(System.Boolean)">
            <summary>
            Gets the text value.
            </summary>
            <param name="boolValue">The boolean value.</param>
            <returns>"t" for True, "f" for false.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.OnOffValue">
            <summary>
            Defines an OnOffValue datatype for attributes that have enum values that are Boolean values that represent: 'true' or 'false', 'on' or 'off', or '0' or '1'.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OnOffValue.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:DocumentFormat.OpenXml.OnOffValue"/> class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OnOffValue.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:DocumentFormat.OpenXml.OnOffValue"/> class using the supplied Boolean value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OnOffValue.#ctor(DocumentFormat.OpenXml.OnOffValue)">
            <summary>
            Initializes a new instance of <see cref="T:DocumentFormat.OpenXml.OnOffValue"/> class using the supplied OnOffValue class.
            </summary>
            <param name="source">The source <see cref="T:DocumentFormat.OpenXml.OnOffValue"/> class.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.OnOffValue.HasValue">
            <summary>
            Gets a value that indicates whether the underneath text value is a valid value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OnOffValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OnOffValue.InnerText">
            <summary>
            Gets or sets the inner XML text.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OnOffValue.GetBooleanValue(System.String)">
            <summary>
            Gets the real text value of the text value.
            </summary>
            <param name="textValue">The text value which could be 'true', 'false', 'on', 'off', '0', or '1'.</param>
            <returns>True for 'true', 'on', '0', or '1'.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OnOffValue.GetDefaultTextValue(System.Boolean)">
            <summary>
            Gets the default text value.
            </summary>
            <param name="boolValue">The boolean value.</param>
            <returns>"1" for True, "0" for False.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OnOffValue.op_Implicit(DocumentFormat.OpenXml.OnOffValue)~System.Boolean">
            <summary>
            Implicitly converts the specified OnOffValue object to a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="xmlAttribute">The <see cref="T:DocumentFormat.OpenXml.OnOffValue"/> object to convert.</param>
            <returns>The converted <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OnOffValue.op_Implicit(System.Boolean)~DocumentFormat.OpenXml.OnOffValue">
            <summary>
            Implicitly converts a <see cref="T:System.Boolean"/> value to an <see cref="T:DocumentFormat.OpenXml.OnOffValue"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to convert.</param>
            <returns>The converted <see cref="T:DocumentFormat.OpenXml.OnOffValue"/>.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OnOffValue.FromBoolean(System.Boolean)">
            <summary>
            Returns a new OnOffValue object created from a Boolean value.
            </summary>
            <param name="value">A Boolean value that is used to create a new OnOffValue object.</param>
            <returns>A OnOffValue that corresponds to the value parameter.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OnOffValue.ToBoolean(DocumentFormat.OpenXml.OnOffValue)">
            <summary>
            Returns the internal Boolean representation of a OnOffValue object.
            </summary>
            <param name="xmlAttribute">A OnOffValue object to retrieve an internal Boolean representation.</param>
            <returns>A Boolean value that represents a OnOffValue object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlUnknownElement">
            <summary>
            Represents elements that are not defined in the Ecma Office Open XML. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlUnknownElement.#ctor">
            <summary>
            OpenXmlUnknownElement constructor
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlUnknownElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OpenXmlUnknownElement class using
            the supplied element name.
            </summary>
            <param name="name">
            The element name.
            </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlUnknownElement.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the OpenXmlUnknownElement class using
            the supplied qualified element name and namespace URI.
            </summary>
            <param name="qualifiedName">The qualified element name.</param>
            <param name="namespaceUri">The namespace URI of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlUnknownElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the OpenXmlUnknownElement class using
            the supplied prefix, local name, and namespace URI.
            </summary>
            <param name="prefix">The namespace prefix of the element.</param>
            <param name="localName">The local name of the element.</param>
            <param name="namespaceUri">The namespace URI of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlUnknownElement.CreateOpenXmlUnknownElement(System.String)">
            <summary>
            Creates a new OpenXmlUnknownElement class by using the outer XML.
            </summary>
            <param name="outerXml">The outer XML of the element.</param>
            <returns>A new OpenXmlUnknownElement class.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlUnknownElement.LocalName">
            <summary>
            When overridden in a derived class, gets the local name of the node.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlUnknownElement.NamespaceUri">
            <summary>
            Gets the namespace URI of the current node.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlUnknownElement.Prefix">
            <summary>
            Gets or sets the prefix of the current node.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlUnknownElement.XmlQualifiedName">
            <summary>
            When overridden in a derived class, gets the qualified name of the node.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlUnknownElement.ElementTypeId">
            <summary>
            The type ID of the element. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlUnknownElement.InnerText">
            <summary>
            Gets or sets the concatenated values of the node and all of its children.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.OpenXmlUnknownElement.Text">
            <summary>
            Gets the text of the unknown element, only if the unknown element
            has only one child that is a text node.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlUnknownElement.CloneNode(System.Boolean)">
            <summary>
            When overridden in a derived class, creates a duplicate of the node. 
            </summary>
            <param name="deep">
            Specify true to recursively clone the subtree under the specified
            node; false to clone only the node itself.
            </param>
            <returns>The cloned node. </returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlUnknownElement.WriteContentTo(System.Xml.XmlWriter)">
            <summary>
            Saves all the children of the node to the specified XmlWriter. 
            </summary>
            <param name="w">The XmlWriter to which you want to save. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlUnknownElement.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current node to the specified XmlWriter. 
            </summary>
            <param name="xmlWriter">The XmlWriter at which to save.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlUnknownElement.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            For OpenXmlUnknownElement, always return false, no matter what the version is.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlWriter">
            <summary>
            Defines the OpenXmlWriter.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.#ctor">
            <summary>
            Initializes a new instance of the OpenXmlWriter.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.Create(DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Create an OpenXmlWriter from the OpenXmlPart.
            </summary>
            <param name="openXmlPart">The OpenXmlPart to be writern.</param>
            <returns>The created OpenXmlWriter instance.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.Create(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Text.Encoding)">
            <summary>
            Create an OpenXmlWriter from the OpenXmlPart.
            </summary>
            <param name="openXmlPart">The OpenXmlPart to be writern.</param>
            <param name="encoding">The encoding for the XML stream.</param>
            <returns>The created OpenXmlWriter instance.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.Create(System.IO.Stream)">
            <summary>
            Create an OpenXmlWriter on a given stream.
            </summary>
            <param name="partStream">The target stream.</param>
            <returns>The created OpenXmlWriter instance.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.Create(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Create an OpenXmlWriter on given stream
            </summary>
            <param name="partStream">The target stream.</param>
            <param name="encoding">The encoding for the XML stream.</param>
            <returns>The created OpenXmlWriter instance.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.WriteStartDocument">
            <summary>
            Writes the XML declaration with the version "1.0".
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.WriteStartDocument(System.Boolean)">
            <summary>
            Writes the XML declaration with the version "1.0" and the standalone attribute.
            </summary>
            <param name="standalone">If true, it writes "standalone=yes"; if false, it writes "standalone=no". </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlReader)">
            <summary>
            Writes out a start element tag of the current element of the OpenXmlReader. And write all the attributes of the element.
            </summary>
            <param name="elementReader">The OpenXmlReader to read from. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlReader,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlAttribute})">
            <summary>
            Writes out a start element tag of the current element of the OpenXmlReader. And write the attributes in attributes. 
            </summary>
            <param name="elementReader">The OpenXmlReader to read from. </param>
            <param name="attributes">The attributes to be writtern, can be null if no attrbutes.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlReader,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlAttribute},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Writes out a start element tag of the current element of the OpenXmlReader. And write the attributes in attributes. 
            </summary>
            <param name="elementReader">The OpenXmlReader to read from. </param>
            <param name="attributes">The attributes to be writtern, can be null if no attrbutes.</param>
            <param name="namespaceDeclarations">The namespace declarations to be written, can be null if no namespace declarations.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Writes out a start tag of the element and all the attributes of the element.
            </summary>
            <param name="elementObject">The OpenXmlElement object to be writen.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlElement,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlAttribute})">
            <summary>
            Writes out a start tag of the element. And write the attributes in attributes. The attributes of the element will be omitted.
            </summary>
            <param name="elementObject">The OpenXmlElement object to be writen.</param>
            <param name="attributes">The attributes to be writtern.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlElement,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlAttribute},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Writes out a start tag of the element. And write the attributes in attributes. The attributes of the element will be omitted.
            </summary>
            <param name="elementObject">The OpenXmlElement object to be writen.</param>
            <param name="attributes">The attributes to be writtern.</param>
            <param name="namespaceDeclarations">The namespace declarations to be written, can be null if no namespace declarations.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.WriteEndElement">
            <summary>
            Closes one element.  
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.WriteElement(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Write the OpenXmlElement to the writer.
            </summary>
            <param name="elementObject">The OpenXmlElement object to be writen.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.WriteString(System.String)">
            <summary>
            When overridden in a derived class, writes the given text content. 
            </summary>
            <param name="text">The text to write. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.Close">
            <summary>
            Close the writer.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.ThrowIfObjectDisposed">
            <summary>
            Throw if object is disposed.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.Dispose(System.Boolean)">
            <summary>
            Closes the reader, and releases all resources. 
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlWriter.Dispose">
            <summary>
            Closes the writer, and releases all resources. 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.OpenXmlPartWriter">
            <summary>
            Defines the OpenXmlPartWriter.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.#ctor(DocumentFormat.OpenXml.Packaging.OpenXmlPart)">
            <summary>
            Initializes a new instance of the OpenXmlPartWriter.
            </summary>
            <param name="openXmlPart">The OpenXmlPart to be written to.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.#ctor(DocumentFormat.OpenXml.Packaging.OpenXmlPart,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the OpenXmlPartWriter.
            </summary>
            <param name="openXmlPart">The OpenXmlPart to be written to.</param>
            <param name="encoding">The encoding for the XML stream.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the OpenXmlPartWriter.
            </summary>
            <param name="partStream">The givern part stream.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the OpenXmlPartWriter.
            </summary>
            <param name="partStream">The givern part stream.</param>
            <param name="encoding">The encoding for the XML stream.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.WriteStartDocument">
            <summary>
            Writes the XML declaration with the version "1.0".
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.WriteStartDocument(System.Boolean)">
            <summary>
            Writes the XML declaration with the version "1.0" and the standalone attribute.
            </summary>
            <param name="standalone">If true, it writes "standalone=yes"; if false, it writes "standalone=no". </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlReader)">
            <summary>
            Writes out a start element tag of the current element of the OpenXmlReader. And write all the attributes of the element.
            </summary>
            <param name="elementReader">The OpenXmlReader to read from. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlReader,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlAttribute})">
            <summary>
            Writes out a start element tag of the current element of the OpenXmlReader. And write the attributes in attributes. 
            </summary>
            <param name="elementReader">The OpenXmlReader to read from. </param>
            <param name="attributes">The attributes to be writtern, can be null if no attrbutes.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlReader,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlAttribute},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Writes out a start element tag of the current element of the OpenXmlReader. And write the attributes in attributes. 
            </summary>
            <param name="elementReader">The OpenXmlReader to read from. </param>
            <param name="attributes">The attributes to be writtern, can be null if no attrbutes.</param>
            <param name="namespaceDeclarations">The namespace declarations to be written, can be null if no namespace declarations.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Writes out a start tag of the element and all the attributes of the element.
            </summary>
            <param name="elementObject">The OpenXmlElement object to be writen.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlElement,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlAttribute})">
            <summary>
            Writes out a start tag of the element. And write the attributes in attributes. The attributes of the element will be omitted.
            </summary>
            <param name="elementObject">The OpenXmlElement object to be writen.</param>
            <param name="attributes">The attributes to be writtern.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.WriteStartElement(DocumentFormat.OpenXml.OpenXmlElement,System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlAttribute},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Writes out a start tag of the element. And write the attributes in attributes. The attributes of the element will be omitted.
            </summary>
            <param name="elementObject">The OpenXmlElement object to be writen.</param>
            <param name="attributes">The attributes to be writtern.</param>
            <param name="namespaceDeclarations">The namespace declarations to be written, can be null if no namespace declarations.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.WriteEndElement">
            <summary>
            Closes one element.  
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.WriteString(System.String)">
            <summary>
            Writes the given text content. 
            </summary>
            <param name="text">The text to be writtern. </param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.WriteElement(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Write the OpenXmlElement to the writer.
            </summary>
            <param name="elementObject">The OpenXmlElement object to be writen.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.OpenXmlPartWriter.Close">
            <summary>
            Close the writer.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Profiler.CommentMarkAtProfile(System.Int64,DocumentFormat.OpenXml.Profiler.MarkId)">
            <summary>
            Call DataCollection.CommentMarkAtProfile if PROFILE is enabled.
            </summary>
            <param name="timestamp">A timestamp value</param>
            <param name="markId">A marker to insert</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Profiler.CommentMarkProfile(DocumentFormat.OpenXml.Profiler.MarkId)">
            <summary>
            Call DataCollection.CommentMarkAtProfile if PROFILE is enabled.
            </summary>
            <param name="markId">A marker to insert</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.ReservedElementTypeIds.IsStrongTypedElement(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Test whether the element is a strong typed element - the class is generated by CodeGen.
            </summary>
            <param name="element">The specified element.</param>
            <returns>True if the class of the element is generated.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.AllParticleValidator">
            <summary>
            All particle validator.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AllParticleValidator.#ctor(DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticle)">
            <summary>
            Initializes a new instance of the AllParticleValidator.
            </summary>
            <param name="particleConstraint"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AllParticleValidator.TryMatch(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match the particle.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AllParticleValidator.TryMatchOnce(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match the particle once.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
            <remarks>
            xsd:all can only contain xsd:element children and maxOccurs of each children can only be 1
            </remarks>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.AlternateContentValidator">
            <summary>
            Validator for MarkupCompatibility feature - AlternateContent.
            </summary>
            <remarks>
            See Ecma376 "Part 5: Markup Compatibility and Extensibility" for reference.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AlternateContentValidator.Validate(DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Validate ACB syntax - AlternateContent, Choice, Fallback and their attributes.
            </summary>
            <param name="validationContext"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AlternateContentValidator.ValidateMcAttributesOnAcb(DocumentFormat.OpenXml.Validation.ValidationContext,DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Validate attributes on AlternateContent, Choice and Fallback element.
            </summary>
            <param name="validationContext"></param>
            <param name="acElement">The element to be validated.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AlternateContentValidator.IsXmlSpaceOrXmlLangAttribue(DocumentFormat.OpenXml.OpenXmlAttribute)">
            <summary>
            Test whether the attribute is "xml:space" or "xml:lang".
            </summary>
            <param name="attribute">The attribute to be tested.</param>
            <returns>True if the attribute is "xml:space" or "xml:lang".</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.CompatibilityRuleAttributesValidator">
            <summary>
            Compatibility-Rule Attributes 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.CompatibilityRuleAttributesValidator.ValidateMcAttributes(DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Validate compatibility rule attributes - Ignorable, ProcessContent, PreserveElements, PreserveAttributes, MustUnderstand.
            </summary>
            <param name="validationContext">The validation context.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.CompatibilityRuleAttributesValidator.ValidateQNameList(System.String,System.Collections.Generic.HashSet{System.String},DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Validate QName list in PreserveElements, PreserveAttributes, ProcessContent.
            </summary>
            <param name="qnameList">The QName list to be validated.</param>
            <param name="ignorableNamespaces">The ignorable namespaces.</param>
            <param name="validationContext"></param>
            <returns>The QName that is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.OpenXmlElementExtensionMethods">
            <summary>
            Static class to hold extension methods for OpenXmlElement.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.OpenXmlElementExtensionMethods.GetChildMc(DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.OpenXmlElement,DocumentFormat.OpenXml.MCContext,DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Gets the next child (skip all MC elements (skip ACB layer, skip Ignorabled element.)).
            </summary>
            <param name="parent">The logic parent element.</param>
            <param name="child">The child element to be tested.</param>
            <param name="mcContext">Markup Compatibility context.</param>
            <param name="format">Targeting file format (Office2007 or Office201).</param>
            <returns>The logic child (when we apply a MC pre-processer).</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticleValidator">
            <summary>
            Any particle validator.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticleValidator.#ctor(DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticle)">
            <summary>
            Initializes a new instance of the AnyParticleValidator.
            </summary>
            <param name="particleConstraint"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticleValidator.TryMatchOnce(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match this element once.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticleValidator.TryMatch(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match this element.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticleValidator.GetRequiredElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are required elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticleValidator.GetRequiredElements">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <returns>Required elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticleValidator.GetExpectedElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the expected elements - elements which minOccurs >= 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are expected elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticleValidator.GetExpectedElements">
            <summary>
            Get the expected elements - elements which minOccurs >= 0.
            </summary>
            <returns>Expected elements in this particle.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticleValidator">
            <summary>
            NsAny particle validator.
            </summary>
            <remarks>
            xsd:any with defined namespace.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticleValidator.#ctor(DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticle)">
            <summary>
            Initializes a new instance of the AnyParticleValidator.
            </summary>
            <param name="particleConstraint"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticleValidator.TryMatchOnce(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match this element once.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticleValidator.GetRequiredElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are required elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticleValidator.GetExpectedElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the expected elements - elements which minOccurs >= 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are expected elements in this particle.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.AttributeConstraint">
            <summary>
            Constraint on xml attribute
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.AttributeConstraint.XsdAttributeUse">
            <summary>
            The "use" attribute on xsd:attribute [ use = (optional | prohibited | required): optional ]
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.AttributeConstraint.SimpleTypeConstraint">
            <summary>
            The simple type constraint for this attribute.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.AttributeConstraint.SupportedVersion">
            <summary>
            In which file format version this attribute is allowed.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.BinarySdbSchemaDatas.Load(System.IO.Stream)">
            <summary>
            Load the schema constraint data from the stream.
            </summary>
            <param name="dataStream">The data stream.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.BinarySdbSchemaDatas.GetClassIdData(System.UInt16)">
            <summary>
            Get a SdbClassIdToSchemaTypeIndex data for the sepcified class ID.
            </summary>
            <param name="classId">The class ID.</param>
            <returns>A SdbClassIdToSchemaTypeIndex data.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.BinarySdbSchemaDatas.CheckDataHead(System.Int32)">
            <summary>
            Make sure that the SdbDataHead data is correct.
            </summary>
            <param name="streamLength">The length of the data.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.BinarySdbSchemaDatas.CheckData">
            <summary>
            Check the loaded schema constraint datas.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.BinarySdbSchemaDatas.SdbDataArray`1.Item(System.Int32)">
            <summary>
            Indexer to retriver a specified data.
            </summary>
            <param name="index">The index of the data item.</param>
            <returns>Always returns a new data object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleType">
            <summary>
            Particle type.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.XsdAttributeUse">
            <summary>
            xsd:use type.
            </summary>
            <remarks>
            Same as XmlSchemaUse.
            </remarks>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.XsdAnyPrefidefinedValue.Any">
            <summary>
            ##any - Elements from any namespace can be present.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.XsdAnyPrefidefinedValue.Other">
            <summary>
            ##other - Elements from any namespace that is not the target namespace of the parent element containing this element can be present.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.XsdAnyPrefidefinedValue.Local">
            <summary>
            #local - Elements that are not qualified with a namespace can be present.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.XsdAnyPrefidefinedValue.TargetNamespace">
            <summary>
            ##targetNamespace - Elements from the target namespace of the parent element containing this element can be present.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.XsdAnyPrefidefinedValue.GetNamespaceString(System.UInt16)">
            <summary>
            Get corresponding namespace string for Any, Other, Local and TargetNamespace.
            </summary>
            <param name="value">One of the Any, Other, Local and TargetNamespace.</param>
            <returns>##any, ##other, ##local or ##targetNamespace.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbData">
            <summary>
            Base class for fixed size data.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbData.DataSize">
            <summary>
            The size in bytes of this data structure.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbData.GetBytes">
            <summary>
            Serialize the data into byte data.
            </summary>
            <returns>Byte data.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbData.LoadFromBytes(System.Byte[],System.Int32)">
            <summary>
            Deserialize the data from byte data.
            </summary>
            <param name="value">The byte data.</param>
            <param name="startIndex">The offset the data begins at.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbData.GetBytes(System.Byte[][])">
            <summary>
            Helper function to be called by derived classes.
            </summary>
            <param name="fieldvalues"></param>
            <returns></returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbClassIdToSchemaTypeIndex">
            <summary>
            Map OpenXmlElement class ID to schema type in schema.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbClassIdToSchemaTypeIndex.StartClassId">
            <summary>
            Start ID of class ID.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbClassIdToSchemaTypeIndex.ClassId">
            <summary>
            Class ID - Element Type ID.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbClassIdToSchemaTypeIndex.SchemaTypeIndex">
            <summary>
            The index of the schema type in the SdbSchemaType data array.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbClassIdToSchemaTypeIndex.#ctor">
            <summary>
            Initializes a new instance of the SdbClassIdToSchemaTypeIndex.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbClassIdToSchemaTypeIndex.#ctor(System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the SdbClassIdToSchemaTypeIndex.
            </summary>
            <param name="classId"></param>
            <param name="schemaTypeIndex"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbClassIdToSchemaTypeIndex.ArrayIndexFromClassId(System.UInt16)">
            <summary>
            Return the index of the data in the data array. The data array is sorted by the class ID and the class ID is continuous.
            </summary>
            <param name="classId"></param>
            <returns></returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbClassIdToSchemaTypeIndex.TypeSize">
            <summary>
            The size in bytes of this data structure.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbClassIdToSchemaTypeIndex.DataSize">
            <summary>
            The size in bytes of this data structure.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbClassIdToSchemaTypeIndex.GetBytes">
            <summary>
            Serialize the data into byte data.
            </summary>
            <returns>Byte data.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbClassIdToSchemaTypeIndex.LoadFromBytes(System.Byte[],System.Int32)">
            <summary>
            Deserialize the data from byte data.
            </summary>
            <param name="value">The byte data.</param>
            <param name="startIndex">The offset the data begins at.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType">
            <summary>
            Schema type data.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.ParticleIndex">
            <summary>
            The index of the particle in the SdbParticleConstraint data array. 
            Will be "SdbData.InvalidId" if the schema type is NOT composite type.
            </summary>
            <remarks>This field can be eliminated.</remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.SimpleTypeIndex">
            <summary>
            The index of the simple data in the SdbSimpleTypeRestriction data array. 
            Will be "SdbData.InvalidId" if the schema type is NOT simple content only.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.AttributesCount">
            <summary>
            The count of attributes.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.StartIndexOfAttributes">
            <summary>
            The index of the first attribute data in the SdbAttributeConstraint data array.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.#ctor">
            <summary>
            Initializes a new instance of the SdbSchemaType.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the SdbSchemaType.
            </summary>
            <param name="particleIndex"></param>
            <param name="simpleTypeIndex"></param>
            <param name="attributeCount"></param>
            <param name="startAttribute"></param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.IsCompositeType">
            <summary>
            Returns true if the schema type is a schema type which contains particles.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.IsSimpleContent">
            <summary>
            Returns true if the schema type contains simple content only.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.TypeSize">
            <summary>
            The size in bytes of this data structure
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.DataSize">
            <summary>
            The size in bytes of this data structure
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.GetBytes">
            <summary>
            Serialize the data into byte data.
            </summary>
            <returns>Byte data.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType.LoadFromBytes(System.Byte[],System.Int32)">
            <summary>
            Deserialize the data from byte data.
            </summary>
            <param name="value">The byte data.</param>
            <param name="startIndex">The offset the data begins at.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint">
            <summary>
            Particle constraint data.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.UnboundedMaxOccurs">
            <summary>
            Represent maxOccurs="unbounded" by "0".
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.ParticleType">
            <summary>
            The particle type of this particle.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.ElementTypeId">
            <summary>
            When this is an element, save the element type ID (class ID).
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.MinOccurs">
            <summary>
            The xsd:minOccurs value of this particle.
            Just use ushort at now. throw exceptions if thera are numbers > ushort.MaxValue.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.MaxOccurs">
            <summary>
            The xsd:maxOccurs value of this particle.
            ushort is not enough.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.ChildrenCount">
            <summary>
            Count of children particles.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.ChildrenStartIndex">
            <summary>
            The index of the first child particle index in the SdbParticleChildrenIndex data array.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.XsdAnyNamespaceId">
            <summary>
            Returns the namespace ID defiend in "xsd:any" when the particle type is ParticleType.Any or ParticleType.AnyWithUri
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.TypeSize">
            <summary>
            The size in bytes of this data structure.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.DataSize">
            <summary>
            The size in bytes of this data structure.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.GetBytes">
            <summary>
            Serialize the data into byte data.
            </summary>
            <returns>Byte data.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleConstraint.LoadFromBytes(System.Byte[],System.Int32)">
            <summary>
            Deserialize the data from byte data.
            </summary>
            <param name="value">The byte data.</param>
            <param name="startIndex">The offset the data begins at.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleChildrenIndex">
            <summary>
            Particle children index data.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleChildrenIndex.ParticleIndex">
            <summary>
            The index of the particle in the SdbParticleConstraint data array.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleChildrenIndex.TypeSize">
            <summary>
            The size in bytes of this data structure.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleChildrenIndex.DataSize">
            <summary>
            The size in bytes of this data structure.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleChildrenIndex.GetBytes">
            <summary>
            Serialize the data into byte data.
            </summary>
            <returns>Byte data.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbParticleChildrenIndex.LoadFromBytes(System.Byte[],System.Int32)">
            <summary>
            Deserialize the data from byte data.
            </summary>
            <param name="value">The byte data.</param>
            <param name="startIndex">The offset the data begins at.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbAttributeConstraint">
            <summary>
            Attribute constraint data.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbAttributeConstraint.AttributeUse">
            <summary>
            The xsd:use value.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbAttributeConstraint.SimpleTypeIndex">
            <summary>
            The index of the simple data in the SdbSimpleTypeRestriction data array. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbAttributeConstraint.FileFormatVersion">
            <summary>
            In which file format version this attribute is allowed.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbAttributeConstraint.TypeSize">
            <summary>
            The size in bytes of this data structure.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbAttributeConstraint.DataSize">
            <summary>
            The size in bytes of this data structure.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbAttributeConstraint.GetBytes">
            <summary>
            Serialize the data into byte data.
            </summary>
            <returns>Byte data.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbAttributeConstraint.LoadFromBytes(System.Byte[],System.Int32)">
            <summary>
            Deserialize the data from byte data.
            </summary>
            <param name="value">The byte data.</param>
            <param name="startIndex">The offset the data begins at.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.ValueExtensionMethods">
            <summary>
            Define some extension methods to make coding clear.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.ChoiceParticleValidator">
            <summary>
            Choice particle validator.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.ChoiceParticleValidator._childMatchInfo">
            <summary>
            This data field is moved from TryMatchOnce. 
            Base on the following point.
            - The TryMatchOnce() method will NOT be called more than once with same ChoiceParticleValidator instance on the stack when validating one element.
            - That means this data field will not be overriden in recursive calling when validating one element. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ChoiceParticleValidator.#ctor(DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticle)">
            <summary>
            Initializes a new instance of the ChoiceParticleValidator.
            </summary>
            <param name="particleConstraint"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ChoiceParticleValidator.TryMatchOnce(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match the particle once.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ChoiceParticleValidator.GetRequiredElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are required elements in this particle.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.GroupParticleValidator">
            <summary>
            Group particle validator.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.GroupParticleValidator.#ctor(DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticle)">
            <summary>
            Initializes a new instance of the ChoiceParticleValidator.
            </summary>
            <param name="particleConstraint"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.GroupParticleValidator.TryMatchOnce(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match the particle once.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint">
            <summary>
            A constraint data item for complex type.
            The ParticleType, MinOccurs, MaxOccurs means the constaint of this particle in the parent.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.#ctor">
            <summary>
            Initializes a new instance of the ParticleConstraint.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.ParticleType">
            <summary>
            Gets the type of the particle.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.MinOccurs">
            <summary>
            Gets or sets the minOccurs constraint.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.MaxOccurs">
            <summary>
            Gets or sets the maxOccurs constraint.
            0 means "unbounded".
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.UnboundedMaxOccurs">
            <summary>
            Gets whether the maxOccurs="unbounded".
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.CanOccursMoreThanOne">
            <summary>
            Return true if maxOccurs="unbounded" or maxOccurs > 1
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.MaxOccursGreaterThan(System.Int32)">
            <summary>
            Test whether the count is valid.
            </summary>
            <param name="count">The count of the occurs.</param>
            <returns>Returns true if maxOccurs="unbounded" or this.MaxOccurs>count.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.ElementId">
            <summary>
            Gets or sets the type ID of the OpenXmlElement if the ParticleType == ParticleType.Element.
            </summary>
            <remarks>
            TODO: change int to ushort?
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.ChildrenParticles">
            <summary>
            Gets the children particles.
            </summary>
            <remarks>
            be null if the ParticleType == ParticleType.Element || ParticleType=ParticleType.Any
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.ParticleValidator">
            <summary>
            Gets a ParticleValidator for this particle constraint.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.IsSimple">
            <summary>
            Test whether this is a simple particle - the particle conatains only elements as children.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint.CreateParticleConstraint(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleType)">
            <summary>
            Create a ParticleConstraint for the specified ParticleType.
            </summary>
            <param name="particleType"></param>
            <returns></returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.ElementParticle">
            <summary>
            Particle constraint data for particle which type is ParticleType.Element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ElementParticle.#ctor">
            <summary>
            Initializes a new instance of the ElementParticle.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ElementParticle.ParticleType">
            <summary>
            Gets the type of the particle.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ElementParticle.ElementId">
            <summary>
            Gets or sets the type ID of the OpenXmlElement if the ParticleType == ParticleType.Element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ElementParticle.ParticleValidator">
            <summary>
            Gets a ParticleValidator for this particle constraint.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ElementParticle.TryMatchOnce(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match this element once.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ElementParticle.TryMatch(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match this element.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ElementParticle.GetRequiredElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are required elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ElementParticle.GetRequiredElements">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <returns>Required elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ElementParticle.GetExpectedElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the expected elements - elements which minOccurs >= 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are expected elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ElementParticle.GetExpectedElements">
            <summary>
            Get the expected elements - elements which minOccurs >= 0.
            </summary>
            <returns>Expected elements in this particle.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticle">
            <summary>
            Particle constraint data for particle which type is ParticleType.Any.
            </summary>
            <remarks>
            xsd:any can contains only one namespace. 
            If there are multiple namespace in the original xsd, it will be splitted into multiple xsd:any in binary database.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticle.#ctor">
            <summary>
            Initializes a new instance of the AnyParticle.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticle.ParticleType">
            <summary>
            Gets the type of the particle.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticle.ElementId">
            <summary>
            This field is actually the value of the xsd:any.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticle.NamespaceValue">
            <summary>
            The value of the xsd:any@namespace.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyParticle.ParticleValidator">
            <summary>
            Gets a ParticleValidator for this particle constraint.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticle">
            <summary>
            Particle constraint data for particle which type is ParticleType.AnyWithUri.
            </summary>
            <remarks>
            xsd:any can contains only one namespace. 
            If there are multiple namespace in the original xsd, it will be splitted into multiple xsd:any in binary database.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticle.#ctor">
            <summary>
            Initializes a new instance of the NsAnyParticle.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticle.ParticleType">
            <summary>
            Gets the type of the particle.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticle.ElementId">
            <summary>
            This field is actually the namespace ID of the xsd:any.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticle.NamespaceId">
            <summary>
            The namespace ID of the the namespace in the xsd:any@namespace.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.NsAnyParticle.ParticleValidator">
            <summary>
            Gets a ParticleValidator for this particle constraint.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticle">
            <summary>
            Particle constraint for sequence, choice, all, and group.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticle.#ctor">
            <summary>
            Initializes a new instance of the CompositeParticle.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticle.ParticleType">
            <summary>
            Gets the type of the particle.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticle.ChildrenParticles">
            <summary>
            Gets the children particles.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticle.ParticleValidator">
            <summary>
            Gets a ParticleValidator for this particle constraint.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatch">
            <summary>
            Particle match result.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo">
            <summary>
            Information about particle match.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo.#ctor">
            <summary>
            Initializes a new instance of the ParticleMatchInfo.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo.#ctor(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Initializes a new instance of the ParticleMatchInfo.
            </summary>
            <param name="startElement"></param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo.Match">
            <summary>
            Particle match result.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo.StartElement">
            <summary>
            The start element to be matched by a particle rule.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo.LastMatchedElement">
            <summary>
            The last element matched by the particle match.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo.ErrorMessage">
            <summary>
            On Partial match, return the errors.
            </summary>
            <remarks>
            TODO: how can this be decopled from the validator?
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo.ExpectedChildren">
            <summary>
            The element type ids of expected children.
            Fill this field on partial match. 
            </summary>
            <remarks>
            Will be null if matched or not matched.
            Will contains the expected child element types if partial match.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo.InitExpectedChildren">
            <summary>
            The .ExpectedChildren will be non-null after this call.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo.SetExpectedChildren(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Purpose: 
            Resue this.ExpectedChildren data field.
            Avoid this.ExpectedChildren be referenced by more than one object (so "this.ExpectedChildren = other.ExpectedChildren" is not allowed).
            </summary>
            <param name="expectedChildren"></param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren">
            <summary>
            Hold expected children for error reporting.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren.Add(System.Int32)">
            <summary>
            Add ElementTypeId of the child.
            </summary>
            <param name="elementTypeId"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren.Add(System.String)">
            <summary>
            Add namespace string of xsd:any child.
            </summary>
            <param name="namesapceForXsdany"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren.Add(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Add all expected children from another ExpectedChildren.
            </summary>
            <param name="expectedChildren"></param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren.Count">
            <summary>
            Returns the count of required children elements.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren.GetExpectedChildrenMessage(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Returns the list of expected children message used in error reporting.
            </summary>
            <param name="parent">The parent element. Used to map ElementTypeId to element name for child element.</param>
            <returns>The Fmt_ListOfPossibleElements sub string to be used in error reporting.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.IParticleValidator">
            <summary>
            Defines methods to validate particles.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.IParticleValidator.TryMatchOnce(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match the particle once.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.IParticleValidator.TryMatch(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match the particle,  
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.IParticleValidator.GetRequiredElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are required elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.IParticleValidator.GetRequiredElements">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <returns>Required elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.IParticleValidator.GetExpectedElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the expected elements - elements which minOccurs >= 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are expected elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.IParticleValidator.GetExpectedElements">
            <summary>
            Get the expected elements - elements which minOccurs >= 0.
            </summary>
            <returns>Expected elements in this particle.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleValidator">
            <summary>
            Base class for particle validator.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleValidator.#ctor">
            <summary>
            Initializes a new instance of the ParticleValidator.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleValidator.Validate(DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Be called on root particle of complex type.
            </summary>
            <param name="validationContext"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleValidator.TryMatchOnce(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match the particle once.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleValidator.TryMatch(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match the particle.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleValidator.GetRequiredElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are required elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleValidator.GetRequiredElements">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <returns>Required elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleValidator.GetExpectedElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the expected elements - elements which minOccurs >= 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are expected elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleValidator.GetExpectedElements">
            <summary>
            Get the expected elements - elements which minOccurs >= 0.
            </summary>
            <returns>Expected elements in this particle.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticleValidator">
            <summary>
            Base class for composite particle - sequence, choice, all, group. Defines some common functions.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticleValidator._childMatchInfo">
            <summary>
            This data field is moved from TryMatchOnce. 
            Base on the following point.
            - The TryMatchOnce() method will NOT be called more than once with same ChoiceParticleValidator instance on the stack when validating one element.
            - That means this data field will not be overriden in recursive calling when validating one element. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticleValidator.ParticleConstraint">
            <summary>
            The constraint to be validated.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticleValidator.#ctor(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint)">
            <summary>
            Initializes a new instance of the CompositeParticleValidator.
            </summary>
            <param name="particleConstraint"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticleValidator.Validate(DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Be called on root particle of complex type.
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticleValidator.TryMatch(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match the particle.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticleValidator.GetRequiredElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are required elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticleValidator.GetExpectedElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the expected elements - elements which minOccurs >= 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are expected elements in this particle.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeData">
            <summary>
            The schema type constraint for an OpenXmlElement.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeData.#ctor(System.Int32,DocumentFormat.OpenXml.Internal.SchemaValidation.AttributeConstraint[],DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleConstraint)">
            <summary>
            Initializes a new instance of the SchemaTypeData.
            </summary>
            <param name="openxmlTypeId"></param>
            <param name="attributeConstraints"></param>
            <param name="particleConstraint"></param>
            <remarks>
            For complex type which contains children particles.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeData.#ctor(System.Int32,DocumentFormat.OpenXml.Internal.SchemaValidation.AttributeConstraint[],DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction)">
            <summary>
            Initializes a new instance of the SchemaTypeData.
            </summary>
            <param name="openxmlTypeId"></param>
            <param name="attributeConstraints"></param>
            <param name="simpleTypeConstraint"></param>
            <remarks>
            For simple type or complex type which is simple content (no particle children).
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeData.OpenXmlTypeId">
            <summary>
            The type ID of the OpenXmlElement class for this schema type.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeData.ParticleConstraint">
            <summary>
            Gets or sets the particle constraint of this schema type.
            </summary>
            <remarks>
            Valid for complex types which are composite types - aka. has children particles.
            Otherwise, it should be null.
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeData.SimpleTypeConstraint">
            <summary>
            Gets or sets the simple type constraint when this type is simple content.
            </summary>
            <remarks>
            The simple type constraint if it is a simple content complex type or a simple type.
            null for complex types which are composite types - aka. has children particles.
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeData.AttributeConstraints">
            <summary>
            Gets or sets the constraints for all the attributes of this type.
            </summary>
            <remarks>
            Each attribute is mapped to a class property in the generated OpenXmlElement class.
            The attributes value are saved in a fixed array in the OpenXmlElement class.
            So the attribute constraint in this array has same order (has a 1:1 map relation to the fixed array in the class).
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeData.IsCompositeType">
            <summary>
            Returns true if the schema type is a schema type which contains particles.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeData.IsSimpleContent">
            <summary>
            Returns true if the schema type contains simple content only.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeValidator">
            <summary>
            Validate an OpenXmlElement based on the schema.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeValidator.#ctor(DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaDatas)">
            <summary>
            Initializes a new instance of the SchemaTypeValidator.
            </summary>
            <param name="sdbSchemaDatas"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeValidator.Validate(DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Only validation whether the children elements are valid according to this type's constraint defined in schema.
            </summary>
            <param name="validationContext">The validation context.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeValidator.ValidateAttributes(DocumentFormat.OpenXml.Validation.ValidationContext,DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeData)">
            <summary>
            Validate the attributes constraint.
            </summary>
            <param name="validationContext">The validation context.</param>
            <param name="schemaTypeData">The constraint data of the schema type.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeValidator.ValidateValue(DocumentFormat.OpenXml.Validation.ValidationContext,DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction,DocumentFormat.OpenXml.OpenXmlSimpleType,System.String,System.Boolean)">
            <summary>
            Validate the value accoding to the simpleTypeConstraint.
            </summary>
            <param name="validationContext">The validation context.</param>
            <param name="simpleTypeConstraint">The constraint data of the simple type.</param>
            <param name="value">The value to be validated.</param>
            <param name="qname">The QualifiedName to be used in the error message.</param>
            <param name="isAttribute">Error message targeting attribute (or element).</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeValidator.EmptyComplexTypeValidator">
            <summary>
            empty CT, OpenXmlLeafElement
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeValidator.EmptyRootComplexTypeValidator">
            <summary>
            empty CT, but used as part root element, OpenXmlPartRootElement
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeValidator.SimpleContentComplexTypeValidator">
            <summary>
            simple content CT, OpenXmlLeafTextElement
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaTypeValidator.CompositeComplexTypeValidator">
            <summary>
            Composite CT
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaValidator">
            <summary>
            Schema validator.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaValidator.#ctor">
            <summary>
            Initializes a new instance of the SchemaValidator. Default to FileFormat.Office2007.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaValidator.#ctor(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Initializes a new instance of the SchemaValidator. 
            </summary>
            <param name="fileFormat">The target Open XML format.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the "fileFormat" parameter is not FileFormat.Office2007, FileFormat.Office2010 or FileFormat.O15.</exception>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaValidator.Validate(DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Validate the DOM tree under the specified OpenXmlElement in the context.
            </summary>
            <param name="validationContext"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaValidator.ValidateElement(DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Validate the OpenXmlElement in the context.
            </summary>
            <param name="validationContext"></param>
            <remarks>
            This method validates the OpenXmlElement itself only.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SchemaValidator.OnCancel(System.Object,System.EventArgs)">
            <summary>
            On cancel event.
            </summary>
            <param name="sender"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbDataHead.DataByteCount">
            <summary>
            size in byte of the schema constraint datas, exclude the DataHead.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbDataHead.StartClassId">
            <summary>
            The first class ID.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbDataHead.GetBytes">
            <summary>
            Convert the data of this class (all fields) into byte data.
            </summary>
            <returns>Byte data.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbDataHead.LoadFromBytes(System.Byte[],System.Int32)">
            <summary>
            Load the fields data from byte data.
            </summary>
            <param name="value">The byte data array.</param>
            <param name="startIndex">The offset the data begins at.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaDatas">
            <summary>
            Defines SdbSchemaDatas class.
            </summary>
            <remarks>
            This class serve as the loader which load the schema constraint datas from binary data.
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaDatas.GetOffice2007SchemaDatas">
            <summary>
            Return an instance of SchemaConstraintDatabase which will load Office2007 schemas.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaDatas.GetOffice2010SchemaDatas">
            <summary>
            Return an instance of SchemaConstraintDatabase which will load Office2010 schemas.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaDatas.GetOffice2013SchemaDatas">
            <summary>
            Return an instance of SchemaConstraintDatabase which will load Office2010 schemas.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaDatas.GetSchemaTypeData(DocumentFormat.OpenXml.OpenXmlElement)">
            <summary>
            Load schema type constraint data for the specified element.
            </summary>
            <param name="openxmlElement">The element.</param>
            <returns>The constraint data of the schema type.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaDatas.GetSchemaTypeData(System.Int32)">
            <summary>
            Load schema type constraint data for the specified element type ID.
            </summary>
            <param name="openxmlTypeId"></param>
            <returns>The constraint data of the schema type.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaDatas.BuildParticleConstraint(DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType)">
            <summary>
            Load the particle constraint from the specified data in binary database.
            </summary>
            <param name="sdbSchemaTpye">The data in binary database.</param>
            <returns>The particle constraint in ParticleConstraint.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaDatas.BuildParticleConstraint(System.UInt16)">
            <summary>
            Load the particle constraint from the specified data in binary database.
            </summary>
            <param name="particleIndex">The index of the particle constraint data in the binary database.</param>
            <returns>The particle constraint in ParticleConstraint.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaDatas.BuildAttributeConstraint(DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaType)">
            <summary>
            Load the attribute constraints and simple type constraint for attributes for the schema type.
            </summary>
            <param name="sdbSchemaTpye"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SdbSchemaDatas.LoadSchemaTypeData(System.UInt16)">
            <summary>
            Load the data in the binary database into SchemaTypeData object.
            </summary>
            <param name="openxmlTypeId">The id of the type (the OpenXmlElement class).</param>
            <returns>The SchemaTypeData object.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SequenceParticleValidator">
            <summary>
            Sequence particle validator.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.SequenceParticleValidator._childMatchInfo">
            <summary>
            This data field is moved from TryMatchOnce. 
            Base on the following point.
            - The TryMatchOnce() method will NOT be called more than once with same ChoiceParticleValidator instance on the stack when validating one element.
            - That means this data field will not be overriden in recursive calling when validating one element. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SequenceParticleValidator.#ctor(DocumentFormat.OpenXml.Internal.SchemaValidation.CompositeParticle)">
            <summary>
            Initializes a new instance of the SequenceParticleValidator.
            </summary>
            <param name="particleConstraint"></param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SequenceParticleValidator.TryMatchOnce(DocumentFormat.OpenXml.Internal.SchemaValidation.ParticleMatchInfo,DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Try match the particle once.
            </summary>
            <param name="particleMatchInfo"></param>
            <param name="validationContext">The context information for validation.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SequenceParticleValidator.GetRequiredElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the required elements - elements which minOccurs > 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are required elements in this particle.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SequenceParticleValidator.GetExpectedElements(DocumentFormat.OpenXml.Internal.SchemaValidation.ExpectedChildren)">
            <summary>
            Get the expected elements - elements which minOccurs >= 0.
            </summary>
            <param name="result"></param>
            <returns>True if there are expected elements in this particle.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.XsdType">
            <summary>
            All simple types built in to xml schema.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.XsdTypeExtension.GetXsdDataTypeName(DocumentFormat.OpenXml.Internal.SchemaValidation.XsdType)">
            <summary>
            Returns the XML Schema datatype name of the specified type.
            </summary>
            <param name="xsdType">The XsdType type.</param>
            <returns>Returns the XML Schema datatype name of the specified type.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.RestrictionField">
            <summary>
            Schema simple type restrictin facets.
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.RestrictionField.MinMaxInclusive">
            <summary>
            MinInclusive | MaxInclusive
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.RestrictionField.MinMaxExclusive">
            <summary>
            MinExclusive | MaxExclusive
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.RestrictionField.MinMaxRestriction">
            <summary>
            MinInclusive | MaxInclusive | MinExclusive | MaxExclusive
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Internal.SchemaValidation.RestrictionField.LengthRestriction">
            <summary>
            Length | MinLength | MaxLength
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestrictions">
            <summary>
            Holds all simple type constraints in array.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestrictions.Deserialize(System.IO.Stream,DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Deserialize the binary data into memory object.
            </summary>
            <param name="stream">The data stream.</param>
            <param name="fileFormat">The target file format version.</param>
            <returns></returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestrictions.DocumentFormatBinder">
            <summary>
            The validation data is contained in a binary file that was generated with an older, non-signed version of the library.
            Deserialization will fail without this binder, which redirects any attempt at loading the old type to the new type
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestrictions.Item(System.Int32)">
            <summary>
            Indexer to retriver a specified data in the SimpleTypes.
            </summary>
            <param name="index">The index of the data in the SimpleTypes array.</param>
            <returns>The simple type constraint data.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction">
            <summary>
            Base class for simple type constraint.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.FileFormat">
            <summary>
            The FileFormat version of this restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.IsEnum">
            <summary>
            Is this an enumeration simple type?
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.IsList">
            <summary>
            Is this simple type a list?
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.MaxLength">
            <summary>
            Gets the maxLength facets.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.MinLength">
            <summary>
            Gets the minLength facets.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.Length">
            <summary>
            Gets the length facets.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.GetRestrictionValue(DocumentFormat.OpenXml.Internal.SchemaValidation.RestrictionField)">
            <summary>
            Gets the restriction value in string in CultureInfo.CurrentUICulture.
            </summary>
            <param name="restrictionField">The facet to be retrived.</param>
            <returns>The value in string.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.RestrictionField">
            <summary>
            Gets the effective constraint facets used in this instance.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.Validate(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate the value to all the constraints.
            </summary>
            <param name="attributeValue">The value to be validated.</param>
            <returns>An bit flag, a bit is set on if the corresponding constraint is failed.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.IsPatternValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Test whether the attribute value is valid according the patten constraint.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.IsLengthValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "length" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns>True if the length of the value is same as defined.</returns>
            <remarks>
            A value in a ·value space· is facet-valid with respect to ·length·, determined as follows: 
            1 if the {variety} is ·atomic· then 
              1.1 if {primitive type definition} is string or anyURI, then the length of the value, as measured in characters ·must· be equal to {value}; 
              1.2 if {primitive type definition} is hexBinary or base64Binary, then the length of the value, as measured in octets of the binary data, ·must· be equal to {value}; 
              1.3 if {primitive type definition} is QName or NOTATION, then any {value} is facet-valid. 
            2 if the {variety} is ·list·, then the length of the value, as measured in list items, ·must· be equal to {value} 
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.IsMinLengthValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "length" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns>True if the length of the value is same as defined.</returns>
            <remarks>
            A value in a ·value space· is facet-valid with respect to ·length·, determined as follows: 
            1 if the {variety} is ·atomic· then 
              1.1 if {primitive type definition} is string or anyURI, then the length of the value, as measured in characters ·must· be equal to {value}; 
              1.2 if {primitive type definition} is hexBinary or base64Binary, then the length of the value, as measured in octets of the binary data, ·must· be equal to {value}; 
              1.3 if {primitive type definition} is QName or NOTATION, then any {value} is facet-valid. 
            2 if the {variety} is ·list·, then the length of the value, as measured in list items, ·must· be equal to {value} 
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.IsMaxLengthValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "length" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns>True if the length of the value is same as defined.</returns>
            <remarks>
            A value in a ·value space· is facet-valid with respect to ·length·, determined as follows: 
            1 if the {variety} is ·atomic· then 
              1.1 if {primitive type definition} is string or anyURI, then the length of the value, as measured in characters ·must· be equal to {value}; 
              1.2 if {primitive type definition} is hexBinary or base64Binary, then the length of the value, as measured in octets of the binary data, ·must· be equal to {value}; 
              1.3 if {primitive type definition} is QName or NOTATION, then any {value} is facet-valid. 
            2 if the {variety} is ·list·, then the length of the value, as measured in list items, ·must· be equal to {value} 
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.IsMinInclusiveValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "minInclusive" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.IsMinExclusiveValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "minExclusive" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.IsMaxInclusiveValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "maxInclusive" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleTypeRestriction.IsMaxExclusiveValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "maxExclusive" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.RedirectedRestriction">
            <summary>
            Class for attributes that have different simple type in Office2007 and Office2010.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.RedirectedRestriction.AttributeId">
            <summary>
            An ID for this type. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.RedirectedRestriction.#ctor">
            <summary>
            Initializes a new instance of the ValidationErrorInfo.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.RedirectedRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.RedirectedRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.UnionValueRestriction">
            <summary>
            Class for all union simple types.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.UnionValueRestriction.UnionId">
            <summary>
            An ID for union. 
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.UnionValueRestriction.#ctor">
            <summary>
            Initializes a new instance of the ValidationErrorInfo.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.UnionValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.UnionValueRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.UnionValueRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.EnumValueRestriction">
            <summary>
            Class for all string enum based simple types.
            </summary>
            <remarks>
            We do not save the enums in the database. Instead we reuse the generated enum class in the generated code.
            For attributes, the type of the enum is known through the code-gen'ed data.
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.EnumValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.EnumValueRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.EnumValueRestriction.IsEnum">
            <summary>
            Is this an enumeration simple type?
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.EnumValueRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.ListValueRestriction">
            <summary>
            Class for all list simple types.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ListValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ListValueRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ListValueRestriction.IsList">
            <summary>
            Is this simple type a list?
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.ListValueRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.BooleanValueRestriction">
            <summary>
            Boolean (xsd:boolean) based simple type constraint.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.BooleanValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.BooleanValueRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2">
            <summary>
            Base class for digit value based simple type constraint.
            </summary>
            <typeparam name="T">A basic number type.</typeparam>
            <typeparam name="ST">A type of OpenXmlSimpleType.</typeparam>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.MinInclusive">
            <summary>
            Gets the minInclusive facets.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.MaxInclusive">
            <summary>
            Gets the maxInclusive facets.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.MinExclusive">
            <summary>
            Gets the minExclusive facets.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.MaxExclusive">
            <summary>
            Gets the maxExclusive facets.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.GetRestrictionValue(DocumentFormat.OpenXml.Internal.SchemaValidation.RestrictionField)">
            <summary>
            Gets the restriction value in string in CultureInfo.CurrentUICulture.
            </summary>
            <param name="restrictionField">The facet to be retrived.</param>
            <returns>The value in string.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.StringToSimpleValue(System.String)">
            <summary>
            Convert the text "valueText" to value in OpenXmlSimpleValue.
            </summary>
            <param name="valueText"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.IsMinInclusiveValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "minInclusive" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.IsMinExclusiveValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "minExclusive" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.IsMaxInclusiveValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "maxInclusive" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.IsMaxExclusiveValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "maxExclusive" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SimpleValueRestriction`2.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.ByteValueRestriction">
            <summary>
            Byte ( xsd:unsignedByte ) based value restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.ByteValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SByteValueRestriction">
            <summary>
            SByte (xsd:bye) based value restriction. 
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SByteValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.Int16ValueRestriction">
            <summary>
            Int16 ( xsd:short ) based value restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.Int16ValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.Int32ValueRestriction">
            <summary>
            Int32 (xsd:int) based value restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.Int32ValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.Int64ValueRestriction">
            <summary>
            Int64 (xsd:long) based value restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.Int64ValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.UInt16ValueRestriction">
            <summary>
            UInt16 ( xsd:unsignedShort ) based value restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.UInt16ValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.UInt32ValueRestriction">
            <summary>
            UInt32 (xsd:unsignedInt) based value restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.UInt32ValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.UInt64ValueRestriction">
            <summary>
            UInt64 (xsd:unsignedLong) based value restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.UInt64ValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.SingleValueRestriction">
            <summary>
            Single (xsd:float) based value restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.SingleValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.SingleValueRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.DoubleValueRestriction">
            <summary>
            Double (xsd:double) based value restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.DoubleValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.DoubleValueRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.DecimalValueRestriction">
            <summary>
            Decimal (xsd:decimal) based value restriction.
            </summary>
            <remarks>
            decimal represents a subset of the real numbers, which can be represented by decimal numerals. 
            The ·value space· of decimal is the set of numbers that can be obtained by multiplying an integer by a non-positive power of ten, 
            i.e., expressible as i × 10^-n where i and n are integers and n >= 0. 
            Precision is not reflected in this value space; the number 2.0 is not distinct from the number 2.00. 
            The ·order-relation· on decimal is the order relation on real numbers, restricted to this subset. 
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.DecimalValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.IntegerValueRestriction">
            <summary>
            Integer (xsd:integer) based value restriction.
            </summary>
            <remarks>
             integer is ·derived· from decimal by fixing the value of ·fractionDigits· to be 0 and disallowing the trailing decimal point. 
             This results in the standard mathematical concept of the integer numbers. 
             The ·value space· of integer is the infinite set {...,-2,-1,0,1,2,...}. The ·base type· of integer is decimal. 
             
            !******************** TODO: at current, the CodeGen generate int for xsd:integer
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.IntegerValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.IntegerValueRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.NonNegativeIntegerValueRestriction">
             <summary>
             NonNegativeInteger (xsd:nonNegativeInteger, ) based value restriction.
             </summary>
             <remarks>
             nonNegativeInteger is ·derived· from integer by setting the value of ·minInclusive· to be 0. 
             This results in the standard mathematical concept of the non-negative integers. 
             The ·value space· of nonNegativeInteger is the infinite set {0,1,2,...}. 
             The ·base type· of nonNegativeInteger is integer. 
            
             !******************** TODO: at current, the CodeGen generate int for xsd:integer
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.NonNegativeIntegerValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.NonNegativeIntegerValueRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.PositiveIntegerValueRestriction">
             <summary>
             PositiveInteger (xsd:positiveInteger, ) based value restriction.
             </summary>
             <remarks>
             positiveInteger is ·derived· from nonNegativeInteger by setting the value of ·minInclusive· to be 1. 
             This results in the standard mathematical concept of the positive integer numbers. 
             The ·value space· of positiveInteger is the infinite set {1,2,...}. 
             The ·base type· of positiveInteger is nonNegativeInteger.
            
             !******************** TODO: at current, the CodeGen generate int for xsd:integer
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.PositiveIntegerValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.PositiveIntegerValueRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.DateTimeValueRestriction">
            <summary>
            DateTime (xsd:dateTime) based value restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.DateTimeValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.DateValueRestriction">
            <summary>
            DateTime (xsd:date) based value restriction.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.DateValueRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.StringRestriction">
            <summary>
            Base class for string (xsd:string) based simple type constraints.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.StringRestriction.MaxLength">
            <summary>
            Gets the maxLength facets.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.StringRestriction.MinLength">
            <summary>
            Gets the minLength facets.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.StringRestriction.Length">
            <summary>
            Gets the length facets.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.StringRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.StringRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.StringRestriction.IsPatternValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Test whether the attribute value is valid according the patten constraint.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.StringRestriction.GetValueLength(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Get the lenght of the attribute value according to the xsd type.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
            <remarks>
            A value in a ·value space· is facet-valid with respect to ·length·, determined as follows: 
            1 if the {variety} is ·atomic· then 
              1.1 if {primitive type definition} is string or anyURI, then the length of the value, as measured in characters ·must· be equal to {value}; 
              1.2 if {primitive type definition} is hexBinary or base64Binary, then the length of the value, as measured in octets of the binary data, ·must· be equal to {value}; 
              1.3 if {primitive type definition} is QName or NOTATION, then any {value} is facet-valid. 
            2 if the {variety} is ·list·, then the length of the value, as measured in list items, ·must· be equal to {value} 
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.StringRestriction.IsLengthValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "length" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns>True if the length of the value is same as defined.</returns>
            <remarks>
            A value in a ·value space· is facet-valid with respect to ·length·, determined as follows: 
            1 if the {variety} is ·atomic· then 
              1.1 if {primitive type definition} is string or anyURI, then the length of the value, as measured in characters ·must· be equal to {value}; 
              1.2 if {primitive type definition} is hexBinary or base64Binary, then the length of the value, as measured in octets of the binary data, ·must· be equal to {value}; 
              1.3 if {primitive type definition} is QName or NOTATION, then any {value} is facet-valid. 
            2 if the {variety} is ·list·, then the length of the value, as measured in list items, ·must· be equal to {value} 
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.StringRestriction.IsMinLengthValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "length" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns>True if the length of the value is same as defined.</returns>
            <remarks>
            A value in a ·value space· is facet-valid with respect to ·length·, determined as follows: 
            1 if the {variety} is ·atomic· then 
              1.1 if {primitive type definition} is string or anyURI, then the length of the value, as measured in characters ·must· be equal to {value}; 
              1.2 if {primitive type definition} is hexBinary or base64Binary, then the length of the value, as measured in octets of the binary data, ·must· be equal to {value}; 
              1.3 if {primitive type definition} is QName or NOTATION, then any {value} is facet-valid. 
            2 if the {variety} is ·list·, then the length of the value, as measured in list items, ·must· be equal to {value} 
            </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.StringRestriction.IsMaxLengthValid(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validate whether the "length" constraint is ok.
            </summary>
            <param name="attributeValue"></param>
            <returns>True if the length of the value is same as defined.</returns>
            <remarks>
            A value in a ·value space· is facet-valid with respect to ·length·, determined as follows: 
            1 if the {variety} is ·atomic· then 
              1.1 if {primitive type definition} is string or anyURI, then the length of the value, as measured in characters ·must· be equal to {value}; 
              1.2 if {primitive type definition} is hexBinary or base64Binary, then the length of the value, as measured in octets of the binary data, ·must· be equal to {value}; 
              1.3 if {primitive type definition} is QName or NOTATION, then any {value} is facet-valid. 
            2 if the {variety} is ·list·, then the length of the value, as measured in list items, ·must· be equal to {value} 
            </remarks>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.TokenRestriction">
            <summary>
            Token (xsd:token) based simple type constraint.
            </summary>
            <remarks>
            token represents tokenized strings. 
            The ·value space· of token is the set of strings that do not contain the carriage return (#xD), 
            line feed (#xA) nor tab (#x9) characters, that have no leading or trailing spaces (#x20) and 
            that have no internal sequences of two or more spaces. 
            The ·lexical space· of token is the set of strings that do not contain the carriage return (#xD), 
            line feed (#xA) nor tab (#x9) characters, that have no leading or trailing spaces (#x20) and 
            that have no internal sequences of two or more spaces. The ·base type· of token is normalizedString
            
            In Ecma376, most token are enumerations.
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.TokenRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.TokenRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.TokenRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.QnameRestriction">
            <summary>
            QName (xsd:QName) based simple type constraint.
            </summary>
            <remarks>
            QName represents XML qualified names. 
            The ·value space· of QName is the set of tuples {namespace name, local part}, where namespace name is an anyURI and local part is an NCName. 
            The ·lexical space· of QName is the set of strings that ·match· the QName production of [Namespaces in XML]. 
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.QnameRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.QnameRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.QnameRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.NcNameRestriction">
            <summary>
            NCName (xsd:NCName) based simple type constraint.
            </summary>
            <remarks>
             NCName represents XML "non-colonized" Names. 
             The ·value space· of NCName is the set of all strings which ·match· the NCName production of [Namespaces in XML]. 
             The ·lexical space· of NCName is the set of all strings which ·match· the NCName production of [Namespaces in XML]. 
             The ·base type· of NCName is Name. 
             
             Also Use NcName for IDREF.
             IDREF represents the IDREF attribute type from [XML 1.0 (Second Edition)]. 
             The ·value space· of IDREF is the set of all strings that ·match· the NCName production in [Namespaces in XML]. 
             The ·lexical space· of IDREF is the set of strings that ·match· the NCName production in [Namespaces in XML]. 
             The ·base type· of IDREF is NCName. 
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.NcNameRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.NcNameRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.NcNameRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.IdStringRestriction">
            <summary>
            ID (xsd:ID) based simple type constraint.
            </summary>
            <remarks>
            ID represents the ID attribute type from [XML 1.0 (Second Edition)]. 
            The ·value space· of ID is the set of all strings that ·match· the NCName production in [Namespaces in XML]. 
            The ·lexical space· of ID is the set of all strings that ·match· the NCName production in [Namespaces in XML]. 
            The ·base type· of ID is NCName. 
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.IdStringRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.IdStringRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.IdStringRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyUriRestriction">
            <summary>
            AnyURI (xsd:anyURI) based simple type constraint.
            </summary>
            <remarks>
            anyURI represents a Uniform Resource Identifier Reference (URI). 
            An anyURI value can be absolute or relative, and may have an optional fragment identifier (i.e., it may be a URI Reference). 
            This type should be used to specify the intention that the value fulfills the role of a URI as defined by [RFC 2396], as amended by [RFC 2732]. 
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyUriRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyUriRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.AnyUriRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.HexBinaryRestriction">
            <summary>
            Hex binary (xsd:hexBinary) based simple type constraint.
            </summary>
            <remarks>
            hexBinary has a lexical representation where each binary octet is encoded as a character tuple, 
            consisting of two hexadecimal digits ([0-9a-fA-F]) representing the octet code. 
            For example, "0FB7" is a hex encoding for the 16-bit integer 4023 (whose binary representation is 111110110111). 
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.HexBinaryRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.HexBinaryRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.HexBinaryRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.HexBinaryRestriction.GetValueLength(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Get the lenght of the attribute value according to the xsd type.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
            <remarks>
            A value in a ·value space· is facet-valid with respect to ·length·, determined as follows: 
              1.2 if {primitive type definition} is hexBinary or base64Binary, then the length of the value, as measured in octets of the binary data, ·must· be equal to {value}; 
            </remarks>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.Base64BinaryRestriction">
            <summary>
            Base64 binary (xsd:base64Binary) based simple type constraint.
            </summary>
            <remarks>
            The lexical forms of base64Binary values are limited to the 65 characters of the Base64 Alphabet defined in [RFC 2045], i.e., a-z, A-Z, 0-9, the plus sign (+), the forward slash (/) and the equal sign (=), together with the characters defined in [XML 1.0 (Second Edition)] as white space. No other characters are allowed. 
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.Base64BinaryRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.Base64BinaryRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.Base64BinaryRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.Base64BinaryRestriction.GetValueLength(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Get the lenght of the attribute value according to the xsd type.
            </summary>
            <param name="attributeValue"></param>
            <returns></returns>
            <remarks>
            A value in a ·value space· is facet-valid with respect to ·length·, determined as follows: 
              1.2 if {primitive type definition} is hexBinary or base64Binary, then the length of the value, as measured in octets of the binary data, ·must· be equal to {value}; 
            </remarks>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SchemaValidation.LanguageRestriction">
            <summary>
            language (xsd:language) based simple type constraint.
            </summary>
            <remarks>
             language represents natural language identifiers as defined by by [RFC 3066] . 
             The ·value space· of language is the set of all strings that are valid language identifiers as defined [RFC 3066] . 
             The ·lexical space· of language is the set of all strings that conform to the pattern [a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})* . 
             The ·base type· of language is token. 
            </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.LanguageRestriction.XsdType">
            <summary>
            Gets the XsdType - type defined in schema.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Internal.SchemaValidation.LanguageRestriction.ClrTypeName">
            <summary>
            Returns the corresponding CLR type name. The name will be used to report error.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SchemaValidation.LanguageRestriction.ValidateValueType(DocumentFormat.OpenXml.OpenXmlSimpleType)">
            <summary>
            Validating the specified value is valid according the XsdType.
            </summary>
            <param name="attributeValue"></param>
            <returns>False if the specified value is not valid.</returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticConstraintRegistry">
            <summary>
            Semantic constraint registry base class
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticConstraintRegistry.#ctor(DocumentFormat.OpenXml.FileFormatVersions,DocumentFormat.OpenXml.Internal.SemanticValidation.ApplicationType)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticConstraintRegistry.RegisterConstraint(System.Int32,System.Int32,DocumentFormat.OpenXml.FileFormatVersions,DocumentFormat.OpenXml.Internal.SemanticValidation.ApplicationType,DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticConstraint)">
            <summary>
            Register a constraint to this registry.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticConstraintRegistry.CheckConstraints(DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Check if specified context meets all registered constraints
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticConstraintRegistry.ClearConstraintState(DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticValidationLevel)">
            <summary>
            Clean state of all registered constraints
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributeAbsentConditionToNonValue">
            <summary>
            1.15 attribute should be absent if another attribute not equals some value
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributeAbsentConditionToValue">
            <summary>
            1.14 attribute should be absent if another attribute equals some value
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributeMinMaxConstraint">
            <summary>
            One attribute value must no bigger than another's.
            Attribute value should be number.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributeMutualExclusive">
            <summary>
            1.16 only one of a group attributes can exist
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributePairConstraint">
            <summary>
            Two attributes of one element must appear as a pair.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributeRequiredConditionToValue">
            <summary>
            1.18 attribute is required if another attribute equals some value 
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributeValueConditionToAnother">
            <summary>
            1.19 attribute should be of some value if another attribute is of some value
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributeValueLengthConstraint">
            <summary>
            1.12 Attribute value length must be in specified range.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributeValueLessEqualToAnother">
            <summary>
            1.17 value of one attribute must be less than or equal another's
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributeValuePatternConstraint">
            <summary>
            1.2 Attribute value should follow specified regex
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributeValueRangeConstraint">
            <summary>
            1.3 Attribute value is a number, it must (or must not) in range of min to max.
            If valid/invalid values are not numbers or not contiguous, AttributeValueSetConstraint should be used.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.AttributeValueSetConstraint">
            <summary>
            1.4/1.10 Attribute value must (or must not) in specified value set.
            If valid/invalid values are numbers and contiguous, AttributeValueRangeConstraint should be used.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.IndexReferenceConstraint">
            <summary>
            3.2 Class for package-level constraint "indexed element must exist".
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.ParentTypeConstraint">
            <summary>
            Element's parent must be/not be of a specified type
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.ReferenceExistConstraint">
            <summary>
            3.1 Class for package-level constraint "referenced element must exist".
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticConstraint">
            <summary>
            OpenXML API will implement a class for each semantic constraint category.
            "SemanticConstraint" is base class of all these classes.
            A semanticConstraint object will be used to validate a correspoding doc element to see if it meets the constraint or not.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticConstraint.#ctor(DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticValidationLevel)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticConstraint.ClearState(DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Some semantic constraint classes will hold state at runtime,
            and this method is to remove the state
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticConstraint.Validate(DocumentFormat.OpenXml.Validation.ValidationContext)">
            <summary>
            Semantic validation logic
            </summary>
            <param name="context">return null if validation succeed</param>
            <returns></returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Internal.SemanticValidation.UniqueAttributeValueConstraint">
            <summary>
            2.3 Element's attribute value should be unique within specified type of element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Internal.SemanticValidation.SemanticValidator.OnCancel(System.Object,System.EventArgs)">
            <summary>
            On cancel event.
            </summary>
            <param name="sender"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData">
             <summary>
             <para>Attached Object Data.</para>
             <para> When the object is serialized out as xml, its qualified name is xvml:ClientData.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>MoveWithCells &lt;xvml:MoveWithCells></description></item>
            <item><description>ResizeWithCells &lt;xvml:SizeWithCells></description></item>
            <item><description>Anchor &lt;xvml:Anchor></description></item>
            <item><description>Locked &lt;xvml:Locked></description></item>
            <item><description>DefaultSize &lt;xvml:DefaultSize></description></item>
            <item><description>PrintObject &lt;xvml:PrintObject></description></item>
            <item><description>Disabled &lt;xvml:Disabled></description></item>
            <item><description>AutoFill &lt;xvml:AutoFill></description></item>
            <item><description>AutoLine &lt;xvml:AutoLine></description></item>
            <item><description>AutoSizePicture &lt;xvml:AutoPict></description></item>
            <item><description>FormulaMacro &lt;xvml:FmlaMacro></description></item>
            <item><description>HorizontalTextAlignment &lt;xvml:TextHAlign></description></item>
            <item><description>VerticalTextAlignment &lt;xvml:TextVAlign></description></item>
            <item><description>LockText &lt;xvml:LockText></description></item>
            <item><description>JustifyLastLine &lt;xvml:JustLastX></description></item>
            <item><description>SecretEdit &lt;xvml:SecretEdit></description></item>
            <item><description>DefaultButton &lt;xvml:Default></description></item>
            <item><description>HelpButton &lt;xvml:Help></description></item>
            <item><description>CancelButton &lt;xvml:Cancel></description></item>
            <item><description>DismissButton &lt;xvml:Dismiss></description></item>
            <item><description>AcceleratorPrimary &lt;xvml:Accel></description></item>
            <item><description>AcceleratorSecondary &lt;xvml:Accel2></description></item>
            <item><description>CommentRowTarget &lt;xvml:Row></description></item>
            <item><description>CommentColumnTarget &lt;xvml:Column></description></item>
            <item><description>Visible &lt;xvml:Visible></description></item>
            <item><description>RowHidden &lt;xvml:RowHidden></description></item>
            <item><description>ColumnHidden &lt;xvml:ColHidden></description></item>
            <item><description>InputValidationType &lt;xvml:VTEdit></description></item>
            <item><description>MultiLine &lt;xvml:MultiLine></description></item>
            <item><description>VerticalScrollBar &lt;xvml:VScroll></description></item>
            <item><description>ValidIds &lt;xvml:ValidIds></description></item>
            <item><description>FormulaRange &lt;xvml:FmlaRange></description></item>
            <item><description>MinDropDownWidth &lt;xvml:WidthMin></description></item>
            <item><description>SelectionEntry &lt;xvml:Sel></description></item>
            <item><description>Disable3DForListBoxAndDropDown &lt;xvml:NoThreeD2></description></item>
            <item><description>SelectionType &lt;xvml:SelType></description></item>
            <item><description>MultiSelections &lt;xvml:MultiSel></description></item>
            <item><description>ListBoxCallbackType &lt;xvml:LCT></description></item>
            <item><description>ListItem &lt;xvml:ListItem></description></item>
            <item><description>DropStyle &lt;xvml:DropStyle></description></item>
            <item><description>Colored &lt;xvml:Colored></description></item>
            <item><description>DropLines &lt;xvml:DropLines></description></item>
            <item><description>Checked &lt;xvml:Checked></description></item>
            <item><description>FormulaLink &lt;xvml:FmlaLink></description></item>
            <item><description>FormulaPicture &lt;xvml:FmlaPict></description></item>
            <item><description>Disable3D &lt;xvml:NoThreeD></description></item>
            <item><description>FirstButton &lt;xvml:FirstButton></description></item>
            <item><description>FormulaGroup &lt;xvml:FmlaGroup></description></item>
            <item><description>ScrollBarPosition &lt;xvml:Val></description></item>
            <item><description>ScrollBarMin &lt;xvml:Min></description></item>
            <item><description>ScrollBarMax &lt;xvml:Max></description></item>
            <item><description>ScrollBarIncrement &lt;xvml:Inc></description></item>
            <item><description>ScrollBarPageIncrement &lt;xvml:Page></description></item>
            <item><description>HorizontalScrollBar &lt;xvml:Horiz></description></item>
            <item><description>ScrollBarWidth &lt;xvml:Dx></description></item>
            <item><description>MapOcxControl &lt;xvml:MapOCX></description></item>
            <item><description>ClipboardFormat &lt;xvml:CF></description></item>
            <item><description>CameraObject &lt;xvml:Camera></description></item>
            <item><description>RecalculateAlways &lt;xvml:RecalcAlways></description></item>
            <item><description>AutoScaleFont &lt;xvml:AutoScale></description></item>
            <item><description>DdeObject &lt;xvml:DDE></description></item>
            <item><description>UIObject &lt;xvml:UIObj></description></item>
            <item><description>ScriptText &lt;xvml:ScriptText></description></item>
            <item><description>ScriptExtended &lt;xvml:ScriptExtended></description></item>
            <item><description>ScriptLanguage &lt;xvml:ScriptLanguage></description></item>
            <item><description>ScriptLocation &lt;xvml:ScriptLocation></description></item>
            <item><description>FormulaTextBox &lt;xvml:FmlaTxbx></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData.ObjectType">
            <summary>
            <para> Object type.</para>
            <para>Represents the following attribute in the schema: ObjectType </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData.#ctor">
            <summary>
            Initializes a new instance of the ClientData class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ClientData class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ClientData class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ClientData class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.MoveWithCells">
            <summary>
            <para>Move with Cells.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:MoveWithCells.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.MoveWithCells.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.MoveWithCells.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MoveWithCells.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MoveWithCells.#ctor">
            <summary>
            Initializes a new instance of the MoveWithCells class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MoveWithCells.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MoveWithCells class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MoveWithCells.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ResizeWithCells">
            <summary>
            <para>Resize with Cells.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:SizeWithCells.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ResizeWithCells.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ResizeWithCells.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ResizeWithCells.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ResizeWithCells.#ctor">
            <summary>
            Initializes a new instance of the ResizeWithCells class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ResizeWithCells.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ResizeWithCells class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ResizeWithCells.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.Locked">
            <summary>
            <para>Lock Toggle.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Locked.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Locked.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Locked.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Locked.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Locked.#ctor">
            <summary>
            Initializes a new instance of the Locked class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Locked.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Locked class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Locked.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultSize">
            <summary>
            <para>Default Size Toggle.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:DefaultSize.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultSize.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultSize.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultSize.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultSize.#ctor">
            <summary>
            Initializes a new instance of the DefaultSize class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultSize.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DefaultSize class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultSize.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.PrintObject">
            <summary>
            <para>Print Toggle.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:PrintObject.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.PrintObject.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.PrintObject.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.PrintObject.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.PrintObject.#ctor">
            <summary>
            Initializes a new instance of the PrintObject class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.PrintObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PrintObject class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.PrintObject.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.Disabled">
            <summary>
            <para>Macro Disable Toggle.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Disabled.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Disabled.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Disabled.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disabled.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disabled.#ctor">
            <summary>
            Initializes a new instance of the Disabled class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disabled.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Disabled class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disabled.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoFill">
            <summary>
            <para>AutoFill.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:AutoFill.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoFill.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoFill.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoFill.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoFill.#ctor">
            <summary>
            Initializes a new instance of the AutoFill class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoFill.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AutoFill class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoFill.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoLine">
            <summary>
            <para>AutoLine.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:AutoLine.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoLine.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoLine.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoLine.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoLine.#ctor">
            <summary>
            Initializes a new instance of the AutoLine class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoLine.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AutoLine class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoLine.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoSizePicture">
            <summary>
            <para>Automatically Size.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:AutoPict.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoSizePicture.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoSizePicture.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoSizePicture.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoSizePicture.#ctor">
            <summary>
            Initializes a new instance of the AutoSizePicture class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoSizePicture.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AutoSizePicture class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoSizePicture.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.LockText">
            <summary>
            <para>Text Lock.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:LockText.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.LockText.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.LockText.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.LockText.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.LockText.#ctor">
            <summary>
            Initializes a new instance of the LockText class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.LockText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LockText class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.LockText.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.JustifyLastLine">
            <summary>
            <para>Far East Alignment Toggle.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:JustLastX.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.JustifyLastLine.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.JustifyLastLine.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.JustifyLastLine.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.JustifyLastLine.#ctor">
            <summary>
            Initializes a new instance of the JustifyLastLine class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.JustifyLastLine.#ctor(System.String)">
            <summary>
            Initializes a new instance of the JustifyLastLine class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.JustifyLastLine.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.SecretEdit">
            <summary>
            <para>Password Edit.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:SecretEdit.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.SecretEdit.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.SecretEdit.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SecretEdit.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SecretEdit.#ctor">
            <summary>
            Initializes a new instance of the SecretEdit class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SecretEdit.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SecretEdit class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SecretEdit.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultButton">
            <summary>
            <para>Default Button.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Default.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultButton.#ctor">
            <summary>
            Initializes a new instance of the DefaultButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DefaultButton class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DefaultButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.HelpButton">
            <summary>
            <para>Help Button.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Help.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.HelpButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.HelpButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HelpButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HelpButton.#ctor">
            <summary>
            Initializes a new instance of the HelpButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HelpButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HelpButton class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HelpButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.CancelButton">
            <summary>
            <para>Cancel Button.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Cancel.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.CancelButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.CancelButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CancelButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CancelButton.#ctor">
            <summary>
            Initializes a new instance of the CancelButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CancelButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CancelButton class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CancelButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.DismissButton">
            <summary>
            <para>Dismiss Button.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Dismiss.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DismissButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DismissButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DismissButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DismissButton.#ctor">
            <summary>
            Initializes a new instance of the DismissButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DismissButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DismissButton class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DismissButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.Visible">
            <summary>
            <para>Comment Visibility Toggle.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Visible.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Visible.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Visible.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Visible.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Visible.#ctor">
            <summary>
            Initializes a new instance of the Visible class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Visible.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Visible class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Visible.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.RowHidden">
            <summary>
            <para>Comment's Row is Hidden.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:RowHidden.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.RowHidden.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.RowHidden.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.RowHidden.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.RowHidden.#ctor">
            <summary>
            Initializes a new instance of the RowHidden class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.RowHidden.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RowHidden class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.RowHidden.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ColumnHidden">
            <summary>
            <para>Comment's Column is Hidden.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:ColHidden.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ColumnHidden.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ColumnHidden.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ColumnHidden.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ColumnHidden.#ctor">
            <summary>
            Initializes a new instance of the ColumnHidden class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ColumnHidden.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ColumnHidden class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ColumnHidden.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiLine">
            <summary>
            <para>Multi-line.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:MultiLine.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiLine.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiLine.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiLine.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiLine.#ctor">
            <summary>
            Initializes a new instance of the MultiLine class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiLine.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MultiLine class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiLine.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalScrollBar">
            <summary>
            <para>Vertical Scroll.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:VScroll.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalScrollBar.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalScrollBar.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalScrollBar.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalScrollBar.#ctor">
            <summary>
            Initializes a new instance of the VerticalScrollBar class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalScrollBar.#ctor(System.String)">
            <summary>
            Initializes a new instance of the VerticalScrollBar class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalScrollBar.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ValidIds">
            <summary>
            <para>Valid ID.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:ValidIds.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ValidIds.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ValidIds.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ValidIds.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ValidIds.#ctor">
            <summary>
            Initializes a new instance of the ValidIds class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ValidIds.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ValidIds class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ValidIds.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3DForListBoxAndDropDown">
            <summary>
            <para>Disable 3D.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:NoThreeD2.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3DForListBoxAndDropDown.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3DForListBoxAndDropDown.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3DForListBoxAndDropDown.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3DForListBoxAndDropDown.#ctor">
            <summary>
            Initializes a new instance of the Disable3DForListBoxAndDropDown class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3DForListBoxAndDropDown.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Disable3DForListBoxAndDropDown class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3DForListBoxAndDropDown.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.Colored">
            <summary>
            <para>Dropdown Color Toggle.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Colored.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Colored.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Colored.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Colored.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Colored.#ctor">
            <summary>
            Initializes a new instance of the Colored class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Colored.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Colored class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Colored.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3D">
            <summary>
            <para>Disable 3D.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:NoThreeD.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3D.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3D.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3D.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3D.#ctor">
            <summary>
            Initializes a new instance of the Disable3D class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3D.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Disable3D class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Disable3D.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.FirstButton">
            <summary>
            <para>First Radio Button.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:FirstButton.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FirstButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FirstButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FirstButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FirstButton.#ctor">
            <summary>
            Initializes a new instance of the FirstButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FirstButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FirstButton class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FirstButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalScrollBar">
            <summary>
            <para>Scroll Bar Orientation.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Horiz.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalScrollBar.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalScrollBar.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalScrollBar.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalScrollBar.#ctor">
            <summary>
            Initializes a new instance of the HorizontalScrollBar class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalScrollBar.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HorizontalScrollBar class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalScrollBar.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.MapOcxControl">
            <summary>
            <para>ActiveX Control.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:MapOCX.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.MapOcxControl.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.MapOcxControl.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MapOcxControl.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MapOcxControl.#ctor">
            <summary>
            Initializes a new instance of the MapOcxControl class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MapOcxControl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MapOcxControl class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MapOcxControl.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.CameraObject">
            <summary>
            <para>Camera Tool.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Camera.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.CameraObject.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.CameraObject.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CameraObject.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CameraObject.#ctor">
            <summary>
            Initializes a new instance of the CameraObject class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CameraObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CameraObject class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CameraObject.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.RecalculateAlways">
            <summary>
            <para>Recalculation Toggle.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:RecalcAlways.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.RecalculateAlways.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.RecalculateAlways.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.RecalculateAlways.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.RecalculateAlways.#ctor">
            <summary>
            Initializes a new instance of the RecalculateAlways class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.RecalculateAlways.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RecalculateAlways class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.RecalculateAlways.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoScaleFont">
            <summary>
            <para>Font AutoScale.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:AutoScale.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoScaleFont.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoScaleFont.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoScaleFont.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoScaleFont.#ctor">
            <summary>
            Initializes a new instance of the AutoScaleFont class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoScaleFont.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AutoScaleFont class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AutoScaleFont.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.DdeObject">
            <summary>
            <para>Dynamic Data Exchange.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:DDE.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DdeObject.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DdeObject.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DdeObject.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DdeObject.#ctor">
            <summary>
            Initializes a new instance of the DdeObject class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DdeObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DdeObject class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DdeObject.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.UIObject">
            <summary>
            <para>UI Object Toggle.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:UIObj.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.UIObject.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.UIObject.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.UIObject.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.UIObject.#ctor">
            <summary>
            Initializes a new instance of the UIObject class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.UIObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UIObject class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.UIObject.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.Anchor">
            <summary>
            <para>Anchor.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Anchor.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Anchor.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Anchor.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Anchor.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Anchor.#ctor">
            <summary>
            Initializes a new instance of the Anchor class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Anchor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Anchor class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Anchor.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalTextAlignment">
            <summary>
            <para>Horizontal Text Alignment.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:TextHAlign.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalTextAlignment.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalTextAlignment.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalTextAlignment.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalTextAlignment.#ctor">
            <summary>
            Initializes a new instance of the HorizontalTextAlignment class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalTextAlignment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HorizontalTextAlignment class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.HorizontalTextAlignment.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalTextAlignment">
            <summary>
            <para>Vertical Text Alignment.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:TextVAlign.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalTextAlignment.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalTextAlignment.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalTextAlignment.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalTextAlignment.#ctor">
            <summary>
            Initializes a new instance of the VerticalTextAlignment class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalTextAlignment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the VerticalTextAlignment class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.VerticalTextAlignment.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaRange">
            <summary>
            <para>List Items Source Range.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:FmlaRange.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaRange.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaRange.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaRange.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaRange.#ctor">
            <summary>
            Initializes a new instance of the FormulaRange class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaRange.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FormulaRange class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaRange.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionType">
            <summary>
            <para>Selection Type.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:SelType.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionType.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionType.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionType.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionType.#ctor">
            <summary>
            Initializes a new instance of the SelectionType class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SelectionType class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionType.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiSelections">
            <summary>
            <para>Multiple Selections.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:MultiSel.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiSelections.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiSelections.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiSelections.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiSelections.#ctor">
            <summary>
            Initializes a new instance of the MultiSelections class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiSelections.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MultiSelections class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MultiSelections.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ListBoxCallbackType">
            <summary>
            <para>Callback Type.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:LCT.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ListBoxCallbackType.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ListBoxCallbackType.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ListBoxCallbackType.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ListBoxCallbackType.#ctor">
            <summary>
            Initializes a new instance of the ListBoxCallbackType class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ListBoxCallbackType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ListBoxCallbackType class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ListBoxCallbackType.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ListItem">
            <summary>
            <para>Non-linked List Item.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:ListItem.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ListItem.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ListItem.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ListItem.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ListItem.#ctor">
            <summary>
            Initializes a new instance of the ListItem class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ListItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ListItem class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ListItem.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.DropStyle">
            <summary>
            <para>Dropdown Style.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:DropStyle.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DropStyle.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DropStyle.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DropStyle.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DropStyle.#ctor">
            <summary>
            Initializes a new instance of the DropStyle class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DropStyle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DropStyle class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DropStyle.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaLink">
            <summary>
            <para>Linked Formula.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:FmlaLink.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaLink.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaLink.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaLink.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaLink.#ctor">
            <summary>
            Initializes a new instance of the FormulaLink class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaLink.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FormulaLink class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaLink.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaPicture">
            <summary>
            <para>Camera Source Range.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:FmlaPict.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaPicture.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaPicture.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaPicture.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaPicture.#ctor">
            <summary>
            Initializes a new instance of the FormulaPicture class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaPicture.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FormulaPicture class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaPicture.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaGroup">
            <summary>
            <para>Linked Formula - Group Box.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:FmlaGroup.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaGroup.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaGroup.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaGroup.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaGroup.#ctor">
            <summary>
            Initializes a new instance of the FormulaGroup class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FormulaGroup class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaGroup.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptText">
            <summary>
            <para>HTML Script Text.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:ScriptText.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptText.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptText.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptText.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptText.#ctor">
            <summary>
            Initializes a new instance of the ScriptText class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ScriptText class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptText.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptExtended">
            <summary>
            <para>HTML Script Attributes.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:ScriptExtended.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptExtended.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptExtended.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptExtended.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptExtended.#ctor">
            <summary>
            Initializes a new instance of the ScriptExtended class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptExtended.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ScriptExtended class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptExtended.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaTextBox">
            <summary>
            <para>Text Formula.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:FmlaTxbx.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaTextBox.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaTextBox.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaTextBox.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaTextBox.#ctor">
            <summary>
            Initializes a new instance of the FormulaTextBox class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaTextBox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FormulaTextBox class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaTextBox.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaMacro">
            <summary>
            <para>Reference to Custom Function.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:FmlaMacro.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaMacro.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaMacro.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaMacro.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaMacro.#ctor">
            <summary>
            Initializes a new instance of the FormulaMacro class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaMacro.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FormulaMacro class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.FormulaMacro.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorPrimary">
            <summary>
            <para>Primary Keyboard Accelerator.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Accel.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorPrimary.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorPrimary.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorPrimary.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorPrimary.#ctor">
            <summary>
            Initializes a new instance of the AcceleratorPrimary class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorPrimary.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AcceleratorPrimary class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorPrimary.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorSecondary">
            <summary>
            <para>Secondary Keyboard Accelerator.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Accel2.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorSecondary.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorSecondary.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorSecondary.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorSecondary.#ctor">
            <summary>
            Initializes a new instance of the AcceleratorSecondary class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorSecondary.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AcceleratorSecondary class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.AcceleratorSecondary.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentRowTarget">
            <summary>
            <para>Comment Row Target.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Row.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentRowTarget.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentRowTarget.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentRowTarget.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentRowTarget.#ctor">
            <summary>
            Initializes a new instance of the CommentRowTarget class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentRowTarget.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CommentRowTarget class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentRowTarget.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentColumnTarget">
            <summary>
            <para>Comment Column Target.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Column.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentColumnTarget.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentColumnTarget.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentColumnTarget.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentColumnTarget.#ctor">
            <summary>
            Initializes a new instance of the CommentColumnTarget class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentColumnTarget.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CommentColumnTarget class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.CommentColumnTarget.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.InputValidationType">
            <summary>
            <para>Validation Type.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:VTEdit.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.InputValidationType.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.InputValidationType.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.InputValidationType.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.InputValidationType.#ctor">
            <summary>
            Initializes a new instance of the InputValidationType class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.InputValidationType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InputValidationType class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.InputValidationType.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.MinDropDownWidth">
            <summary>
            <para>Minimum Width.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:WidthMin.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.MinDropDownWidth.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.MinDropDownWidth.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MinDropDownWidth.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MinDropDownWidth.#ctor">
            <summary>
            Initializes a new instance of the MinDropDownWidth class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MinDropDownWidth.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MinDropDownWidth class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.MinDropDownWidth.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionEntry">
            <summary>
            <para>Selected Entry.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Sel.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionEntry.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionEntry.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionEntry.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionEntry.#ctor">
            <summary>
            Initializes a new instance of the SelectionEntry class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionEntry.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SelectionEntry class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.SelectionEntry.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.DropLines">
            <summary>
            <para>Dropdown Maximum Lines.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:DropLines.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DropLines.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.DropLines.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DropLines.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DropLines.#ctor">
            <summary>
            Initializes a new instance of the DropLines class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DropLines.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DropLines class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.DropLines.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.Checked">
            <summary>
            <para>Checked.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Checked.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Checked.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.Checked.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Checked.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Checked.#ctor">
            <summary>
            Initializes a new instance of the Checked class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Checked.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Checked class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.Checked.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPosition">
            <summary>
            <para>Scroll bar position.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Val.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPosition.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPosition.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPosition.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPosition.#ctor">
            <summary>
            Initializes a new instance of the ScrollBarPosition class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPosition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ScrollBarPosition class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPosition.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMin">
            <summary>
            <para>Scroll Bar Minimum.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Min.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMin.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMin.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMin.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMin.#ctor">
            <summary>
            Initializes a new instance of the ScrollBarMin class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMin.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ScrollBarMin class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMin.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMax">
            <summary>
            <para>Scroll Bar Maximum.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Max.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMax.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMax.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMax.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMax.#ctor">
            <summary>
            Initializes a new instance of the ScrollBarMax class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMax.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ScrollBarMax class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarMax.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarIncrement">
            <summary>
            <para>Scroll Bar Increment.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Inc.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarIncrement.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarIncrement.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarIncrement.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarIncrement.#ctor">
            <summary>
            Initializes a new instance of the ScrollBarIncrement class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarIncrement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ScrollBarIncrement class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarIncrement.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPageIncrement">
            <summary>
            <para>Scroll Bar Page Increment.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Page.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPageIncrement.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPageIncrement.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPageIncrement.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPageIncrement.#ctor">
            <summary>
            Initializes a new instance of the ScrollBarPageIncrement class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPageIncrement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ScrollBarPageIncrement class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarPageIncrement.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarWidth">
            <summary>
            <para>Scroll Bar Width.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:Dx.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarWidth.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarWidth.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarWidth.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarWidth.#ctor">
            <summary>
            Initializes a new instance of the ScrollBarWidth class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarWidth.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ScrollBarWidth class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScrollBarWidth.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormat">
            <summary>
            <para>Clipboard Format.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:CF.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormat.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormat.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormat.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormat.#ctor">
            <summary>
            Initializes a new instance of the ClipboardFormat class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormat.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ClipboardFormat class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormat.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLanguage">
            <summary>
            <para>HTML Script Language.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:ScriptLanguage.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLanguage.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLanguage.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLanguage.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLanguage.#ctor">
            <summary>
            Initializes a new instance of the ScriptLanguage class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLanguage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ScriptLanguage class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLanguage.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLocation">
            <summary>
            <para>HTML Script Location.</para>
            <para> When the object is serialized out as xml, its qualified name is xvml:ScriptLocation.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLocation.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLocation.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLocation.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLocation.#ctor">
            <summary>
            Initializes a new instance of the ScriptLocation class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLocation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ScriptLocation class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Spreadsheet.ScriptLocation.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormatValues">
            <summary>
            Clipboard Format Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormatValues.PictureOld">
            <summary>
            WMF.
            <para>When the item is serialized out as xml, its value is "PictOld".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormatValues.Picture">
            <summary>
            EMF.
            <para>When the item is serialized out as xml, its value is "Pict".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormatValues.Bitmap">
            <summary>
            Bitmap.
            <para>When the item is serialized out as xml, its value is "Bitmap".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormatValues.PicturePrint">
            <summary>
            Printer Picture.
            <para>When the item is serialized out as xml, its value is "PictPrint".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ClipboardFormatValues.PictureScreen">
            <summary>
            Screen Picture EMF.
            <para>When the item is serialized out as xml, its value is "PictScreen".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues">
            <summary>
            Object Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Button">
            <summary>
            Pushbutton.
            <para>When the item is serialized out as xml, its value is "Button".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Checkbox">
            <summary>
            Checkbox.
            <para>When the item is serialized out as xml, its value is "Checkbox".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Dialog">
            <summary>
            Dialog.
            <para>When the item is serialized out as xml, its value is "Dialog".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Drop">
            <summary>
            Dropdown Box.
            <para>When the item is serialized out as xml, its value is "Drop".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Edit">
            <summary>
            Editable Text Field.
            <para>When the item is serialized out as xml, its value is "Edit".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.GroupBox">
            <summary>
            Group Box.
            <para>When the item is serialized out as xml, its value is "GBox".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Label">
            <summary>
            Label.
            <para>When the item is serialized out as xml, its value is "Label".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.AuditingLine">
            <summary>
            Auditing Line.
            <para>When the item is serialized out as xml, its value is "LineA".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.List">
            <summary>
            List Box.
            <para>When the item is serialized out as xml, its value is "List".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Movie">
            <summary>
            Movie.
            <para>When the item is serialized out as xml, its value is "Movie".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Note">
            <summary>
            Comment.
            <para>When the item is serialized out as xml, its value is "Note".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Picture">
            <summary>
            Image.
            <para>When the item is serialized out as xml, its value is "Pict".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Radio">
            <summary>
            Radio Button.
            <para>When the item is serialized out as xml, its value is "Radio".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.AuditingRectangle">
            <summary>
            Auditing Rectangle.
            <para>When the item is serialized out as xml, its value is "RectA".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Scroll">
            <summary>
            Scroll Bar.
            <para>When the item is serialized out as xml, its value is "Scroll".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Spin">
            <summary>
            Spin Button.
            <para>When the item is serialized out as xml, its value is "Spin".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Shape">
            <summary>
            Plain Shape.
            <para>When the item is serialized out as xml, its value is "Shape".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Group">
            <summary>
            Group.
            <para>When the item is serialized out as xml, its value is "Group".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.ObjectValues.Rectangle">
            <summary>
            Plain Rectangle.
            <para>When the item is serialized out as xml, its value is "Rect".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Spreadsheet.BooleanEntryWithBlankValues">
            <summary>
            Boolean Value with Blank State 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.BooleanEntryWithBlankValues.True">
            <summary>
            Logical True.
            <para>When the item is serialized out as xml, its value is "True".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.BooleanEntryWithBlankValues.T">
            <summary>
            Logical True.
            <para>When the item is serialized out as xml, its value is "t".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.BooleanEntryWithBlankValues.False">
            <summary>
            Logical False.
            <para>When the item is serialized out as xml, its value is "False".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.BooleanEntryWithBlankValues.F">
            <summary>
            Logical False.
            <para>When the item is serialized out as xml, its value is "f".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Spreadsheet.BooleanEntryWithBlankValues.Empty">
            <summary>
            Blank - Default Value.
            <para>When the item is serialized out as xml, its value is "".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults">
             <summary>
             <para>New Shape Defaults.</para>
             <para> When the object is serialized out as xml, its qualified name is o:shapedefaults.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Vml.Fill &lt;v:fill></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.ImageData &lt;v:imagedata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Stroke &lt;v:stroke></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.TextBox &lt;v:textbox></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Shadow &lt;v:shadow></description></item>
            <item><description>Skew &lt;o:skew></description></item>
            <item><description>Extrusion &lt;o:extrusion></description></item>
            <item><description>Callout &lt;o:callout></description></item>
            <item><description>Lock &lt;o:lock></description></item>
            <item><description>ColorMostRecentlyUsed &lt;o:colormru></description></item>
            <item><description>ColorMenu &lt;o:colormenu></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.MaxShapeId">
            <summary>
            <para> Shape ID Optional Storage.</para>
            <para>Represents the following attribute in the schema: spidmax </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.Style">
            <summary>
            <para> style.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.BeFilled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: fill </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.FillColor">
            <summary>
            <para> Default Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.IsStroke">
            <summary>
            <para> Shape Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: stroke </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.StrokeColor">
            <summary>
            <para> Shape Stroke Color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.AllowInCell">
             <summary>
             <para> Allow in Table Cell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.AllowOverlap">
             <summary>
             <para> allowoverlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.InsetMode">
             <summary>
             <para> insetmode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.#ctor">
            <summary>
            Initializes a new instance of the ShapeDefaults class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ShapeDefaults class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ShapeDefaults class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ShapeDefaults class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.Fill">
            <summary>
            <para> Fill.</para>
            <para> Represents the following element tag in the schema: v:fill </para>
            </summary>
            <remark>
            xmlns:v = urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.ImageData">
            <summary>
            <para> ImageData.</para>
            <para> Represents the following element tag in the schema: v:imagedata </para>
            </summary>
            <remark>
            xmlns:v = urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.Stroke">
            <summary>
            <para> Stroke.</para>
            <para> Represents the following element tag in the schema: v:stroke </para>
            </summary>
            <remark>
            xmlns:v = urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.TextBox">
            <summary>
            <para> TextBox.</para>
            <para> Represents the following element tag in the schema: v:textbox </para>
            </summary>
            <remark>
            xmlns:v = urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.Shadow">
            <summary>
            <para> Shadow.</para>
            <para> Represents the following element tag in the schema: v:shadow </para>
            </summary>
            <remark>
            xmlns:v = urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.Skew">
            <summary>
            <para> Skew.</para>
            <para> Represents the following element tag in the schema: o:skew </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.Extrusion">
            <summary>
            <para> Extrusion.</para>
            <para> Represents the following element tag in the schema: o:extrusion </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.Callout">
            <summary>
            <para> Callout.</para>
            <para> Represents the following element tag in the schema: o:callout </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.Lock">
            <summary>
            <para> Shape Protections.</para>
            <para> Represents the following element tag in the schema: o:lock </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.ColorMostRecentlyUsed">
            <summary>
            <para> Most Recently Used Colors.</para>
            <para> Represents the following element tag in the schema: o:colormru </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.ColorMenu">
            <summary>
            <para> UI Default Colors.</para>
            <para> Represents the following element tag in the schema: o:colormenu </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeDefaults.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ShapeLayout">
             <summary>
             <para>Shape Layout Properties.</para>
             <para> When the object is serialized out as xml, its qualified name is o:shapelayout.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ShapeIdMap &lt;o:idmap></description></item>
            <item><description>RegroupTable &lt;o:regrouptable></description></item>
            <item><description>Rules &lt;o:rules></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.#ctor">
            <summary>
            Initializes a new instance of the ShapeLayout class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ShapeLayout class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ShapeLayout class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ShapeLayout class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.ShapeIdMap">
            <summary>
            <para> Shape ID Map.</para>
            <para> Represents the following element tag in the schema: o:idmap </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.RegroupTable">
            <summary>
            <para> Shape Grouping History.</para>
            <para> Represents the following element tag in the schema: o:regrouptable </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.Rules">
            <summary>
            <para> Rule Set.</para>
            <para> Represents the following element tag in the schema: o:rules </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeLayout.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.SignatureLine">
            <summary>
            <para>Digital Signature Line.</para>
            <para> When the object is serialized out as xml, its qualified name is o:signatureline.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.SignatureLine.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.IsSignatureLine">
            <summary>
            <para> Signature Line Flag.</para>
            <para>Represents the following attribute in the schema: issignatureline </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.Id">
            <summary>
            <para> Unique ID.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.ProviderId">
            <summary>
            <para> Signature Provider ID.</para>
            <para>Represents the following attribute in the schema: provid </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.SigningInstructionsSet">
            <summary>
            <para> Use Signing Instructions Flag.</para>
            <para>Represents the following attribute in the schema: signinginstructionsset </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.AllowComments">
            <summary>
            <para> User-specified Comments Flag.</para>
            <para>Represents the following attribute in the schema: allowcomments </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.ShowSignDate">
            <summary>
            <para> Show Signed Date Flag.</para>
            <para>Represents the following attribute in the schema: showsigndate </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.SuggestedSigner">
             <summary>
             <para> Suggested Signer Line 1.</para>
             <para>Represents the following attribute in the schema: o:suggestedsigner </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.SuggestedSigner2">
             <summary>
             <para> Suggested Signer Line 2.</para>
             <para>Represents the following attribute in the schema: o:suggestedsigner2 </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.SuggestedSignerEmail">
             <summary>
             <para> Suggested Signer E-mail Address.</para>
             <para>Represents the following attribute in the schema: o:suggestedsigneremail </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.SigningInstructions">
            <summary>
            <para> Instructions for Signing.</para>
            <para>Represents the following attribute in the schema: signinginstructions </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.AdditionalXml">
            <summary>
            <para> Additional Signature Information.</para>
            <para>Represents the following attribute in the schema: addlxml </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.SignatureLine.SignatureProviderUrl">
            <summary>
            <para> Signature Provider Download URL.</para>
            <para>Represents the following attribute in the schema: sigprovurl </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.SignatureLine.#ctor">
            <summary>
            Initializes a new instance of the SignatureLine class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.SignatureLine.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Ink">
            <summary>
            <para>Ink.</para>
            <para> When the object is serialized out as xml, its qualified name is o:ink.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Ink.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Ink.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Ink.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Ink.InkData">
            <summary>
            <para> Ink Data.</para>
            <para>Represents the following attribute in the schema: i </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Ink.AnnotationFlag">
            <summary>
            <para> Annotation Flag.</para>
            <para>Represents the following attribute in the schema: annotation </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Ink.#ctor">
            <summary>
            Initializes a new instance of the Ink class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Ink.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Diagram">
             <summary>
             <para>VML Diagram.</para>
             <para> When the object is serialized out as xml, its qualified name is o:diagram.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>RelationTable &lt;o:relationtable></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Diagram.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.Style">
            <summary>
            <para> Diagram Style Options.</para>
            <para>Represents the following attribute in the schema: dgmstyle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.AutoFormat">
            <summary>
            <para> Diagram Automatic Format.</para>
            <para>Represents the following attribute in the schema: autoformat </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.Reverse">
            <summary>
            <para> Diagram Reverse Direction.</para>
            <para>Represents the following attribute in the schema: reverse </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.AutoLayout">
            <summary>
            <para> Diagram Automatic Layout.</para>
            <para>Represents the following attribute in the schema: autolayout </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.ScaleX">
            <summary>
            <para> Diagram Layout X Scale.</para>
            <para>Represents the following attribute in the schema: dgmscalex </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.ScaleY">
            <summary>
            <para> Diagram Layout Y Scale.</para>
            <para>Represents the following attribute in the schema: dgmscaley </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.FontSize">
            <summary>
            <para> Diagram Font Size.</para>
            <para>Represents the following attribute in the schema: dgmfontsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.ConstrainBounds">
            <summary>
            <para> Diagram Layout Extents.</para>
            <para>Represents the following attribute in the schema: constrainbounds </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.BaseTextScale">
            <summary>
            <para> Diagram Base Font Size.</para>
            <para>Represents the following attribute in the schema: dgmbasetextscale </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Diagram.#ctor">
            <summary>
            Initializes a new instance of the Diagram class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Diagram.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Diagram class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Diagram.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Diagram class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Diagram.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Diagram class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Diagram.RelationTable">
            <summary>
            <para> Diagram Relationship Table.</para>
            <para> Represents the following element tag in the schema: o:relationtable </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Diagram.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Skew">
            <summary>
            <para>Skew Transform.</para>
            <para> When the object is serialized out as xml, its qualified name is o:skew.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Skew.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Skew.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Skew.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Skew.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Skew.Id">
            <summary>
            <para> Skew ID.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Skew.On">
            <summary>
            <para> Skew Toggle.</para>
            <para>Represents the following attribute in the schema: on </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Skew.Offset">
            <summary>
            <para> Skew Offset.</para>
            <para>Represents the following attribute in the schema: offset </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Skew.Origin">
            <summary>
            <para> Skew Origin.</para>
            <para>Represents the following attribute in the schema: origin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Skew.Matrix">
            <summary>
            <para> Skew Perspective Matrix.</para>
            <para>Represents the following attribute in the schema: matrix </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Skew.#ctor">
            <summary>
            Initializes a new instance of the Skew class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Skew.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Extrusion">
            <summary>
            <para>3D Extrusion.</para>
            <para> When the object is serialized out as xml, its qualified name is o:extrusion.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Extrusion.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.On">
            <summary>
            <para> Extrusion Toggle.</para>
            <para>Represents the following attribute in the schema: on </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Type">
            <summary>
            <para> Extrusion Type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Render">
            <summary>
            <para> Extrusion Render Mode.</para>
            <para>Represents the following attribute in the schema: render </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.ViewpointOrigin">
            <summary>
            <para> Extrusion Viewpoint Origin.</para>
            <para>Represents the following attribute in the schema: viewpointorigin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Viewpoint">
            <summary>
            <para> Extrusion Viewpoint.</para>
            <para>Represents the following attribute in the schema: viewpoint </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.SkewAngle">
            <summary>
            <para> Extrusion Skew Angle.</para>
            <para>Represents the following attribute in the schema: skewangle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.SkewAmount">
            <summary>
            <para> Extrusion Skew.</para>
            <para>Represents the following attribute in the schema: skewamt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.ForceDepth">
            <summary>
            <para> Forward Extrusion.</para>
            <para>Represents the following attribute in the schema: foredepth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.BackDepth">
            <summary>
            <para> Backward Extrusion Depth.</para>
            <para>Represents the following attribute in the schema: backdepth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Orientation">
            <summary>
            <para> Rotation Axis.</para>
            <para>Represents the following attribute in the schema: orientation </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.OrientationAngle">
            <summary>
            <para> Rotation Around Axis.</para>
            <para>Represents the following attribute in the schema: orientationangle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.LockRotationCenter">
            <summary>
            <para> Rotation Toggle.</para>
            <para>Represents the following attribute in the schema: lockrotationcenter </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.AutoRotationCenter">
            <summary>
            <para> Center of Rotation Toggle.</para>
            <para>Represents the following attribute in the schema: autorotationcenter </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.RotationCenter">
            <summary>
            <para> Rotation Center.</para>
            <para>Represents the following attribute in the schema: rotationcenter </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.RotationAngle">
            <summary>
            <para> X-Y Rotation Angle.</para>
            <para>Represents the following attribute in the schema: rotationangle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Color">
            <summary>
            <para> Extrusion Color.</para>
            <para>Represents the following attribute in the schema: color </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Shininess">
            <summary>
            <para> Shininess.</para>
            <para>Represents the following attribute in the schema: shininess </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Specularity">
            <summary>
            <para> Specularity.</para>
            <para>Represents the following attribute in the schema: specularity </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Diffusity">
            <summary>
            <para> Diffuse Reflection.</para>
            <para>Represents the following attribute in the schema: diffusity </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Metal">
            <summary>
            <para> Metallic Surface Toggle.</para>
            <para>Represents the following attribute in the schema: metal </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Edge">
            <summary>
            <para> Simulated Bevel.</para>
            <para>Represents the following attribute in the schema: edge </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Facet">
            <summary>
            <para> Faceting Quality.</para>
            <para>Represents the following attribute in the schema: facet </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.LightFace">
            <summary>
            <para> Shape Face Lighting Toggle.</para>
            <para>Represents the following attribute in the schema: lightface </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.Brightness">
            <summary>
            <para> Brightness.</para>
            <para>Represents the following attribute in the schema: brightness </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.LightPosition">
            <summary>
            <para> Primary Light Position.</para>
            <para>Represents the following attribute in the schema: lightposition </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.LightLevel">
            <summary>
            <para> Primary Light Intensity.</para>
            <para>Represents the following attribute in the schema: lightlevel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.LightHarsh">
            <summary>
            <para> Primary Light Harshness Toggle.</para>
            <para>Represents the following attribute in the schema: lightharsh </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.LightPosition2">
            <summary>
            <para> Secondary Light Position.</para>
            <para>Represents the following attribute in the schema: lightposition2 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.LightLevel2">
            <summary>
            <para> Secondary Light Intensity.</para>
            <para>Represents the following attribute in the schema: lightlevel2 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Extrusion.LightHarsh2">
            <summary>
            <para> Secondary Light Harshness Toggle.</para>
            <para>Represents the following attribute in the schema: lightharsh2 </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Extrusion.#ctor">
            <summary>
            Initializes a new instance of the Extrusion class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Extrusion.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Callout">
            <summary>
            <para>Defines the Callout Class.</para>
            <para> When the object is serialized out as xml, its qualified name is o:callout.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Callout.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.On">
            <summary>
            <para> Callout toggle.</para>
            <para>Represents the following attribute in the schema: on </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.Type">
            <summary>
            <para> Callout type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.Gap">
            <summary>
            <para> Callout gap.</para>
            <para>Represents the following attribute in the schema: gap </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.Angle">
            <summary>
            <para> Callout angle.</para>
            <para>Represents the following attribute in the schema: angle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.DropAuto">
            <summary>
            <para> Callout automatic drop toggle.</para>
            <para>Represents the following attribute in the schema: dropauto </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.Drop">
            <summary>
            <para> Callout drop position.</para>
            <para>Represents the following attribute in the schema: drop </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.Distance">
            <summary>
            <para> Callout drop distance.</para>
            <para>Represents the following attribute in the schema: distance </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.LengthSpecified">
            <summary>
            <para> Callout length toggle.</para>
            <para>Represents the following attribute in the schema: lengthspecified </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.Length">
            <summary>
            <para> Callout length.</para>
            <para>Represents the following attribute in the schema: length </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.AccentBar">
            <summary>
            <para> Callout accent bar toggle.</para>
            <para>Represents the following attribute in the schema: accentbar </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.TextBorder">
            <summary>
            <para> Callout text border toggle.</para>
            <para>Represents the following attribute in the schema: textborder </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.MinusX">
            <summary>
            <para> Callout flip x.</para>
            <para>Represents the following attribute in the schema: minusx </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Callout.MinusY">
            <summary>
            <para> Callout flip y.</para>
            <para>Represents the following attribute in the schema: minusy </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Callout.#ctor">
            <summary>
            Initializes a new instance of the Callout class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Callout.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Lock">
            <summary>
            <para>Defines the Lock Class.</para>
            <para> When the object is serialized out as xml, its qualified name is o:lock.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Lock.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.Position">
            <summary>
            <para> Position Lock.</para>
            <para>Represents the following attribute in the schema: position </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.Selection">
            <summary>
            <para> Selection Lock.</para>
            <para>Represents the following attribute in the schema: selection </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.Grouping">
            <summary>
            <para> Grouping Lock.</para>
            <para>Represents the following attribute in the schema: grouping </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.Ungrouping">
            <summary>
            <para> Ungrouping Lock.</para>
            <para>Represents the following attribute in the schema: ungrouping </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.Rotation">
            <summary>
            <para> Rotation Lock.</para>
            <para>Represents the following attribute in the schema: rotation </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.Cropping">
            <summary>
            <para> Cropping Lock.</para>
            <para>Represents the following attribute in the schema: cropping </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.Verticies">
            <summary>
            <para> Vertices Lock.</para>
            <para>Represents the following attribute in the schema: verticies </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.AdjustHandles">
            <summary>
            <para> Handles Lock.</para>
            <para>Represents the following attribute in the schema: adjusthandles </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.TextLock">
            <summary>
            <para> Text Lock.</para>
            <para>Represents the following attribute in the schema: text </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.AspectRatio">
            <summary>
            <para> Aspect Ratio Lock.</para>
            <para>Represents the following attribute in the schema: aspectratio </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Lock.ShapeType">
            <summary>
            <para> AutoShape Type Lock.</para>
            <para>Represents the following attribute in the schema: shapetype </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Lock.#ctor">
            <summary>
            Initializes a new instance of the Lock class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Lock.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.OleObject">
             <summary>
             <para>Embedded OLE Object.</para>
             <para> When the object is serialized out as xml, its qualified name is o:OLEObject.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>LinkType &lt;o:LinkType></description></item>
            <item><description>LockedField &lt;o:LockedField></description></item>
            <item><description>FieldCodes &lt;o:FieldCodes></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.OleObject.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.Type">
            <summary>
            <para> OLE Object Type.</para>
            <para>Represents the following attribute in the schema: Type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.ProgId">
            <summary>
            <para> OLE Object Application.</para>
            <para>Represents the following attribute in the schema: ProgID </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.ShapeId">
            <summary>
            <para> OLE Object Shape.</para>
            <para>Represents the following attribute in the schema: ShapeID </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.DrawAspect">
            <summary>
            <para> OLE Object Representation.</para>
            <para>Represents the following attribute in the schema: DrawAspect </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.ObjectId">
            <summary>
            <para> OLE Object Unique ID.</para>
            <para>Represents the following attribute in the schema: ObjectID </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.Id">
             <summary>
             <para> Relationship.</para>
             <para>Represents the following attribute in the schema: r:id </para>
             </summary>
            <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.UpdateMode">
            <summary>
            <para> OLE Update Mode.</para>
            <para>Represents the following attribute in the schema: UpdateMode </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.OleObject.#ctor">
            <summary>
            Initializes a new instance of the OleObject class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.OleObject.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the OleObject class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.OleObject.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the OleObject class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.OleObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OleObject class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.LinkType">
            <summary>
            <para> Embedded Object Alternate Image Request.</para>
            <para> Represents the following element tag in the schema: o:LinkType </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.LockedField">
            <summary>
            <para> Embedded Object Cannot Be Refreshed.</para>
            <para> Represents the following element tag in the schema: o:LockedField </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.OleObject.FieldCodes">
            <summary>
            <para> WordprocessingML Field Switches.</para>
            <para> Represents the following element tag in the schema: o:FieldCodes </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.OleObject.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Complex">
            <summary>
            <para>Complex.</para>
            <para> When the object is serialized out as xml, its qualified name is o:complex.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Complex.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Complex.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Complex.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Complex.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Complex.#ctor">
            <summary>
            Initializes a new instance of the Complex class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Complex.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.LeftStroke">
            <summary>
            <para>Text Box Left Stroke.</para>
            <para> When the object is serialized out as xml, its qualified name is o:left.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.LeftStroke.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.LeftStroke.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.LeftStroke.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.LeftStroke.#ctor">
            <summary>
            Initializes a new instance of the LeftStroke class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.LeftStroke.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.TopStroke">
            <summary>
            <para>Text Box Top Stroke.</para>
            <para> When the object is serialized out as xml, its qualified name is o:top.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.TopStroke.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.TopStroke.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.TopStroke.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.TopStroke.#ctor">
            <summary>
            Initializes a new instance of the TopStroke class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.TopStroke.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.RightStroke">
            <summary>
            <para>Text Box Right Stroke.</para>
            <para> When the object is serialized out as xml, its qualified name is o:right.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.RightStroke.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.RightStroke.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RightStroke.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RightStroke.#ctor">
            <summary>
            Initializes a new instance of the RightStroke class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RightStroke.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.BottomStroke">
            <summary>
            <para>Text Box Bottom Stroke.</para>
            <para> When the object is serialized out as xml, its qualified name is o:bottom.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.BottomStroke.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.BottomStroke.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.BottomStroke.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.BottomStroke.#ctor">
            <summary>
            Initializes a new instance of the BottomStroke class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.BottomStroke.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ColumnStroke">
            <summary>
            <para>Text Box Interior Stroke.</para>
            <para> When the object is serialized out as xml, its qualified name is o:column.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColumnStroke.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColumnStroke.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ColumnStroke.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ColumnStroke.#ctor">
            <summary>
            Initializes a new instance of the ColumnStroke class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ColumnStroke.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.StrokeChildType">
            <summary>
            Defines the StrokeChildType class.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.On">
            <summary>
            <para> Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: on </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.Weight">
            <summary>
            <para> Stroke Weight.</para>
            <para>Represents the following attribute in the schema: weight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.Color">
            <summary>
            <para> Stroke Color.</para>
            <para>Represents the following attribute in the schema: color </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.Color2">
            <summary>
            <para> Stroke Alternate Pattern Color.</para>
            <para>Represents the following attribute in the schema: color2 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.Opacity">
            <summary>
            <para> Stroke Opacity.</para>
            <para>Represents the following attribute in the schema: opacity </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.LineStyle">
            <summary>
            <para> Stroke Line Style.</para>
            <para>Represents the following attribute in the schema: linestyle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.MiterLimit">
            <summary>
            <para> Miter Joint Limit.</para>
            <para>Represents the following attribute in the schema: miterlimit </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.JoinStyle">
            <summary>
            <para> Line End Join Style).</para>
            <para>Represents the following attribute in the schema: joinstyle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.EndCap">
            <summary>
            <para> Line End Cap.</para>
            <para>Represents the following attribute in the schema: endcap </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.DashStyle">
            <summary>
            <para> Stroke Dash Pattern.</para>
            <para>Represents the following attribute in the schema: dashstyle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.InsetPen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.FillType">
            <summary>
            <para> Stroke Image Style.</para>
            <para>Represents the following attribute in the schema: filltype </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.Source">
            <summary>
            <para> Stroke Image Location.</para>
            <para>Represents the following attribute in the schema: src </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.ImageAspect">
            <summary>
            <para> Stroke Image Aspect Ratio.</para>
            <para>Represents the following attribute in the schema: imageaspect </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.ImageSize">
            <summary>
            <para> Stroke Image Size.</para>
            <para>Represents the following attribute in the schema: imagesize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.ImageAlignShape">
            <summary>
            <para> Stoke Image Alignment.</para>
            <para>Represents the following attribute in the schema: imagealignshape </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.StartArrow">
            <summary>
            <para> Line Start Arrowhead.</para>
            <para>Represents the following attribute in the schema: startarrow </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.StartArrowWidth">
            <summary>
            <para> Line Start Arrowhead Width.</para>
            <para>Represents the following attribute in the schema: startarrowwidth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.StartArrowLength">
            <summary>
            <para> Line Start Arrowhead Length.</para>
            <para>Represents the following attribute in the schema: startarrowlength </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.EndArrow">
            <summary>
            <para> Line End Arrowhead.</para>
            <para>Represents the following attribute in the schema: endarrow </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.EndArrowWidth">
            <summary>
            <para> Line End Arrowhead Width.</para>
            <para>Represents the following attribute in the schema: endarrowwidth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.EndArrowLength">
            <summary>
            <para> Line End Arrowhead Length.</para>
            <para>Represents the following attribute in the schema: endarrowlength </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.Href">
             <summary>
             <para> Original Image Reference.</para>
             <para>Represents the following attribute in the schema: o:href </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.AlternateImageReference">
             <summary>
             <para> Alternate Image Reference.</para>
             <para>Represents the following attribute in the schema: o:althref </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.Title">
             <summary>
             <para> Stroke Title.</para>
             <para>Represents the following attribute in the schema: o:title </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.StrokeChildType.#ctor">
            <summary>
            Initializes a new instance of the StrokeChildType class.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ClipPath">
            <summary>
            <para>Shape Clipping Path.</para>
            <para> When the object is serialized out as xml, its qualified name is o:clippath.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ClipPath.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ClipPath.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ClipPath.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ClipPath.Value">
             <summary>
             <para> Path Definition.</para>
             <para>Represents the following attribute in the schema: o:v </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ClipPath.#ctor">
            <summary>
            Initializes a new instance of the ClipPath class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ClipPath.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.FillExtendedProperties">
            <summary>
            <para>Shape Fill Extended Properties.</para>
            <para> When the object is serialized out as xml, its qualified name is o:fill.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.FillExtendedProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.FillExtendedProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.FillExtendedProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.FillExtendedProperties.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.FillExtendedProperties.Type">
            <summary>
            <para> Fill Type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.FillExtendedProperties.#ctor">
            <summary>
            Initializes a new instance of the FillExtendedProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.FillExtendedProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ShapeIdMap">
            <summary>
            <para>Shape ID Map.</para>
            <para> When the object is serialized out as xml, its qualified name is o:idmap.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeIdMap.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeIdMap.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeIdMap.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeIdMap.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ShapeIdMap.Data">
            <summary>
            <para> Shape IDs.</para>
            <para>Represents the following attribute in the schema: data </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeIdMap.#ctor">
            <summary>
            Initializes a new instance of the ShapeIdMap class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ShapeIdMap.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.RegroupTable">
             <summary>
             <para>Shape Grouping History.</para>
             <para> When the object is serialized out as xml, its qualified name is o:regrouptable.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Entry &lt;o:entry></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.RegroupTable.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.RegroupTable.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RegroupTable.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.RegroupTable.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RegroupTable.#ctor">
            <summary>
            Initializes a new instance of the RegroupTable class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RegroupTable.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the RegroupTable class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RegroupTable.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the RegroupTable class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RegroupTable.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RegroupTable class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RegroupTable.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Rules">
             <summary>
             <para>Rule Set.</para>
             <para> When the object is serialized out as xml, its qualified name is o:rules.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Rule &lt;o:r></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Rules.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Rules.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rules.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Rules.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rules.#ctor">
            <summary>
            Initializes a new instance of the Rules class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rules.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Rules class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rules.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Rules class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rules.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Rules class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rules.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Entry">
            <summary>
            <para>Regroup Entry.</para>
            <para> When the object is serialized out as xml, its qualified name is o:entry.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Entry.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Entry.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Entry.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Entry.New">
            <summary>
            <para> New Group ID.</para>
            <para>Represents the following attribute in the schema: new </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Entry.Old">
            <summary>
            <para> Old Group ID.</para>
            <para>Represents the following attribute in the schema: old </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Entry.#ctor">
            <summary>
            Initializes a new instance of the Entry class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Entry.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Rule">
             <summary>
             <para>Rule.</para>
             <para> When the object is serialized out as xml, its qualified name is o:r.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Proxy &lt;o:proxy></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Rule.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Rule.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rule.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Rule.Id">
            <summary>
            <para> Rule ID.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Rule.Type">
            <summary>
            <para> Rule Type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Rule.How">
            <summary>
            <para> Alignment Rule Type.</para>
            <para>Represents the following attribute in the schema: how </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Rule.ShapeReference">
            <summary>
            <para> Rule Shape Reference.</para>
            <para>Represents the following attribute in the schema: idref </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rule.#ctor">
            <summary>
            Initializes a new instance of the Rule class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rule.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Rule class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rule.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Rule class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Rule class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Rule.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.RelationTable">
             <summary>
             <para>Diagram Relationship Table.</para>
             <para> When the object is serialized out as xml, its qualified name is o:relationtable.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Relation &lt;o:rel></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.RelationTable.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.RelationTable.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RelationTable.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.RelationTable.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RelationTable.#ctor">
            <summary>
            Initializes a new instance of the RelationTable class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RelationTable.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the RelationTable class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RelationTable.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the RelationTable class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RelationTable.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RelationTable class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.RelationTable.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Relation">
            <summary>
            <para>Diagram Relationship.</para>
            <para> When the object is serialized out as xml, its qualified name is o:rel.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Relation.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Relation.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Relation.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Relation.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Relation.SourceId">
            <summary>
            <para> Diagram Relationship Source Shape.</para>
            <para>Represents the following attribute in the schema: idsrc </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Relation.DestinationId">
            <summary>
            <para> Diagram Relationship Destination Shape.</para>
            <para>Represents the following attribute in the schema: iddest </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Relation.CenterShapeId">
            <summary>
            <para> Diagram Relationship Center Shape.</para>
            <para>Represents the following attribute in the schema: idcntr </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Relation.#ctor">
            <summary>
            Initializes a new instance of the Relation class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Relation.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.LinkType">
            <summary>
            <para>Embedded Object Alternate Image Request.</para>
            <para> When the object is serialized out as xml, its qualified name is o:LinkType.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.LinkType.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.LinkType.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.LinkType.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.LinkType.#ctor">
            <summary>
            Initializes a new instance of the LinkType class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.LinkType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LinkType class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.LinkType.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.LockedField">
            <summary>
            <para>Embedded Object Cannot Be Refreshed.</para>
            <para> When the object is serialized out as xml, its qualified name is o:LockedField.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.LockedField.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.LockedField.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.LockedField.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.LockedField.#ctor">
            <summary>
            Initializes a new instance of the LockedField class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.LockedField.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LockedField class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.LockedField.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.FieldCodes">
            <summary>
            <para>WordprocessingML Field Switches.</para>
            <para> When the object is serialized out as xml, its qualified name is o:FieldCodes.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.FieldCodes.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.FieldCodes.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.FieldCodes.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.FieldCodes.#ctor">
            <summary>
            Initializes a new instance of the FieldCodes class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.FieldCodes.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FieldCodes class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.FieldCodes.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.Proxy">
            <summary>
            <para>Shape Reference.</para>
            <para> When the object is serialized out as xml, its qualified name is o:proxy.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Proxy.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Proxy.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Proxy.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Proxy.Start">
            <summary>
            <para> Start Point Connection Flag.</para>
            <para>Represents the following attribute in the schema: start </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Proxy.End">
            <summary>
            <para> End Point Connection Flag.</para>
            <para>Represents the following attribute in the schema: end </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Proxy.ShapeReference">
            <summary>
            <para> Proxy Shape Reference.</para>
            <para>Represents the following attribute in the schema: idref </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.Proxy.ConnectionLocation">
            <summary>
            <para> Connection Location.</para>
            <para>Represents the following attribute in the schema: connectloc </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Proxy.#ctor">
            <summary>
            Initializes a new instance of the Proxy class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.Proxy.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ColorMostRecentlyUsed">
            <summary>
            <para>Most Recently Used Colors.</para>
            <para> When the object is serialized out as xml, its qualified name is o:colormru.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColorMostRecentlyUsed.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColorMostRecentlyUsed.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ColorMostRecentlyUsed.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColorMostRecentlyUsed.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColorMostRecentlyUsed.Colors">
            <summary>
            <para> Recent colors.</para>
            <para>Represents the following attribute in the schema: colors </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ColorMostRecentlyUsed.#ctor">
            <summary>
            Initializes a new instance of the ColorMostRecentlyUsed class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ColorMostRecentlyUsed.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ColorMenu">
            <summary>
            <para>UI Default Colors.</para>
            <para> When the object is serialized out as xml, its qualified name is o:colormenu.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColorMenu.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColorMenu.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ColorMenu.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColorMenu.Extension">
             <summary>
             <para> VML Extension Handling Behavior.</para>
             <para>Represents the following attribute in the schema: v:ext </para>
             </summary>
            <remark> xmlns:v=urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColorMenu.StrokeColor">
            <summary>
            <para> Default stroke color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColorMenu.FillColor">
            <summary>
            <para> Default fill color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColorMenu.ShadowColor">
            <summary>
            <para> Default shadow color.</para>
            <para>Represents the following attribute in the schema: shadowcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Office.ColorMenu.ExtrusionColor">
            <summary>
            <para> Default extrusion color.</para>
            <para>Represents the following attribute in the schema: extrusioncolor </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ColorMenu.#ctor">
            <summary>
            Initializes a new instance of the ColorMenu class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Office.ColorMenu.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.AlignmentValues">
            <summary>
            Alignment Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AlignmentValues.Top">
            <summary>
            Top Alignment.
            <para>When the item is serialized out as xml, its value is "top".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AlignmentValues.Middle">
            <summary>
            Middle Alignment.
            <para>When the item is serialized out as xml, its value is "middle".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AlignmentValues.Bottom">
            <summary>
            Bottom Alignment.
            <para>When the item is serialized out as xml, its value is "bottom".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AlignmentValues.Left">
            <summary>
            Left Alignment.
            <para>When the item is serialized out as xml, its value is "left".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AlignmentValues.Center">
            <summary>
            Center Alignment.
            <para>When the item is serialized out as xml, its value is "center".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AlignmentValues.Right">
            <summary>
            Right Alignment.
            <para>When the item is serialized out as xml, its value is "right".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ScreenSizeValues">
            <summary>
            Screen Sizes Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ScreenSizeValues.Sz544x376">
            <summary>
            544x376 pixels.
            <para>When the item is serialized out as xml, its value is "544,376".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ScreenSizeValues.Sz640x480">
            <summary>
            640x480 pixels.
            <para>When the item is serialized out as xml, its value is "640,480".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ScreenSizeValues.Sz720x512">
            <summary>
            720x512 pixels.
            <para>When the item is serialized out as xml, its value is "720,512".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ScreenSizeValues.Sz800x600">
            <summary>
            800x600 pixels.
            <para>When the item is serialized out as xml, its value is "800,600".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ScreenSizeValues.Sz1024x768">
            <summary>
            1024x768 pixels.
            <para>When the item is serialized out as xml, its value is "1024,768".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ScreenSizeValues.Sz1152x862">
            <summary>
            1152x862 pixels.
            <para>When the item is serialized out as xml, its value is "1152,862".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.InsetMarginValues">
            <summary>
            Inset Margin Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.InsetMarginValues.Auto">
            <summary>
            Automatic Margins.
            <para>When the item is serialized out as xml, its value is "auto".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.InsetMarginValues.Custom">
            <summary>
            Custom Margins.
            <para>When the item is serialized out as xml, its value is "custom".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ColorModeValues">
            <summary>
            Extrusion Color Types 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ColorModeValues.Auto">
            <summary>
            Use Shape Fill Color.
            <para>When the item is serialized out as xml, its value is "auto".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ColorModeValues.Custom">
            <summary>
            Use Custom Color.
            <para>When the item is serialized out as xml, its value is "custom".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ExtrusionValues">
            <summary>
            Extrusion Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ExtrusionValues.Perspective">
            <summary>
            Perspective Projection.
            <para>When the item is serialized out as xml, its value is "perspective".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ExtrusionValues.Parallel">
            <summary>
            Parallel Projection.
            <para>When the item is serialized out as xml, its value is "parallel".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ExtrusionRenderValues">
            <summary>
            Extrusion Rendering Types 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ExtrusionRenderValues.Solid">
            <summary>
            Solid.
            <para>When the item is serialized out as xml, its value is "solid".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ExtrusionRenderValues.WireFrame">
            <summary>
            Wireframe.
            <para>When the item is serialized out as xml, its value is "wireFrame".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ExtrusionRenderValues.BoundingCube">
            <summary>
            Bounding Cube.
            <para>When the item is serialized out as xml, its value is "boundingCube".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ExtrusionPlaneValues">
            <summary>
            Extrusion Planes 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ExtrusionPlaneValues.XY">
            <summary>
            XY Plane.
            <para>When the item is serialized out as xml, its value is "XY".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ExtrusionPlaneValues.ZX">
            <summary>
            ZX Plane.
            <para>When the item is serialized out as xml, its value is "ZX".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ExtrusionPlaneValues.YZ">
            <summary>
            YZ Plane.
            <para>When the item is serialized out as xml, its value is "YZ".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.AngleValues">
            <summary>
            Callout Angles 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AngleValues.Any">
            <summary>
            Any Angle.
            <para>When the item is serialized out as xml, its value is "any".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AngleValues.Degree30">
            <summary>
            30 degrees.
            <para>When the item is serialized out as xml, its value is "30".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AngleValues.Degree45">
            <summary>
            45 degrees.
            <para>When the item is serialized out as xml, its value is "45".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AngleValues.Degree60">
            <summary>
            60 degrees.
            <para>When the item is serialized out as xml, its value is "60".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AngleValues.Degree90">
            <summary>
            90 degrees.
            <para>When the item is serialized out as xml, its value is "90".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.AngleValues.Auto">
            <summary>
            Automatic Angle.
            <para>When the item is serialized out as xml, its value is "auto".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.CalloutPlacementValues">
            <summary>
            Callout Placement 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.CalloutPlacementValues.Top">
            <summary>
            Top placement.
            <para>When the item is serialized out as xml, its value is "top".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.CalloutPlacementValues.Center">
            <summary>
            Center placement.
            <para>When the item is serialized out as xml, its value is "center".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.CalloutPlacementValues.Bottom">
            <summary>
            Bottom placement.
            <para>When the item is serialized out as xml, its value is "bottom".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.CalloutPlacementValues.User">
            <summary>
            User-defined placement.
            <para>When the item is serialized out as xml, its value is "user".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ConnectorValues">
            <summary>
            Connector Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ConnectorValues.None">
            <summary>
            No Connector.
            <para>When the item is serialized out as xml, its value is "none".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ConnectorValues.Straight">
            <summary>
            Straight Connector.
            <para>When the item is serialized out as xml, its value is "straight".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ConnectorValues.Elbow">
            <summary>
            Elbow Connector.
            <para>When the item is serialized out as xml, its value is "elbow".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ConnectorValues.Curved">
            <summary>
            Curved Connector.
            <para>When the item is serialized out as xml, its value is "curved".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.HorizontalRuleAlignmentValues">
            <summary>
            Alignment Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.HorizontalRuleAlignmentValues.Left">
            <summary>
            Left Alignment.
            <para>When the item is serialized out as xml, its value is "left".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.HorizontalRuleAlignmentValues.Right">
            <summary>
            Right Alignment.
            <para>When the item is serialized out as xml, its value is "right".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.HorizontalRuleAlignmentValues.Center">
            <summary>
            Center Alignment.
            <para>When the item is serialized out as xml, its value is "center".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.ConnectValues">
            <summary>
            Connection Locations Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ConnectValues.None">
            <summary>
            No.
            <para>When the item is serialized out as xml, its value is "none".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ConnectValues.Rectangle">
            <summary>
            Four Connections.
            <para>When the item is serialized out as xml, its value is "rect".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ConnectValues.Segments">
            <summary>
            Edit Point Connections.
            <para>When the item is serialized out as xml, its value is "segments".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.ConnectValues.Custom">
            <summary>
            Custom Connections.
            <para>When the item is serialized out as xml, its value is "custom".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.OleLinkValues">
            <summary>
            Embedded Object Alternate Image Request Types 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.OleLinkValues.Picture">
            <summary>
            Other Image.
            <para>When the item is serialized out as xml, its value is "Picture".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.OleLinkValues.Bitmap">
            <summary>
            Bitmap Image.
            <para>When the item is serialized out as xml, its value is "Bitmap".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.OleLinkValues.EnhancedMetaFile">
            <summary>
            Enhanced Metafile Image.
            <para>When the item is serialized out as xml, its value is "EnhancedMetaFile".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.OleValues">
            <summary>
            OLE Connection Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.OleValues.Embed">
            <summary>
            Embedded Object.
            <para>When the item is serialized out as xml, its value is "Embed".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.OleValues.Link">
            <summary>
            Linked Object.
            <para>When the item is serialized out as xml, its value is "Link".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.OleDrawAspectValues">
            <summary>
            OLE Object Representations 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.OleDrawAspectValues.Content">
            <summary>
            Snapshot.
            <para>When the item is serialized out as xml, its value is "Content".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.OleDrawAspectValues.Icon">
            <summary>
            Icon.
            <para>When the item is serialized out as xml, its value is "Icon".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.OleUpdateModeValues">
            <summary>
            OLE Update Method Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.OleUpdateModeValues.Always">
            <summary>
            Server Application Update.
            <para>When the item is serialized out as xml, its value is "Always".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.OleUpdateModeValues.OnCall">
            <summary>
            User Update.
            <para>When the item is serialized out as xml, its value is "OnCall".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.FillValues">
            <summary>
            Shape Fill Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.FillValues.GradientCenter">
            <summary>
            Centered Radial Gradient.
            <para>When the item is serialized out as xml, its value is "gradientCenter".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.FillValues.Solid">
            <summary>
            Solid Fill.
            <para>When the item is serialized out as xml, its value is "solid".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.FillValues.Pattern">
            <summary>
            Image Pattern.
            <para>When the item is serialized out as xml, its value is "pattern".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.FillValues.Tile">
            <summary>
            Tiled Image.
            <para>When the item is serialized out as xml, its value is "tile".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.FillValues.Frame">
            <summary>
            Stretch Image to Fit.
            <para>When the item is serialized out as xml, its value is "frame".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.FillValues.GradientUnscaled">
            <summary>
            Unscaled Gradient.
            <para>When the item is serialized out as xml, its value is "gradientUnscaled".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.FillValues.GradientRadial">
            <summary>
            Radial Gradient.
            <para>When the item is serialized out as xml, its value is "gradientRadial".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.FillValues.Gradient">
            <summary>
            Linear Gradient.
            <para>When the item is serialized out as xml, its value is "gradient".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.FillValues.Background">
            <summary>
            Use Background Fill.
            <para>When the item is serialized out as xml, its value is "background".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.RuleValues">
            <summary>
            Rule Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.RuleValues.Arc">
            <summary>
            Arc Rule.
            <para>When the item is serialized out as xml, its value is "arc".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.RuleValues.Callout">
            <summary>
            Callout Rule.
            <para>When the item is serialized out as xml, its value is "callout".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.RuleValues.Connector">
            <summary>
            Connector Rule.
            <para>When the item is serialized out as xml, its value is "connector".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues">
            <summary>
            Black And White Modes 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues.Color">
            <summary>
            Color.
            <para>When the item is serialized out as xml, its value is "color".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues.Auto">
            <summary>
            Automatic.
            <para>When the item is serialized out as xml, its value is "auto".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues.GrayScale">
            <summary>
            Grayscale.
            <para>When the item is serialized out as xml, its value is "grayScale".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues.LightGrayScale">
            <summary>
            Light grayscale.
            <para>When the item is serialized out as xml, its value is "lightGrayScale".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues.InverseGray">
            <summary>
            Inverse Grayscale.
            <para>When the item is serialized out as xml, its value is "inverseGray".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues.GrayOutline">
            <summary>
            Gray Outlines.
            <para>When the item is serialized out as xml, its value is "grayOutline".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues.HighContrast">
            <summary>
            Black And White.
            <para>When the item is serialized out as xml, its value is "highContrast".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues.Black">
            <summary>
            Black.
            <para>When the item is serialized out as xml, its value is "black".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues.White">
            <summary>
            White.
            <para>When the item is serialized out as xml, its value is "white".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues.Undrawn">
            <summary>
            Do Not Show.
            <para>When the item is serialized out as xml, its value is "undrawn".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Office.BlackAndWhiteModeValues.BlackTextAndLines">
            <summary>
            Black Text And Lines.
            <para>When the item is serialized out as xml, its value is "blackTextAndLines".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Presentation.InkAnnotationFlag">
            <summary>
            <para>Ink Annotation Flag.</para>
            <para> When the object is serialized out as xml, its qualified name is pvml:iscomment.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Presentation.InkAnnotationFlag.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Presentation.InkAnnotationFlag.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Presentation.InkAnnotationFlag.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Presentation.InkAnnotationFlag.#ctor">
            <summary>
            Initializes a new instance of the InkAnnotationFlag class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Presentation.InkAnnotationFlag.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Presentation.TextData">
            <summary>
            <para>VML Diagram Text.</para>
            <para> When the object is serialized out as xml, its qualified name is pvml:textdata.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Presentation.TextData.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Presentation.TextData.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Presentation.TextData.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Presentation.TextData.Id">
            <summary>
            <para> Text Reference.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Presentation.TextData.#ctor">
            <summary>
            Initializes a new instance of the TextData class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Presentation.TextData.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder">
            <summary>
            <para>Top Border.</para>
            <para> When the object is serialized out as xml, its qualified name is w10:bordertop.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder.#ctor">
            <summary>
            Initializes a new instance of the TopBorder class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder">
            <summary>
            <para>Left Border.</para>
            <para> When the object is serialized out as xml, its qualified name is w10:borderleft.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder.#ctor">
            <summary>
            Initializes a new instance of the LeftBorder class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder">
            <summary>
            <para>Right Border.</para>
            <para> When the object is serialized out as xml, its qualified name is w10:borderright.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder.#ctor">
            <summary>
            Initializes a new instance of the RightBorder class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder">
            <summary>
            <para>Bottom Border.</para>
            <para> When the object is serialized out as xml, its qualified name is w10:borderbottom.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder.#ctor">
            <summary>
            Initializes a new instance of the BottomBorder class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderType">
            <summary>
            Defines the BorderType class.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderType.Type">
            <summary>
            <para> Border Style.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderType.Width">
            <summary>
            <para> Border Width.</para>
            <para>Represents the following attribute in the schema: width </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderType.Shadow">
            <summary>
            <para> Border shadow.</para>
            <para>Represents the following attribute in the schema: shadow </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderType.#ctor">
            <summary>
            Initializes a new instance of the BorderType class.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap">
            <summary>
            <para>Text Wrapping.</para>
            <para> When the object is serialized out as xml, its qualified name is w10:wrap.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.Type">
            <summary>
            <para> Wrapping type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.Side">
            <summary>
            <para> Wrapping side.</para>
            <para>Represents the following attribute in the schema: side </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.AnchorX">
            <summary>
            <para> Horizontal Positioning Base.</para>
            <para>Represents the following attribute in the schema: anchorx </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.AnchorY">
            <summary>
            <para> Vertical Positioning Base.</para>
            <para>Represents the following attribute in the schema: anchory </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.#ctor">
            <summary>
            Initializes a new instance of the TextWrap class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock">
            <summary>
            <para>Anchor Location Is Locked.</para>
            <para> When the object is serialized out as xml, its qualified name is w10:anchorlock.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock.#ctor">
            <summary>
            Initializes a new instance of the AnchorLock class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues">
            <summary>
            Border Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.None">
            <summary>
            No Border.
            <para>When the item is serialized out as xml, its value is "none".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.Single">
            <summary>
            Single Line Border.
            <para>When the item is serialized out as xml, its value is "single".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.Thick">
            <summary>
            Thick Line Border.
            <para>When the item is serialized out as xml, its value is "thick".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.Double">
            <summary>
            Double Line Border.
            <para>When the item is serialized out as xml, its value is "double".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.Hairline">
            <summary>
            Hairline Border.
            <para>When the item is serialized out as xml, its value is "hairline".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.Dot">
            <summary>
            Dotted Border.
            <para>When the item is serialized out as xml, its value is "dot".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.Dash">
            <summary>
            pecifies a line border consisting of a dashed line around the parent object..
            <para>When the item is serialized out as xml, its value is "dash".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.DotDash">
            <summary>
            Dot Dash Border.
            <para>When the item is serialized out as xml, its value is "dotDash".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.DashDotDot">
            <summary>
            Dash Dot Dot Border.
            <para>When the item is serialized out as xml, its value is "dashDotDot".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.Triple">
            <summary>
            Triple Line Border.
            <para>When the item is serialized out as xml, its value is "triple".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.ThinThickSmall">
            <summary>
            Thin Thick Small Gap Border.
            <para>When the item is serialized out as xml, its value is "thinThickSmall".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.ThickThinSmall">
            <summary>
            Small thick-thin lines border.
            <para>When the item is serialized out as xml, its value is "thickThinSmall".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.ThickBetweenThinSmall">
            <summary>
            Small thin-thick-thin Lines Border.
            <para>When the item is serialized out as xml, its value is "thickBetweenThinSmall".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.ThinThick">
            <summary>
            Thin Thick Line Border.
            <para>When the item is serialized out as xml, its value is "thinThick".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.ThickThin">
            <summary>
            Thick Thin Line Border.
            <para>When the item is serialized out as xml, its value is "thickThin".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.ThickBetweenThin">
            <summary>
            Thin-thick-thin Border.
            <para>When the item is serialized out as xml, its value is "thickBetweenThin".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.ThinThickLarge">
            <summary>
            Thin Thick Large Gap Border.
            <para>When the item is serialized out as xml, its value is "thinThickLarge".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.ThickThinLarge">
            <summary>
            Thick Thin Large Gap Border.
            <para>When the item is serialized out as xml, its value is "thickThinLarge".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.ThickBetweenThinLarge">
            <summary>
            Large thin-thick-thin Border.
            <para>When the item is serialized out as xml, its value is "thickBetweenThinLarge".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.Wave">
            <summary>
            Wavy Border.
            <para>When the item is serialized out as xml, its value is "wave".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.DoubleWave">
            <summary>
            Double Wavy Lines Border.
            <para>When the item is serialized out as xml, its value is "doubleWave".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.DashedSmall">
            <summary>
            Small Dash Border.
            <para>When the item is serialized out as xml, its value is "dashedSmall".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.DashDotStroked">
            <summary>
            Stroked Dash Dot Border.
            <para>When the item is serialized out as xml, its value is "dashDotStroked".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.ThreeDEmboss">
            <summary>
            3D Embossed Border.
            <para>When the item is serialized out as xml, its value is "threeDEmboss".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.ThreeDEngrave">
            <summary>
            3D Engraved Border.
            <para>When the item is serialized out as xml, its value is "threeDEngrave".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.HTMLOutset">
            <summary>
            Outset Border.
            <para>When the item is serialized out as xml, its value is "HTMLOutset".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.BorderValues.HTMLInset">
            <summary>
            Inset Border.
            <para>When the item is serialized out as xml, its value is "HTMLInset".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.WrapValues">
            <summary>
            Text Wrapping Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.WrapValues.TopAndBottom">
            <summary>
            Top and bottom wrapping.
            <para>When the item is serialized out as xml, its value is "topAndBottom".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.WrapValues.Square">
            <summary>
            Square wrapping.
            <para>When the item is serialized out as xml, its value is "square".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.WrapValues.None">
            <summary>
            No wrapping.
            <para>When the item is serialized out as xml, its value is "none".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.WrapValues.Tight">
            <summary>
            Tight wrapping.
            <para>When the item is serialized out as xml, its value is "tight".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.WrapValues.Through">
            <summary>
            Through wrapping.
            <para>When the item is serialized out as xml, its value is "through".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.WrapSideValues">
            <summary>
            Text Wrapping Side 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.WrapSideValues.Both">
            <summary>
            Both sides.
            <para>When the item is serialized out as xml, its value is "both".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.WrapSideValues.Left">
            <summary>
            Left side.
            <para>When the item is serialized out as xml, its value is "left".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.WrapSideValues.Right">
            <summary>
            Right side.
            <para>When the item is serialized out as xml, its value is "right".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.WrapSideValues.Largest">
            <summary>
            Largest side.
            <para>When the item is serialized out as xml, its value is "largest".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.HorizontalAnchorValues">
            <summary>
            Horizontal Anchor Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.HorizontalAnchorValues.Margin">
            <summary>
            Margin.
            <para>When the item is serialized out as xml, its value is "margin".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.HorizontalAnchorValues.Page">
            <summary>
            Page.
            <para>When the item is serialized out as xml, its value is "page".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.HorizontalAnchorValues.Text">
            <summary>
            Text.
            <para>When the item is serialized out as xml, its value is "text".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Wordprocessing.VerticalAnchorValues">
            <summary>
            Vertical Anchor Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.VerticalAnchorValues.Margin">
            <summary>
            Margin.
            <para>When the item is serialized out as xml, its value is "margin".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.VerticalAnchorValues.Page">
            <summary>
            Page.
            <para>When the item is serialized out as xml, its value is "page".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.Wordprocessing.VerticalAnchorValues.Text">
            <summary>
            Text.
            <para>When the item is serialized out as xml, its value is "text".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Path">
            <summary>
            <para>Defines the Path Class.</para>
            <para> When the object is serialized out as xml, its qualified name is v:path.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Path.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.Value">
            <summary>
            <para> Path Definition.</para>
            <para>Represents the following attribute in the schema: v </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.Limo">
            <summary>
            <para> Limo Stretch Point.</para>
            <para>Represents the following attribute in the schema: limo </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.TextboxRectangle">
            <summary>
            <para> Text Box Bounding Box.</para>
            <para>Represents the following attribute in the schema: textboxrect </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.AllowFill">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: fillok </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.AllowStroke">
            <summary>
            <para> Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: strokeok </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.AllowShading">
            <summary>
            <para> Shadow Toggle.</para>
            <para>Represents the following attribute in the schema: shadowok </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.ShowArrowhead">
            <summary>
            <para> Arrowhead Display Toggle.</para>
            <para>Represents the following attribute in the schema: arrowok </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.AllowGradientShape">
            <summary>
            <para> Gradient Shape Toggle.</para>
            <para>Represents the following attribute in the schema: gradientshapeok </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.AllowTextPath">
            <summary>
            <para> Text Path Toggle.</para>
            <para>Represents the following attribute in the schema: textpathok </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.AllowInsetPen">
            <summary>
            <para> Inset Stroke From Path Flag.</para>
            <para>Represents the following attribute in the schema: insetpenok </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.ConnectionPointType">
             <summary>
             <para> Connection Point Type.</para>
             <para>Represents the following attribute in the schema: o:connecttype </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.ConnectionPoints">
             <summary>
             <para> Connection Points.</para>
             <para>Represents the following attribute in the schema: o:connectlocs </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.ConnectAngles">
             <summary>
             <para> Connection Point Connect Angles.</para>
             <para>Represents the following attribute in the schema: o:connectangles </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Path.AllowExtrusion">
             <summary>
             <para> Extrusion Toggle.</para>
             <para>Represents the following attribute in the schema: o:extrusionok </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Path.#ctor">
            <summary>
            Initializes a new instance of the Path class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Path.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Formulas">
             <summary>
             <para>Defines the Formulas Class.</para>
             <para> When the object is serialized out as xml, its qualified name is v:formulas.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Formula &lt;v:f></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Formulas.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Formulas.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Formulas.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Formulas.#ctor">
            <summary>
            Initializes a new instance of the Formulas class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Formulas.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Formulas class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Formulas.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Formulas class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Formulas.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Formulas class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Formulas.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.ShapeHandles">
             <summary>
             <para>Defines the ShapeHandles Class.</para>
             <para> When the object is serialized out as xml, its qualified name is v:handles.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ShapeHandle &lt;v:h></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandles.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandles.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ShapeHandles.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ShapeHandles.#ctor">
            <summary>
            Initializes a new instance of the ShapeHandles class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ShapeHandles.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ShapeHandles class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ShapeHandles.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ShapeHandles class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ShapeHandles.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ShapeHandles class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ShapeHandles.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Fill">
             <summary>
             <para>Defines the Fill Class.</para>
             <para> When the object is serialized out as xml, its qualified name is v:fill.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Vml.Office.FillExtendedProperties &lt;o:fill></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Fill.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Type">
            <summary>
            <para> Fill Type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.On">
            <summary>
            <para> Fill Toggle.</para>
            <para>Represents the following attribute in the schema: on </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Color">
            <summary>
            <para> Primary Color.</para>
            <para>Represents the following attribute in the schema: color </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Opacity">
            <summary>
            <para> Primary Color Opacity.</para>
            <para>Represents the following attribute in the schema: opacity </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Color2">
            <summary>
            <para> Secondary Color.</para>
            <para>Represents the following attribute in the schema: color2 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Source">
            <summary>
            <para> Fill Image Source.</para>
            <para>Represents the following attribute in the schema: src </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Href">
             <summary>
             <para> Hyperlink Target.</para>
             <para>Represents the following attribute in the schema: o:href </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.AlternateImageReference">
             <summary>
             <para> Alternate Image Reference Location.</para>
             <para>Represents the following attribute in the schema: o:althref </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Size">
            <summary>
            <para> Fill Image Size.</para>
            <para>Represents the following attribute in the schema: size </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Origin">
            <summary>
            <para> Fill Image Origin.</para>
            <para>Represents the following attribute in the schema: origin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Position">
            <summary>
            <para> Fill Image Position.</para>
            <para>Represents the following attribute in the schema: position </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Aspect">
            <summary>
            <para> Image Aspect Ratio.</para>
            <para>Represents the following attribute in the schema: aspect </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Colors">
            <summary>
            <para> Intermediate Colors.</para>
            <para>Represents the following attribute in the schema: colors </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Angle">
            <summary>
            <para> Gradient Angle.</para>
            <para>Represents the following attribute in the schema: angle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.AlignShape">
            <summary>
            <para> Align Image With Shape.</para>
            <para>Represents the following attribute in the schema: alignshape </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Focus">
            <summary>
            <para> Gradient Center.</para>
            <para>Represents the following attribute in the schema: focus </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.FocusSize">
            <summary>
            <para> Radial Gradient Size.</para>
            <para>Represents the following attribute in the schema: focussize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.FocusPosition">
            <summary>
            <para> Radial Gradient Center.</para>
            <para>Represents the following attribute in the schema: focusposition </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Method">
            <summary>
            <para> Gradient Fill Method.</para>
            <para>Represents the following attribute in the schema: method </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.DetectMouseClick">
             <summary>
             <para> Detect Mouse Click.</para>
             <para>Represents the following attribute in the schema: o:detectmouseclick </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Title">
             <summary>
             <para> Title.</para>
             <para>Represents the following attribute in the schema: o:title </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Opacity2">
             <summary>
             <para> Secondary Color Opacity.</para>
             <para>Represents the following attribute in the schema: o:opacity2 </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Recolor">
            <summary>
            <para> Recolor Fill as Picture.</para>
            <para>Represents the following attribute in the schema: recolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.Rotate">
            <summary>
            <para> Rotate Fill with Shape.</para>
            <para>Represents the following attribute in the schema: rotate </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.RelationshipId">
             <summary>
             <para> Relationship to Part.</para>
             <para>Represents the following attribute in the schema: r:id </para>
             </summary>
            <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Fill.#ctor">
            <summary>
            Initializes a new instance of the Fill class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Fill.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Fill class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Fill.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Fill class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Fill.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Fill class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Fill.FillExtendedProperties">
            <summary>
            <para> FillExtendedProperties.</para>
            <para> Represents the following element tag in the schema: o:fill </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Fill.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Stroke">
             <summary>
             <para>Defines the Stroke Class.</para>
             <para> When the object is serialized out as xml, its qualified name is v:stroke.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Vml.Office.LeftStroke &lt;o:left></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.TopStroke &lt;o:top></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.RightStroke &lt;o:right></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.BottomStroke &lt;o:bottom></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ColumnStroke &lt;o:column></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Stroke.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.On">
            <summary>
            <para> Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: on </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.Weight">
            <summary>
            <para> Stroke Weight.</para>
            <para>Represents the following attribute in the schema: weight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.Color">
            <summary>
            <para> Stroke Color.</para>
            <para>Represents the following attribute in the schema: color </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.Opacity">
            <summary>
            <para> Stroke Opacity.</para>
            <para>Represents the following attribute in the schema: opacity </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.LineStyle">
            <summary>
            <para> Stroke Line Style.</para>
            <para>Represents the following attribute in the schema: linestyle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.Miterlimit">
            <summary>
            <para> Miter Joint Limit.</para>
            <para>Represents the following attribute in the schema: miterlimit </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.JoinStyle">
            <summary>
            <para> Line End Join Style.</para>
            <para>Represents the following attribute in the schema: joinstyle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.EndCap">
            <summary>
            <para> Line End Cap.</para>
            <para>Represents the following attribute in the schema: endcap </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.DashStyle">
            <summary>
            <para> Stroke Dash Pattern.</para>
            <para>Represents the following attribute in the schema: dashstyle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.FillType">
            <summary>
            <para> Stroke Image Style.</para>
            <para>Represents the following attribute in the schema: filltype </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.Source">
            <summary>
            <para> Stroke Image Location.</para>
            <para>Represents the following attribute in the schema: src </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.ImageAspect">
            <summary>
            <para> Stroke Image Aspect Ratio.</para>
            <para>Represents the following attribute in the schema: imageaspect </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.ImageSize">
            <summary>
            <para> Stroke Image Size.</para>
            <para>Represents the following attribute in the schema: imagesize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.ImageAlignShape">
            <summary>
            <para> Stoke Image Alignment.</para>
            <para>Represents the following attribute in the schema: imagealignshape </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.Color2">
            <summary>
            <para> Stroke Alternate Pattern Color.</para>
            <para>Represents the following attribute in the schema: color2 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.StartArrow">
            <summary>
            <para> Line Start Arrowhead.</para>
            <para>Represents the following attribute in the schema: startarrow </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.StartArrowWidth">
            <summary>
            <para> Line Start Arrowhead Width.</para>
            <para>Represents the following attribute in the schema: startarrowwidth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.StartArrowLength">
            <summary>
            <para> Line Start Arrowhead Length.</para>
            <para>Represents the following attribute in the schema: startarrowlength </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.EndArrow">
            <summary>
            <para> Line End Arrowhead.</para>
            <para>Represents the following attribute in the schema: endarrow </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.EndArrowWidth">
            <summary>
            <para> Line End Arrowhead Width.</para>
            <para>Represents the following attribute in the schema: endarrowwidth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.EndArrowLength">
            <summary>
            <para> Line End Arrowhead Length.</para>
            <para>Represents the following attribute in the schema: endarrowlength </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.Href">
             <summary>
             <para> Original Image Reference.</para>
             <para>Represents the following attribute in the schema: o:href </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.AlternateImageReference">
             <summary>
             <para> Alternate Image Reference.</para>
             <para>Represents the following attribute in the schema: o:althref </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.Title">
             <summary>
             <para> Stroke Title.</para>
             <para>Represents the following attribute in the schema: o:title </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.RelationshipId">
             <summary>
             <para> Relationship.</para>
             <para>Represents the following attribute in the schema: r:id </para>
             </summary>
            <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.Insetpen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Stroke.#ctor">
            <summary>
            Initializes a new instance of the Stroke class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Stroke.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Stroke class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Stroke.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Stroke class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Stroke.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Stroke class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.LeftStroke">
            <summary>
            <para> LeftStroke.</para>
            <para> Represents the following element tag in the schema: o:left </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.TopStroke">
            <summary>
            <para> TopStroke.</para>
            <para> Represents the following element tag in the schema: o:top </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.RightStroke">
            <summary>
            <para> RightStroke.</para>
            <para> Represents the following element tag in the schema: o:right </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.BottomStroke">
            <summary>
            <para> BottomStroke.</para>
            <para> Represents the following element tag in the schema: o:bottom </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Stroke.ColumnStroke">
            <summary>
            <para> ColumnStroke.</para>
            <para> Represents the following element tag in the schema: o:column </para>
            </summary>
            <remark>
            xmlns:o = urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Stroke.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Shadow">
            <summary>
            <para>Defines the Shadow Class.</para>
            <para> When the object is serialized out as xml, its qualified name is v:shadow.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shadow.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.On">
            <summary>
            <para> Shadow Toggle.</para>
            <para>Represents the following attribute in the schema: on </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.Type">
            <summary>
            <para> Shadow Type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.Obscured">
            <summary>
            <para> Shadow Transparency.</para>
            <para>Represents the following attribute in the schema: obscured </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.Color">
            <summary>
            <para> Shadow Primary Color.</para>
            <para>Represents the following attribute in the schema: color </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.Opacity">
            <summary>
            <para> Shadow Opacity.</para>
            <para>Represents the following attribute in the schema: opacity </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.Offset">
            <summary>
            <para> Shadow Primary Offset.</para>
            <para>Represents the following attribute in the schema: offset </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.Color2">
            <summary>
            <para> Shadow Secondary Color.</para>
            <para>Represents the following attribute in the schema: color2 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.Offset2">
            <summary>
            <para> Shadow Secondary Offset.</para>
            <para>Represents the following attribute in the schema: offset2 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.Origin">
            <summary>
            <para> Shadow Origin.</para>
            <para>Represents the following attribute in the schema: origin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shadow.Matrix">
            <summary>
            <para> Shadow Perspective Matrix.</para>
            <para>Represents the following attribute in the schema: matrix </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shadow.#ctor">
            <summary>
            Initializes a new instance of the Shadow class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shadow.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.TextBox">
             <summary>
             <para>Defines the TextBox Class.</para>
             <para> When the object is serialized out as xml, its qualified name is v:textbox.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Wordprocessing.TextBoxContent &lt;w:txbxContent></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextBox.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextBox.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.TextBox.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextBox.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextBox.Style">
            <summary>
            <para> Shape Styling Properties.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextBox.Inset">
            <summary>
            <para> Text Box Inset.</para>
            <para>Represents the following attribute in the schema: inset </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextBox.SingleClick">
             <summary>
             <para> Text Box Single-Click Selection Toggle.</para>
             <para>Represents the following attribute in the schema: o:singleclick </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.TextBox.#ctor">
            <summary>
            Initializes a new instance of the TextBox class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.TextBox.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the TextBox class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.TextBox.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the TextBox class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.TextBox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TextBox class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.TextBox.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.TextPath">
            <summary>
            <para>Defines the TextPath Class.</para>
            <para> When the object is serialized out as xml, its qualified name is v:textpath.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextPath.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextPath.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.TextPath.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextPath.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextPath.Style">
            <summary>
            <para> Shape Styling Properties.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextPath.On">
            <summary>
            <para> Text Path Toggle.</para>
            <para>Represents the following attribute in the schema: on </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextPath.FitShape">
            <summary>
            <para> Shape Fit Toggle.</para>
            <para>Represents the following attribute in the schema: fitshape </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextPath.FitPath">
            <summary>
            <para> Path Fit Toggle.</para>
            <para>Represents the following attribute in the schema: fitpath </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextPath.Trim">
            <summary>
            <para> Text Path Trim Toggle.</para>
            <para>Represents the following attribute in the schema: trim </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextPath.XScale">
            <summary>
            <para> Text X-Scaling.</para>
            <para>Represents the following attribute in the schema: xscale </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.TextPath.String">
            <summary>
            <para> Text Path Text.</para>
            <para>Represents the following attribute in the schema: string </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.TextPath.#ctor">
            <summary>
            Initializes a new instance of the TextPath class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.TextPath.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.ImageData">
            <summary>
            <para>Defines the ImageData Class.</para>
            <para> When the object is serialized out as xml, its qualified name is v:imagedata.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ImageData.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.ChromAKey">
            <summary>
            <para> Image Transparency Color.</para>
            <para>Represents the following attribute in the schema: chromakey </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.CropLeft">
            <summary>
            <para> Image Left Crop.</para>
            <para>Represents the following attribute in the schema: cropleft </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.CropTop">
            <summary>
            <para> Image Top Crop.</para>
            <para>Represents the following attribute in the schema: croptop </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.CropRight">
            <summary>
            <para> Image Right Crop.</para>
            <para>Represents the following attribute in the schema: cropright </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.CropBottom">
            <summary>
            <para> Image Bottom Crop.</para>
            <para>Represents the following attribute in the schema: cropbottom </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.Gain">
            <summary>
            <para> Image Intensity.</para>
            <para>Represents the following attribute in the schema: gain </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.BlackLevel">
            <summary>
            <para> Image Brightness.</para>
            <para>Represents the following attribute in the schema: blacklevel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.Gamma">
            <summary>
            <para> Image Gamma Correction.</para>
            <para>Represents the following attribute in the schema: gamma </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.Grayscale">
            <summary>
            <para> Image Grayscale Toggle.</para>
            <para>Represents the following attribute in the schema: grayscale </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.BiLevel">
            <summary>
            <para> Image Bilevel Toggle.</para>
            <para>Represents the following attribute in the schema: bilevel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.EmbossColor">
            <summary>
            <para> Embossed Color.</para>
            <para>Represents the following attribute in the schema: embosscolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.RecolorTarget">
            <summary>
            <para> Black Recoloring Color.</para>
            <para>Represents the following attribute in the schema: recolortarget </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.Title">
             <summary>
             <para> Image Data Title.</para>
             <para>Represents the following attribute in the schema: o:title </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.DetectMouseClick">
             <summary>
             <para> Detect Mouse Click.</para>
             <para>Represents the following attribute in the schema: o:detectmouseclick </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.RelId">
             <summary>
             <para> Relationship to Part.</para>
             <para>Represents the following attribute in the schema: o:relid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.RelationshipId">
             <summary>
             <para> Explicit Relationship to Image Data.</para>
             <para>Represents the following attribute in the schema: r:id </para>
             </summary>
            <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.Picture">
             <summary>
             <para> Explicit Relationship to Alternate Image Data.</para>
             <para>Represents the following attribute in the schema: r:pict </para>
             </summary>
            <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageData.RelHref">
             <summary>
             <para> Explicit Relationship to Hyperlink Target.</para>
             <para>Represents the following attribute in the schema: r:href </para>
             </summary>
            <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ImageData.#ctor">
            <summary>
            Initializes a new instance of the ImageData class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ImageData.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Shape">
             <summary>
             <para>Shape Definition.</para>
             <para> When the object is serialized out as xml, its qualified name is v:shape.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Path &lt;v:path></description></item>
            <item><description>Formulas &lt;v:formulas></description></item>
            <item><description>ShapeHandles &lt;v:handles></description></item>
            <item><description>Fill &lt;v:fill></description></item>
            <item><description>Stroke &lt;v:stroke></description></item>
            <item><description>Shadow &lt;v:shadow></description></item>
            <item><description>TextBox &lt;v:textbox></description></item>
            <item><description>TextPath &lt;v:textpath></description></item>
            <item><description>ImageData &lt;v:imagedata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Skew &lt;o:skew></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Extrusion &lt;o:extrusion></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Callout &lt;o:callout></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Lock &lt;o:lock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ClipPath &lt;o:clippath></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.SignatureLine &lt;o:signatureline></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap &lt;w10:wrap></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock &lt;w10:anchorlock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder &lt;w10:bordertop></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder &lt;w10:borderbottom></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder &lt;w10:borderleft></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder &lt;w10:borderright></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData &lt;xvml:ClientData></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Presentation.TextData &lt;pvml:textdata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Ink &lt;o:ink></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Presentation.InkAnnotationFlag &lt;pvml:iscomment></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shape.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Style">
            <summary>
            <para> Shape Styling Properties.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Href">
            <summary>
            <para> Hyperlink Target.</para>
            <para>Represents the following attribute in the schema: href </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Target">
            <summary>
            <para> Hyperlink Display Target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Class">
            <summary>
            <para> CSS Reference.</para>
            <para>Represents the following attribute in the schema: class </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Title">
            <summary>
            <para> Shape Title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Alternate">
            <summary>
            <para> Alternate Text.</para>
            <para>Represents the following attribute in the schema: alt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.CoordinateSize">
            <summary>
            <para> Coordinate Space Size.</para>
            <para>Represents the following attribute in the schema: coordsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.CoordinateOrigin">
            <summary>
            <para> Coordinate Space Origin.</para>
            <para>Represents the following attribute in the schema: coordorigin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.WrapCoordinates">
            <summary>
            <para> Shape Bounding Polygon.</para>
            <para>Represents the following attribute in the schema: wrapcoords </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Print">
            <summary>
            <para> Print Toggle.</para>
            <para>Represents the following attribute in the schema: print </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.OptionalString">
             <summary>
             <para> Optional String.</para>
             <para>Represents the following attribute in the schema: o:spid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Oned">
             <summary>
             <para> Shape Handle Toggle.</para>
             <para>Represents the following attribute in the schema: o:oned </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.RegroupId">
             <summary>
             <para> Regroup ID.</para>
             <para>Represents the following attribute in the schema: o:regroupid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.DoubleClickNotify">
             <summary>
             <para> Double-click Notification Toggle.</para>
             <para>Represents the following attribute in the schema: o:doubleclicknotify </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Button">
             <summary>
             <para> Button Behavior Toggle.</para>
             <para>Represents the following attribute in the schema: o:button </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.UserHidden">
             <summary>
             <para> Hide Script Anchors.</para>
             <para>Represents the following attribute in the schema: o:userhidden </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Bullet">
             <summary>
             <para> Graphical Bullet.</para>
             <para>Represents the following attribute in the schema: o:bullet </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Horizontal">
             <summary>
             <para> Horizontal Rule Toggle.</para>
             <para>Represents the following attribute in the schema: o:hr </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.HorizontalStandard">
             <summary>
             <para> Horizontal Rule Standard Display Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrstd </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.HorizontalNoShade">
             <summary>
             <para> Horizontal Rule 3D Shading Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrnoshade </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.HorizontalPercentage">
             <summary>
             <para> Horizontal Rule Length Percentage.</para>
             <para>Represents the following attribute in the schema: o:hrpct </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.HorizontalAlignment">
             <summary>
             <para> Horizontal Rule Alignment.</para>
             <para>Represents the following attribute in the schema: o:hralign </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.AllowInCell">
             <summary>
             <para> Allow in Table Cell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.AllowOverlap">
             <summary>
             <para> Allow Shape Overlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.UserDrawn">
             <summary>
             <para> Exists In Master Slide.</para>
             <para>Represents the following attribute in the schema: o:userdrawn </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.BorderTopColor">
             <summary>
             <para> Border Top Color.</para>
             <para>Represents the following attribute in the schema: o:bordertopcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.BorderLeftColor">
             <summary>
             <para> Border Left Color.</para>
             <para>Represents the following attribute in the schema: o:borderleftcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.BorderBottomColor">
             <summary>
             <para> Bottom Border Color.</para>
             <para>Represents the following attribute in the schema: o:borderbottomcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.BorderRightColor">
             <summary>
             <para> Border Right Color.</para>
             <para>Represents the following attribute in the schema: o:borderrightcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.DiagramLayout">
             <summary>
             <para> Diagram Node Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayout </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.DiagramNodeKind">
             <summary>
             <para> Diagram Node Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmnodekind </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.DiagramLayoutMostRecentUsed">
             <summary>
             <para> Diagram Node Recent Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayoutmru </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.InsetMode">
             <summary>
             <para> Text Inset Mode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Filled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: filled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.FillColor">
            <summary>
            <para> Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Stroked">
            <summary>
            <para> Shape Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: stroked </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.StrokeColor">
            <summary>
            <para> Shape Stroke Color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.StrokeWeight">
            <summary>
            <para> Shape Stroke Weight.</para>
            <para>Represents the following attribute in the schema: strokeweight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.InsetPen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.OptionalNumber">
             <summary>
             <para> Optional Number.</para>
             <para>Represents the following attribute in the schema: o:spt </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.ConnectorType">
             <summary>
             <para> Shape Connector Type.</para>
             <para>Represents the following attribute in the schema: o:connectortype </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.BlackWhiteMode">
             <summary>
             <para> Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.PureBlackWhiteMode">
             <summary>
             <para> Pure Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwpure </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.NormalBlackWhiteMode">
             <summary>
             <para> Normal Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwnormal </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.OleIcon">
             <summary>
             <para> Embedded Object Icon Toggle.</para>
             <para>Represents the following attribute in the schema: o:oleicon </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Ole">
             <summary>
             <para> Embedded Object Toggle.</para>
             <para>Represents the following attribute in the schema: o:ole </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.PreferRelative">
             <summary>
             <para> Relative Resize Toggle.</para>
             <para>Represents the following attribute in the schema: o:preferrelative </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.ClipToWrap">
             <summary>
             <para> Clip to Wrapping Polygon.</para>
             <para>Represents the following attribute in the schema: o:cliptowrap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Clip">
             <summary>
             <para> Clipping Toggle.</para>
             <para>Represents the following attribute in the schema: o:clip </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Type">
            <summary>
            <para> Shape Type Reference.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.Adjustment">
            <summary>
            <para> Adjustment Parameters.</para>
            <para>Represents the following attribute in the schema: adj </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.EdgePath">
            <summary>
            <para> Edge Path.</para>
            <para>Represents the following attribute in the schema: path </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.EncodedPackage">
             <summary>
             <para> Encoded Package.</para>
             <para>Represents the following attribute in the schema: o:gfxdata </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shape.EquationXml">
            <summary>
            <para> Storage for Alternate Math Content.</para>
            <para>Represents the following attribute in the schema: equationxml </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shape.#ctor">
            <summary>
            Initializes a new instance of the Shape class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shape.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Shape class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shape.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Shape class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shape.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Shape class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shape.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Shapetype">
             <summary>
             <para>Shape Template.</para>
             <para> When the object is serialized out as xml, its qualified name is v:shapetype.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Path &lt;v:path></description></item>
            <item><description>Formulas &lt;v:formulas></description></item>
            <item><description>ShapeHandles &lt;v:handles></description></item>
            <item><description>Fill &lt;v:fill></description></item>
            <item><description>Stroke &lt;v:stroke></description></item>
            <item><description>Shadow &lt;v:shadow></description></item>
            <item><description>TextBox &lt;v:textbox></description></item>
            <item><description>TextPath &lt;v:textpath></description></item>
            <item><description>ImageData &lt;v:imagedata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Skew &lt;o:skew></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Extrusion &lt;o:extrusion></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Callout &lt;o:callout></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Lock &lt;o:lock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ClipPath &lt;o:clippath></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.SignatureLine &lt;o:signatureline></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap &lt;w10:wrap></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock &lt;w10:anchorlock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder &lt;w10:bordertop></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder &lt;w10:borderbottom></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder &lt;w10:borderleft></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder &lt;w10:borderright></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData &lt;xvml:ClientData></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Presentation.TextData &lt;pvml:textdata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Complex &lt;o:complex></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shapetype.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Style">
            <summary>
            <para> Shape Styling Properties.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Href">
            <summary>
            <para> Hyperlink Target.</para>
            <para>Represents the following attribute in the schema: href </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Target">
            <summary>
            <para> Hyperlink Display Target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Class">
            <summary>
            <para> CSS Reference.</para>
            <para>Represents the following attribute in the schema: class </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Title">
            <summary>
            <para> Shape Title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Alternate">
            <summary>
            <para> Alternate Text.</para>
            <para>Represents the following attribute in the schema: alt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.CoordinateSize">
            <summary>
            <para> Coordinate Space Size.</para>
            <para>Represents the following attribute in the schema: coordsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.CoordinateOrigin">
            <summary>
            <para> Coordinate Space Origin.</para>
            <para>Represents the following attribute in the schema: coordorigin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.WrapCoordinates">
            <summary>
            <para> Shape Bounding Polygon.</para>
            <para>Represents the following attribute in the schema: wrapcoords </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Print">
            <summary>
            <para> Print Toggle.</para>
            <para>Represents the following attribute in the schema: print </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.OptionalString">
             <summary>
             <para> Optional String.</para>
             <para>Represents the following attribute in the schema: o:spid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Oned">
             <summary>
             <para> Shape Handle Toggle.</para>
             <para>Represents the following attribute in the schema: o:oned </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.RegroupId">
             <summary>
             <para> Regroup ID.</para>
             <para>Represents the following attribute in the schema: o:regroupid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.DoubleClickNotify">
             <summary>
             <para> Double-click Notification Toggle.</para>
             <para>Represents the following attribute in the schema: o:doubleclicknotify </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Button">
             <summary>
             <para> Button Behavior Toggle.</para>
             <para>Represents the following attribute in the schema: o:button </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.UserHidden">
             <summary>
             <para> Hide Script Anchors.</para>
             <para>Represents the following attribute in the schema: o:userhidden </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Bullet">
             <summary>
             <para> Graphical Bullet.</para>
             <para>Represents the following attribute in the schema: o:bullet </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Horizontal">
             <summary>
             <para> Horizontal Rule Toggle.</para>
             <para>Represents the following attribute in the schema: o:hr </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.HorizontalStandard">
             <summary>
             <para> Horizontal Rule Standard Display Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrstd </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.HorizontalNoShade">
             <summary>
             <para> Horizontal Rule 3D Shading Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrnoshade </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.HorizontalPercentage">
             <summary>
             <para> Horizontal Rule Length Percentage.</para>
             <para>Represents the following attribute in the schema: o:hrpct </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.HorizontalAlignment">
             <summary>
             <para> Horizontal Rule Alignment.</para>
             <para>Represents the following attribute in the schema: o:hralign </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.AllowInCell">
             <summary>
             <para> Allow in Table Cell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.AllowOverlap">
             <summary>
             <para> Allow Shape Overlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.UserDrawn">
             <summary>
             <para> Exists In Master Slide.</para>
             <para>Represents the following attribute in the schema: o:userdrawn </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.BorderTopColor">
             <summary>
             <para> Border Top Color.</para>
             <para>Represents the following attribute in the schema: o:bordertopcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.BorderLeftColor">
             <summary>
             <para> Border Left Color.</para>
             <para>Represents the following attribute in the schema: o:borderleftcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.BorderBottomColor">
             <summary>
             <para> Bottom Border Color.</para>
             <para>Represents the following attribute in the schema: o:borderbottomcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.BorderRightColor">
             <summary>
             <para> Border Right Color.</para>
             <para>Represents the following attribute in the schema: o:borderrightcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.DiagramLayout">
             <summary>
             <para> Diagram Node Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayout </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.DiagramNodeKind">
             <summary>
             <para> Diagram Node Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmnodekind </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.DiagramLayoutMostRecentUsed">
             <summary>
             <para> Diagram Node Recent Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayoutmru </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.InsetMode">
             <summary>
             <para> Text Inset Mode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Filled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: filled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.FillColor">
            <summary>
            <para> Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Stroked">
            <summary>
            <para> Shape Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: stroked </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.StrokeColor">
            <summary>
            <para> Shape Stroke Color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.StrokeWeight">
            <summary>
            <para> Shape Stroke Weight.</para>
            <para>Represents the following attribute in the schema: strokeweight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.InsetPen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.OptionalNumber">
             <summary>
             <para> Optional Number.</para>
             <para>Represents the following attribute in the schema: o:spt </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.ConnectorType">
             <summary>
             <para> Shape Connector Type.</para>
             <para>Represents the following attribute in the schema: o:connectortype </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.BlackWhiteMode">
             <summary>
             <para> Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.PureBlackWhiteMode">
             <summary>
             <para> Pure Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwpure </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.NormalBlackWhiteMode">
             <summary>
             <para> Normal Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwnormal </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.OleIcon">
             <summary>
             <para> Embedded Object Icon Toggle.</para>
             <para>Represents the following attribute in the schema: o:oleicon </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Ole">
             <summary>
             <para> Embedded Object Toggle.</para>
             <para>Represents the following attribute in the schema: o:ole </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.PreferRelative">
             <summary>
             <para> Relative Resize Toggle.</para>
             <para>Represents the following attribute in the schema: o:preferrelative </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.ClipToWrap">
             <summary>
             <para> Clip to Wrapping Polygon.</para>
             <para>Represents the following attribute in the schema: o:cliptowrap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Clip">
             <summary>
             <para> Clipping Toggle.</para>
             <para>Represents the following attribute in the schema: o:clip </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Adjustment">
            <summary>
            <para> Adjustment Parameters.</para>
            <para>Represents the following attribute in the schema: adj </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.EdgePath">
            <summary>
            <para> Edge Path.</para>
            <para>Represents the following attribute in the schema: path </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Shapetype.Master">
             <summary>
             <para> Master Element Toggle.</para>
             <para>Represents the following attribute in the schema: o:master </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shapetype.#ctor">
            <summary>
            Initializes a new instance of the Shapetype class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shapetype.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Shapetype class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shapetype.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Shapetype class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shapetype.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Shapetype class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Shapetype.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Group">
             <summary>
             <para>Shape Group.</para>
             <para> When the object is serialized out as xml, its qualified name is v:group.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Group &lt;v:group></description></item>
            <item><description>Shape &lt;v:shape></description></item>
            <item><description>Shapetype &lt;v:shapetype></description></item>
            <item><description>Arc &lt;v:arc></description></item>
            <item><description>Curve &lt;v:curve></description></item>
            <item><description>ImageFile &lt;v:image></description></item>
            <item><description>Line &lt;v:line></description></item>
            <item><description>Oval &lt;v:oval></description></item>
            <item><description>PolyLine &lt;v:polyline></description></item>
            <item><description>Rectangle &lt;v:rect></description></item>
            <item><description>RoundRectangle &lt;v:roundrect></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Diagram &lt;o:diagram></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Lock &lt;o:lock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ClipPath &lt;o:clippath></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap &lt;w10:wrap></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock &lt;w10:anchorlock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData &lt;xvml:ClientData></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Group.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Style">
            <summary>
            <para> Shape Styling Properties.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Href">
            <summary>
            <para> Hyperlink Target.</para>
            <para>Represents the following attribute in the schema: href </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Target">
            <summary>
            <para> Hyperlink Display Target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Class">
            <summary>
            <para> CSS Reference.</para>
            <para>Represents the following attribute in the schema: class </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Title">
            <summary>
            <para> Shape Title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Alternate">
            <summary>
            <para> Alternate Text.</para>
            <para>Represents the following attribute in the schema: alt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.CoordinateSize">
            <summary>
            <para> Coordinate Space Size.</para>
            <para>Represents the following attribute in the schema: coordsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.CoordinateOrigin">
            <summary>
            <para> Coordinate Space Origin.</para>
            <para>Represents the following attribute in the schema: coordorigin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.WrapCoordinates">
            <summary>
            <para> Shape Bounding Polygon.</para>
            <para>Represents the following attribute in the schema: wrapcoords </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Print">
            <summary>
            <para> Print Toggle.</para>
            <para>Represents the following attribute in the schema: print </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.OptionalString">
             <summary>
             <para> spid.</para>
             <para>Represents the following attribute in the schema: o:spid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Oned">
             <summary>
             <para> oned.</para>
             <para>Represents the following attribute in the schema: o:oned </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.RegroupId">
             <summary>
             <para> regroupid.</para>
             <para>Represents the following attribute in the schema: o:regroupid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.DoubleClickNotify">
             <summary>
             <para> doubleclicknotify.</para>
             <para>Represents the following attribute in the schema: o:doubleclicknotify </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Button">
             <summary>
             <para> button.</para>
             <para>Represents the following attribute in the schema: o:button </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.UserHidden">
             <summary>
             <para> userhidden.</para>
             <para>Represents the following attribute in the schema: o:userhidden </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Bullet">
             <summary>
             <para> bullet.</para>
             <para>Represents the following attribute in the schema: o:bullet </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.Horizontal">
             <summary>
             <para> hr.</para>
             <para>Represents the following attribute in the schema: o:hr </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.HorizontalStandard">
             <summary>
             <para> hrstd.</para>
             <para>Represents the following attribute in the schema: o:hrstd </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.HorizontalNoShade">
             <summary>
             <para> hrnoshade.</para>
             <para>Represents the following attribute in the schema: o:hrnoshade </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.HorizontalPercentage">
             <summary>
             <para> hrpct.</para>
             <para>Represents the following attribute in the schema: o:hrpct </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.HorizontalAlignment">
             <summary>
             <para> hralign.</para>
             <para>Represents the following attribute in the schema: o:hralign </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.AllowInCell">
             <summary>
             <para> allowincell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.AllowOverlap">
             <summary>
             <para> allowoverlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.UserDrawn">
             <summary>
             <para> userdrawn.</para>
             <para>Represents the following attribute in the schema: o:userdrawn </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.DiagramLayout">
             <summary>
             <para> dgmlayout.</para>
             <para>Represents the following attribute in the schema: o:dgmlayout </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.DiagramNodeKind">
             <summary>
             <para> dgmnodekind.</para>
             <para>Represents the following attribute in the schema: o:dgmnodekind </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.DiagramLayoutMostRecentUsed">
             <summary>
             <para> dgmlayoutmru.</para>
             <para>Represents the following attribute in the schema: o:dgmlayoutmru </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.InsetMode">
             <summary>
             <para> insetmode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.EditAs">
            <summary>
            <para> Group Diagram Type.</para>
            <para>Represents the following attribute in the schema: editas </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.TableProperties">
             <summary>
             <para> Table Properties.</para>
             <para>Represents the following attribute in the schema: o:tableproperties </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Group.TableLimits">
             <summary>
             <para> Table Row Height Limits.</para>
             <para>Represents the following attribute in the schema: o:tablelimits </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Group.#ctor">
            <summary>
            Initializes a new instance of the Group class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Group.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Group class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Group.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Group class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Group.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Group class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Group.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Background">
             <summary>
             <para>Document Background.</para>
             <para> When the object is serialized out as xml, its qualified name is v:background.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Fill &lt;v:fill></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Background.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Background.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Background.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Background.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Background.Filled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: fill </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Background.Fillcolor">
            <summary>
            <para> Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Background.BlackWhiteMode">
             <summary>
             <para> Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Background.PureBlackWhiteMode">
             <summary>
             <para> Pure Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwpure </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Background.NormalBlackWhiteMode">
             <summary>
             <para> Normal Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwnormal </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Background.TargetScreenSize">
             <summary>
             <para> Target Screen Size.</para>
             <para>Represents the following attribute in the schema: o:targetscreensize </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Background.#ctor">
            <summary>
            Initializes a new instance of the Background class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Background.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Background class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Background.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Background class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Background.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Background class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Background.Fill">
            <summary>
            <para> Fill.</para>
            <para> Represents the following element tag in the schema: v:fill </para>
            </summary>
            <remark>
            xmlns:v = urn:schemas-microsoft-com:vml
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Background.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Arc">
             <summary>
             <para>Arc Segment.</para>
             <para> When the object is serialized out as xml, its qualified name is v:arc.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Path &lt;v:path></description></item>
            <item><description>Formulas &lt;v:formulas></description></item>
            <item><description>ShapeHandles &lt;v:handles></description></item>
            <item><description>Fill &lt;v:fill></description></item>
            <item><description>Stroke &lt;v:stroke></description></item>
            <item><description>Shadow &lt;v:shadow></description></item>
            <item><description>TextBox &lt;v:textbox></description></item>
            <item><description>TextPath &lt;v:textpath></description></item>
            <item><description>ImageData &lt;v:imagedata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Skew &lt;o:skew></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Extrusion &lt;o:extrusion></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Callout &lt;o:callout></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Lock &lt;o:lock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ClipPath &lt;o:clippath></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.SignatureLine &lt;o:signatureline></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap &lt;w10:wrap></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock &lt;w10:anchorlock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder &lt;w10:bordertop></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder &lt;w10:borderbottom></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder &lt;w10:borderleft></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder &lt;w10:borderright></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData &lt;xvml:ClientData></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Presentation.TextData &lt;pvml:textdata></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Arc.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.OptionalString">
             <summary>
             <para> Optional String.</para>
             <para>Represents the following attribute in the schema: o:spid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Oned">
             <summary>
             <para> Shape Handle Toggle.</para>
             <para>Represents the following attribute in the schema: o:oned </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.RegroupId">
             <summary>
             <para> Regroup ID.</para>
             <para>Represents the following attribute in the schema: o:regroupid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.DoubleClickNotify">
             <summary>
             <para> Double-click Notification Toggle.</para>
             <para>Represents the following attribute in the schema: o:doubleclicknotify </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Button">
             <summary>
             <para> Button Behavior Toggle.</para>
             <para>Represents the following attribute in the schema: o:button </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.UserHidden">
             <summary>
             <para> Hide Script Anchors.</para>
             <para>Represents the following attribute in the schema: o:userhidden </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Bullet">
             <summary>
             <para> Graphical Bullet.</para>
             <para>Represents the following attribute in the schema: o:bullet </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Horizontal">
             <summary>
             <para> Horizontal Rule Toggle.</para>
             <para>Represents the following attribute in the schema: o:hr </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.HorizontalStandard">
             <summary>
             <para> Horizontal Rule Standard Display Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrstd </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.HorizontalNoShade">
             <summary>
             <para> Horizontal Rule 3D Shading Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrnoshade </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.HorizontalPercentage">
             <summary>
             <para> Horizontal Rule Length Percentage.</para>
             <para>Represents the following attribute in the schema: o:hrpct </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.HorizontalAlignment">
             <summary>
             <para> Horizontal Rule Alignment.</para>
             <para>Represents the following attribute in the schema: o:hralign </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.AllowInCell">
             <summary>
             <para> Allow in Table Cell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.AllowOverlap">
             <summary>
             <para> Allow Shape Overlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.UserDrawn">
             <summary>
             <para> Exists In Master Slide.</para>
             <para>Represents the following attribute in the schema: o:userdrawn </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.BorderTopColor">
             <summary>
             <para> Border Top Color.</para>
             <para>Represents the following attribute in the schema: o:bordertopcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.BorderLeftColor">
             <summary>
             <para> Border Left Color.</para>
             <para>Represents the following attribute in the schema: o:borderleftcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.BorderBottomColor">
             <summary>
             <para> Bottom Border Color.</para>
             <para>Represents the following attribute in the schema: o:borderbottomcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.BorderRightColor">
             <summary>
             <para> Border Right Color.</para>
             <para>Represents the following attribute in the schema: o:borderrightcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.DiagramLayout">
             <summary>
             <para> Diagram Node Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayout </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.DiagramNodeKind">
             <summary>
             <para> Diagram Node Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmnodekind </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.DiagramLayoutMostRecentUsed">
             <summary>
             <para> Diagram Node Recent Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayoutmru </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.InsetMode">
             <summary>
             <para> Text Inset Mode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Filled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: filled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.FillColor">
            <summary>
            <para> Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Stroked">
            <summary>
            <para> Shape Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: stroked </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.StrokeColor">
            <summary>
            <para> Shape Stroke Color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.StrokeWeight">
            <summary>
            <para> Shape Stroke Weight.</para>
            <para>Represents the following attribute in the schema: strokeweight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.InsetPen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.OptionalNumber">
             <summary>
             <para> Optional Number.</para>
             <para>Represents the following attribute in the schema: o:spt </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.ConnectorType">
             <summary>
             <para> Shape Connector Type.</para>
             <para>Represents the following attribute in the schema: o:connectortype </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.BlackWhiteMode">
             <summary>
             <para> Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.PureBlackWhiteMode">
             <summary>
             <para> Pure Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwpure </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.NormalBlackWhiteMode">
             <summary>
             <para> Normal Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwnormal </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.OleIcon">
             <summary>
             <para> Embedded Object Icon Toggle.</para>
             <para>Represents the following attribute in the schema: o:oleicon </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Ole">
             <summary>
             <para> Embedded Object Toggle.</para>
             <para>Represents the following attribute in the schema: o:ole </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.PreferRelative">
             <summary>
             <para> Relative Resize Toggle.</para>
             <para>Represents the following attribute in the schema: o:preferrelative </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.ClipToWrap">
             <summary>
             <para> Clip to Wrapping Polygon.</para>
             <para>Represents the following attribute in the schema: o:cliptowrap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Clip">
             <summary>
             <para> Clipping Toggle.</para>
             <para>Represents the following attribute in the schema: o:clip </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Style">
            <summary>
            <para> Shape Styling Properties.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Href">
            <summary>
            <para> Hyperlink Target.</para>
            <para>Represents the following attribute in the schema: href </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Target">
            <summary>
            <para> Hyperlink Display Target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Title">
            <summary>
            <para> Shape Title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Alternate">
            <summary>
            <para> Alternate Text.</para>
            <para>Represents the following attribute in the schema: alt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.CoordinateSize">
            <summary>
            <para> Coordinate Space Size.</para>
            <para>Represents the following attribute in the schema: coordsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.CoordinateOrigin">
            <summary>
            <para> Coordinate Space Origin.</para>
            <para>Represents the following attribute in the schema: coordorigin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Wrapcoords">
            <summary>
            <para> Shape Bounding Polygon.</para>
            <para>Represents the following attribute in the schema: wrapcoords </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.Print">
            <summary>
            <para> Print Toggle.</para>
            <para>Represents the following attribute in the schema: print </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.StartAngle">
            <summary>
            <para> Starting Angle.</para>
            <para>Represents the following attribute in the schema: startangle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Arc.EndAngle">
            <summary>
            <para> Ending Angle.</para>
            <para>Represents the following attribute in the schema: endangle </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Arc.#ctor">
            <summary>
            Initializes a new instance of the Arc class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Arc.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Arc class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Arc.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Arc class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Arc.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Arc class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Arc.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Curve">
             <summary>
             <para>Bezier Curve.</para>
             <para> When the object is serialized out as xml, its qualified name is v:curve.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Path &lt;v:path></description></item>
            <item><description>Formulas &lt;v:formulas></description></item>
            <item><description>ShapeHandles &lt;v:handles></description></item>
            <item><description>Fill &lt;v:fill></description></item>
            <item><description>Stroke &lt;v:stroke></description></item>
            <item><description>Shadow &lt;v:shadow></description></item>
            <item><description>TextBox &lt;v:textbox></description></item>
            <item><description>TextPath &lt;v:textpath></description></item>
            <item><description>ImageData &lt;v:imagedata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Skew &lt;o:skew></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Extrusion &lt;o:extrusion></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Callout &lt;o:callout></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Lock &lt;o:lock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ClipPath &lt;o:clippath></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.SignatureLine &lt;o:signatureline></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap &lt;w10:wrap></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock &lt;w10:anchorlock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder &lt;w10:bordertop></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder &lt;w10:borderbottom></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder &lt;w10:borderleft></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder &lt;w10:borderright></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData &lt;xvml:ClientData></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Presentation.TextData &lt;pvml:textdata></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Curve.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Style">
            <summary>
            <para> Shape Styling Properties.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Href">
            <summary>
            <para> Hyperlink Target.</para>
            <para>Represents the following attribute in the schema: href </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Target">
            <summary>
            <para> Hyperlink Display Target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Class">
            <summary>
            <para> CSS Reference.</para>
            <para>Represents the following attribute in the schema: class </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Title">
            <summary>
            <para> Shape Title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Alternate">
            <summary>
            <para> Alternate Text.</para>
            <para>Represents the following attribute in the schema: alt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.CoordinateSize">
            <summary>
            <para> Coordinate Space Size.</para>
            <para>Represents the following attribute in the schema: coordsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.CoordinateOrigin">
            <summary>
            <para> Coordinate Space Origin.</para>
            <para>Represents the following attribute in the schema: coordorigin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.WrapCoordinates">
            <summary>
            <para> Shape Bounding Polygon.</para>
            <para>Represents the following attribute in the schema: wrapcoords </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Print">
            <summary>
            <para> Print Toggle.</para>
            <para>Represents the following attribute in the schema: print </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.OptionalString">
             <summary>
             <para> Optional String.</para>
             <para>Represents the following attribute in the schema: o:spid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Oned">
             <summary>
             <para> Shape Handle Toggle.</para>
             <para>Represents the following attribute in the schema: o:oned </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.RegroupId">
             <summary>
             <para> Regroup ID.</para>
             <para>Represents the following attribute in the schema: o:regroupid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.DoubleClickNotify">
             <summary>
             <para> Double-click Notification Toggle.</para>
             <para>Represents the following attribute in the schema: o:doubleclicknotify </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Button">
             <summary>
             <para> Button Behavior Toggle.</para>
             <para>Represents the following attribute in the schema: o:button </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.UserHidden">
             <summary>
             <para> Hide Script Anchors.</para>
             <para>Represents the following attribute in the schema: o:userhidden </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Bullet">
             <summary>
             <para> Graphical Bullet.</para>
             <para>Represents the following attribute in the schema: o:bullet </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Horizontal">
             <summary>
             <para> Horizontal Rule Toggle.</para>
             <para>Represents the following attribute in the schema: o:hr </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.HorizontalStandard">
             <summary>
             <para> Horizontal Rule Standard Display Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrstd </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.HorizontalNoShade">
             <summary>
             <para> Horizontal Rule 3D Shading Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrnoshade </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.HorizontalPercentage">
             <summary>
             <para> Horizontal Rule Length Percentage.</para>
             <para>Represents the following attribute in the schema: o:hrpct </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.HorizontalAlignment">
             <summary>
             <para> Horizontal Rule Alignment.</para>
             <para>Represents the following attribute in the schema: o:hralign </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.AllowInCell">
             <summary>
             <para> Allow in Table Cell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.AllowOverlap">
             <summary>
             <para> Allow Shape Overlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.UserDrawn">
             <summary>
             <para> Exists In Master Slide.</para>
             <para>Represents the following attribute in the schema: o:userdrawn </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.BorderTopColor">
             <summary>
             <para> Border Top Color.</para>
             <para>Represents the following attribute in the schema: o:bordertopcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.BorderLeftColor">
             <summary>
             <para> Border Left Color.</para>
             <para>Represents the following attribute in the schema: o:borderleftcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.BorderBottomColor">
             <summary>
             <para> Bottom Border Color.</para>
             <para>Represents the following attribute in the schema: o:borderbottomcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.BorderRightColor">
             <summary>
             <para> Border Right Color.</para>
             <para>Represents the following attribute in the schema: o:borderrightcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.DiagramLayout">
             <summary>
             <para> Diagram Node Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayout </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.DiagramNodeKind">
             <summary>
             <para> Diagram Node Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmnodekind </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.DiagramLayoutMostRecentUsed">
             <summary>
             <para> Diagram Node Recent Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayoutmru </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.InsetMode">
             <summary>
             <para> Text Inset Mode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Filled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: filled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.FillColor">
            <summary>
            <para> Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Stroked">
            <summary>
            <para> Shape Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: stroked </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.StrokeColor">
            <summary>
            <para> Shape Stroke Color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.StrokeWeight">
            <summary>
            <para> Shape Stroke Weight.</para>
            <para>Represents the following attribute in the schema: strokeweight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.InsetPen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.OptionalNumber">
             <summary>
             <para> Optional Number.</para>
             <para>Represents the following attribute in the schema: o:spt </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.ConnectorType">
             <summary>
             <para> Shape Connector Type.</para>
             <para>Represents the following attribute in the schema: o:connectortype </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.BlackWhiteMode">
             <summary>
             <para> Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.PureBlackWhiteMode">
             <summary>
             <para> Pure Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwpure </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.NormalBlackWhiteMode">
             <summary>
             <para> Normal Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwnormal </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.OleIcon">
             <summary>
             <para> Embedded Object Icon Toggle.</para>
             <para>Represents the following attribute in the schema: o:oleicon </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Ole">
             <summary>
             <para> Embedded Object Toggle.</para>
             <para>Represents the following attribute in the schema: o:ole </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.PreferRelative">
             <summary>
             <para> Relative Resize Toggle.</para>
             <para>Represents the following attribute in the schema: o:preferrelative </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.ClipToWrap">
             <summary>
             <para> Clip to Wrapping Polygon.</para>
             <para>Represents the following attribute in the schema: o:cliptowrap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Clip">
             <summary>
             <para> Clipping Toggle.</para>
             <para>Represents the following attribute in the schema: o:clip </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.From">
            <summary>
            <para> Curve Starting Point.</para>
            <para>Represents the following attribute in the schema: from </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Control1">
            <summary>
            <para> First Curve Control Point.</para>
            <para>Represents the following attribute in the schema: control1 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.Control2">
            <summary>
            <para> Second Curve Control Point.</para>
            <para>Represents the following attribute in the schema: control2 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Curve.To">
            <summary>
            <para> Curve Ending Point.</para>
            <para>Represents the following attribute in the schema: to </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Curve.#ctor">
            <summary>
            Initializes a new instance of the Curve class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Curve.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Curve class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Curve.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Curve class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Curve.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Curve class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Curve.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.ImageFile">
             <summary>
             <para>Image File.</para>
             <para> When the object is serialized out as xml, its qualified name is v:image.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Path &lt;v:path></description></item>
            <item><description>Formulas &lt;v:formulas></description></item>
            <item><description>ShapeHandles &lt;v:handles></description></item>
            <item><description>Fill &lt;v:fill></description></item>
            <item><description>Stroke &lt;v:stroke></description></item>
            <item><description>Shadow &lt;v:shadow></description></item>
            <item><description>TextBox &lt;v:textbox></description></item>
            <item><description>TextPath &lt;v:textpath></description></item>
            <item><description>ImageData &lt;v:imagedata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Skew &lt;o:skew></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Extrusion &lt;o:extrusion></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Callout &lt;o:callout></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Lock &lt;o:lock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ClipPath &lt;o:clippath></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.SignatureLine &lt;o:signatureline></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap &lt;w10:wrap></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock &lt;w10:anchorlock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder &lt;w10:bordertop></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder &lt;w10:borderbottom></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder &lt;w10:borderleft></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder &lt;w10:borderright></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData &lt;xvml:ClientData></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Presentation.TextData &lt;pvml:textdata></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ImageFile.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Style">
            <summary>
            <para> style.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Href">
            <summary>
            <para> href.</para>
            <para>Represents the following attribute in the schema: href </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Target">
            <summary>
            <para> target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Class">
            <summary>
            <para> class.</para>
            <para>Represents the following attribute in the schema: class </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Title">
            <summary>
            <para> title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Alternate">
            <summary>
            <para> alt.</para>
            <para>Represents the following attribute in the schema: alt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.CoordinateSize">
            <summary>
            <para> coordsize.</para>
            <para>Represents the following attribute in the schema: coordsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.WrapCoordinates">
            <summary>
            <para> wrapcoords.</para>
            <para>Represents the following attribute in the schema: wrapcoords </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Print">
            <summary>
            <para> print.</para>
            <para>Represents the following attribute in the schema: print </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.OptionalString">
             <summary>
             <para> Optional String.</para>
             <para>Represents the following attribute in the schema: o:spid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Oned">
             <summary>
             <para> Shape Handle Toggle.</para>
             <para>Represents the following attribute in the schema: o:oned </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.RegroupId">
             <summary>
             <para> Regroup ID.</para>
             <para>Represents the following attribute in the schema: o:regroupid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.DoubleClickNotify">
             <summary>
             <para> Double-click Notification Toggle.</para>
             <para>Represents the following attribute in the schema: o:doubleclicknotify </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Button">
             <summary>
             <para> Button Behavior Toggle.</para>
             <para>Represents the following attribute in the schema: o:button </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.UserHidden">
             <summary>
             <para> Hide Script Anchors.</para>
             <para>Represents the following attribute in the schema: o:userhidden </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Bullet">
             <summary>
             <para> Graphical Bullet.</para>
             <para>Represents the following attribute in the schema: o:bullet </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Horizontal">
             <summary>
             <para> Horizontal Rule Toggle.</para>
             <para>Represents the following attribute in the schema: o:hr </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.HorizontalStandard">
             <summary>
             <para> Horizontal Rule Standard Display Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrstd </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.HorizontalNoShade">
             <summary>
             <para> Horizontal Rule 3D Shading Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrnoshade </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.HorizontalPercentage">
             <summary>
             <para> Horizontal Rule Length Percentage.</para>
             <para>Represents the following attribute in the schema: o:hrpct </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.HorizontalAlignment">
             <summary>
             <para> Horizontal Rule Alignment.</para>
             <para>Represents the following attribute in the schema: o:hralign </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.AllowInCell">
             <summary>
             <para> Allow in Table Cell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.AllowOverlap">
             <summary>
             <para> Allow Shape Overlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.UserDrawn">
             <summary>
             <para> Exists In Master Slide.</para>
             <para>Represents the following attribute in the schema: o:userdrawn </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.BorderTopColor">
             <summary>
             <para> Border Top Color.</para>
             <para>Represents the following attribute in the schema: o:bordertopcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.BorderLeftColor">
             <summary>
             <para> Border Left Color.</para>
             <para>Represents the following attribute in the schema: o:borderleftcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.BorderBottomColor">
             <summary>
             <para> Bottom Border Color.</para>
             <para>Represents the following attribute in the schema: o:borderbottomcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.BorderRightColor">
             <summary>
             <para> Border Right Color.</para>
             <para>Represents the following attribute in the schema: o:borderrightcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.DiagramLayout">
             <summary>
             <para> Diagram Node Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayout </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.DiagramNodeKind">
             <summary>
             <para> Diagram Node Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmnodekind </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.DiagramLayoutMostRecentUsed">
             <summary>
             <para> Diagram Node Recent Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayoutmru </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.InsetMode">
             <summary>
             <para> Text Inset Mode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Filled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: filled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.FillColor">
            <summary>
            <para> Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Stroked">
            <summary>
            <para> Shape Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: stroked </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.StrokeColor">
            <summary>
            <para> Shape Stroke Color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.StrokeWeight">
            <summary>
            <para> Shape Stroke Weight.</para>
            <para>Represents the following attribute in the schema: strokeweight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.InsetPen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.OptionalNumber">
             <summary>
             <para> Optional Number.</para>
             <para>Represents the following attribute in the schema: o:spt </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.ConnectorType">
             <summary>
             <para> Shape Connector Type.</para>
             <para>Represents the following attribute in the schema: o:connectortype </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.BlackWhiteMode">
             <summary>
             <para> Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.PureBlackWhiteMode">
             <summary>
             <para> Pure Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwpure </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.NormalBlackWhiteMode">
             <summary>
             <para> Normal Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwnormal </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.OleIcon">
             <summary>
             <para> Embedded Object Icon Toggle.</para>
             <para>Represents the following attribute in the schema: o:oleicon </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Ole">
             <summary>
             <para> Embedded Object Toggle.</para>
             <para>Represents the following attribute in the schema: o:ole </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.PreferRelative">
             <summary>
             <para> Relative Resize Toggle.</para>
             <para>Represents the following attribute in the schema: o:preferrelative </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.ClipToWrap">
             <summary>
             <para> Clip to Wrapping Polygon.</para>
             <para>Represents the following attribute in the schema: o:cliptowrap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Clip">
             <summary>
             <para> Clipping Toggle.</para>
             <para>Represents the following attribute in the schema: o:clip </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Source">
            <summary>
            <para> Image Source.</para>
            <para>Represents the following attribute in the schema: src </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.CropLeft">
            <summary>
            <para> Image Left Crop.</para>
            <para>Represents the following attribute in the schema: cropleft </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.CropTop">
            <summary>
            <para> Image Top Crop.</para>
            <para>Represents the following attribute in the schema: croptop </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.CropRight">
            <summary>
            <para> Image Right Crop.</para>
            <para>Represents the following attribute in the schema: cropright </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.CropBottom">
            <summary>
            <para> Image Bottom Crop.</para>
            <para>Represents the following attribute in the schema: cropbottom </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Gain">
            <summary>
            <para> Image Intensity.</para>
            <para>Represents the following attribute in the schema: gain </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.BlackLevel">
            <summary>
            <para> Image Brightness.</para>
            <para>Represents the following attribute in the schema: blacklevel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.Gamma">
            <summary>
            <para> Image Gamma Correction.</para>
            <para>Represents the following attribute in the schema: gamma </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.GrayScale">
            <summary>
            <para> Image Grayscale Toggle.</para>
            <para>Represents the following attribute in the schema: grayscale </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ImageFile.BiLevel">
            <summary>
            <para> Image Bilevel Toggle.</para>
            <para>Represents the following attribute in the schema: bilevel </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ImageFile.#ctor">
            <summary>
            Initializes a new instance of the ImageFile class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ImageFile.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ImageFile class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ImageFile.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ImageFile class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ImageFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ImageFile class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ImageFile.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Line">
             <summary>
             <para>Line.</para>
             <para> When the object is serialized out as xml, its qualified name is v:line.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Path &lt;v:path></description></item>
            <item><description>Formulas &lt;v:formulas></description></item>
            <item><description>ShapeHandles &lt;v:handles></description></item>
            <item><description>Fill &lt;v:fill></description></item>
            <item><description>Stroke &lt;v:stroke></description></item>
            <item><description>Shadow &lt;v:shadow></description></item>
            <item><description>TextBox &lt;v:textbox></description></item>
            <item><description>TextPath &lt;v:textpath></description></item>
            <item><description>ImageData &lt;v:imagedata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Skew &lt;o:skew></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Extrusion &lt;o:extrusion></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Callout &lt;o:callout></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Lock &lt;o:lock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ClipPath &lt;o:clippath></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.SignatureLine &lt;o:signatureline></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap &lt;w10:wrap></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock &lt;w10:anchorlock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder &lt;w10:bordertop></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder &lt;w10:borderbottom></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder &lt;w10:borderleft></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder &lt;w10:borderright></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData &lt;xvml:ClientData></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Presentation.TextData &lt;pvml:textdata></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Line.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Style">
            <summary>
            <para> Shape Styling Properties.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Href">
            <summary>
            <para> Hyperlink Target.</para>
            <para>Represents the following attribute in the schema: href </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Target">
            <summary>
            <para> Hyperlink Display Target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Class">
            <summary>
            <para> CSS Reference.</para>
            <para>Represents the following attribute in the schema: class </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Title">
            <summary>
            <para> Shape Title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Alternate">
            <summary>
            <para> Alternate Text.</para>
            <para>Represents the following attribute in the schema: alt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.CoordinateSize">
            <summary>
            <para> Coordinate Space Size.</para>
            <para>Represents the following attribute in the schema: coordsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.CoordinateOrigin">
            <summary>
            <para> Coordinate Space Origin.</para>
            <para>Represents the following attribute in the schema: coordorigin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.WrapCoordinates">
            <summary>
            <para> Shape Bounding Polygon.</para>
            <para>Represents the following attribute in the schema: wrapcoords </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Print">
            <summary>
            <para> Print Toggle.</para>
            <para>Represents the following attribute in the schema: print </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.OptionalString">
             <summary>
             <para> Optional String.</para>
             <para>Represents the following attribute in the schema: o:spid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Oned">
             <summary>
             <para> Shape Handle Toggle.</para>
             <para>Represents the following attribute in the schema: o:oned </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.RegroupId">
             <summary>
             <para> Regroup ID.</para>
             <para>Represents the following attribute in the schema: o:regroupid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.DoubleClickNotify">
             <summary>
             <para> Double-click Notification Toggle.</para>
             <para>Represents the following attribute in the schema: o:doubleclicknotify </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Button">
             <summary>
             <para> Button Behavior Toggle.</para>
             <para>Represents the following attribute in the schema: o:button </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.UserHidden">
             <summary>
             <para> Hide Script Anchors.</para>
             <para>Represents the following attribute in the schema: o:userhidden </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Bullet">
             <summary>
             <para> Graphical Bullet.</para>
             <para>Represents the following attribute in the schema: o:bullet </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Horizontal">
             <summary>
             <para> Horizontal Rule Toggle.</para>
             <para>Represents the following attribute in the schema: o:hr </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.HorizontalStandard">
             <summary>
             <para> Horizontal Rule Standard Display Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrstd </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.HorizontalNoShade">
             <summary>
             <para> Horizontal Rule 3D Shading Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrnoshade </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.HorizontalPercentage">
             <summary>
             <para> Horizontal Rule Length Percentage.</para>
             <para>Represents the following attribute in the schema: o:hrpct </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.HorizontalAlignment">
             <summary>
             <para> Horizontal Rule Alignment.</para>
             <para>Represents the following attribute in the schema: o:hralign </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.AllowInCell">
             <summary>
             <para> Allow in Table Cell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.AllowOverlap">
             <summary>
             <para> Allow Shape Overlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.UserDrawn">
             <summary>
             <para> Exists In Master Slide.</para>
             <para>Represents the following attribute in the schema: o:userdrawn </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.BorderTopColor">
             <summary>
             <para> Border Top Color.</para>
             <para>Represents the following attribute in the schema: o:bordertopcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.BorderLeftColor">
             <summary>
             <para> Border Left Color.</para>
             <para>Represents the following attribute in the schema: o:borderleftcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.BorderBottomColor">
             <summary>
             <para> Bottom Border Color.</para>
             <para>Represents the following attribute in the schema: o:borderbottomcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.BorderRightColor">
             <summary>
             <para> Border Right Color.</para>
             <para>Represents the following attribute in the schema: o:borderrightcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.DiagramLayout">
             <summary>
             <para> Diagram Node Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayout </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.DiagramNodeKind">
             <summary>
             <para> Diagram Node Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmnodekind </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.DiagramLayoutMostRecentUsed">
             <summary>
             <para> Diagram Node Recent Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayoutmru </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.InsetMode">
             <summary>
             <para> Text Inset Mode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Filled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: filled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.FillColor">
            <summary>
            <para> Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Stroked">
            <summary>
            <para> Shape Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: stroked </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.StrokeColor">
            <summary>
            <para> Shape Stroke Color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.StrokeWeight">
            <summary>
            <para> Shape Stroke Weight.</para>
            <para>Represents the following attribute in the schema: strokeweight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.InsetPen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.OptionalNumber">
             <summary>
             <para> Optional Number.</para>
             <para>Represents the following attribute in the schema: o:spt </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.ConnectorType">
             <summary>
             <para> Shape Connector Type.</para>
             <para>Represents the following attribute in the schema: o:connectortype </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.BlackWhiteMode">
             <summary>
             <para> Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.PureBlackWhiteMode">
             <summary>
             <para> Pure Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwpure </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.NormalBlackWhiteMode">
             <summary>
             <para> Normal Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwnormal </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.OleIcon">
             <summary>
             <para> Embedded Object Icon Toggle.</para>
             <para>Represents the following attribute in the schema: o:oleicon </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Ole">
             <summary>
             <para> Embedded Object Toggle.</para>
             <para>Represents the following attribute in the schema: o:ole </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.PreferRelative">
             <summary>
             <para> Relative Resize Toggle.</para>
             <para>Represents the following attribute in the schema: o:preferrelative </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.ClipToWrap">
             <summary>
             <para> Clip to Wrapping Polygon.</para>
             <para>Represents the following attribute in the schema: o:cliptowrap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.Clip">
             <summary>
             <para> Clipping Toggle.</para>
             <para>Represents the following attribute in the schema: o:clip </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.From">
            <summary>
            <para> Line Start.</para>
            <para>Represents the following attribute in the schema: from </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Line.To">
            <summary>
            <para> Line End Point.</para>
            <para>Represents the following attribute in the schema: to </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Line.#ctor">
            <summary>
            Initializes a new instance of the Line class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Line.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Line class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Line.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Line class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Line.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Line class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Line.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Oval">
             <summary>
             <para>Oval.</para>
             <para> When the object is serialized out as xml, its qualified name is v:oval.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Path &lt;v:path></description></item>
            <item><description>Formulas &lt;v:formulas></description></item>
            <item><description>ShapeHandles &lt;v:handles></description></item>
            <item><description>Fill &lt;v:fill></description></item>
            <item><description>Stroke &lt;v:stroke></description></item>
            <item><description>Shadow &lt;v:shadow></description></item>
            <item><description>TextBox &lt;v:textbox></description></item>
            <item><description>TextPath &lt;v:textpath></description></item>
            <item><description>ImageData &lt;v:imagedata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Skew &lt;o:skew></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Extrusion &lt;o:extrusion></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Callout &lt;o:callout></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Lock &lt;o:lock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ClipPath &lt;o:clippath></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.SignatureLine &lt;o:signatureline></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap &lt;w10:wrap></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock &lt;w10:anchorlock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder &lt;w10:bordertop></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder &lt;w10:borderbottom></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder &lt;w10:borderleft></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder &lt;w10:borderright></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData &lt;xvml:ClientData></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Presentation.TextData &lt;pvml:textdata></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Oval.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Style">
            <summary>
            <para> Shape Styling Properties.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Href">
            <summary>
            <para> Hyperlink Target.</para>
            <para>Represents the following attribute in the schema: href </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Target">
            <summary>
            <para> Hyperlink Display Target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Class">
            <summary>
            <para> CSS Reference.</para>
            <para>Represents the following attribute in the schema: class </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Title">
            <summary>
            <para> Shape Title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Alternate">
            <summary>
            <para> Alternate Text.</para>
            <para>Represents the following attribute in the schema: alt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.CoordinateSize">
            <summary>
            <para> Coordinate Space Size.</para>
            <para>Represents the following attribute in the schema: coordsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.CoordinateOrigin">
            <summary>
            <para> Coordinate Space Origin.</para>
            <para>Represents the following attribute in the schema: coordorigin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.WrapCoordinates">
            <summary>
            <para> Shape Bounding Polygon.</para>
            <para>Represents the following attribute in the schema: wrapcoords </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Print">
            <summary>
            <para> Print Toggle.</para>
            <para>Represents the following attribute in the schema: print </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.OptionalString">
             <summary>
             <para> Optional String.</para>
             <para>Represents the following attribute in the schema: o:spid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Oned">
             <summary>
             <para> Shape Handle Toggle.</para>
             <para>Represents the following attribute in the schema: o:oned </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.RegroupId">
             <summary>
             <para> Regroup ID.</para>
             <para>Represents the following attribute in the schema: o:regroupid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.DoubleClickNotify">
             <summary>
             <para> Double-click Notification Toggle.</para>
             <para>Represents the following attribute in the schema: o:doubleclicknotify </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Button">
             <summary>
             <para> Button Behavior Toggle.</para>
             <para>Represents the following attribute in the schema: o:button </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.UserHidden">
             <summary>
             <para> Hide Script Anchors.</para>
             <para>Represents the following attribute in the schema: o:userhidden </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Bullet">
             <summary>
             <para> Graphical Bullet.</para>
             <para>Represents the following attribute in the schema: o:bullet </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Horizontal">
             <summary>
             <para> Horizontal Rule Toggle.</para>
             <para>Represents the following attribute in the schema: o:hr </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.HorizontalStandard">
             <summary>
             <para> Horizontal Rule Standard Display Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrstd </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.HorizontalNoShade">
             <summary>
             <para> Horizontal Rule 3D Shading Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrnoshade </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.HorizontalPercentage">
             <summary>
             <para> Horizontal Rule Length Percentage.</para>
             <para>Represents the following attribute in the schema: o:hrpct </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.HorizontalAlignment">
             <summary>
             <para> Horizontal Rule Alignment.</para>
             <para>Represents the following attribute in the schema: o:hralign </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.AllowInCell">
             <summary>
             <para> Allow in Table Cell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.AllowOverlap">
             <summary>
             <para> Allow Shape Overlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.UserDrawn">
             <summary>
             <para> Exists In Master Slide.</para>
             <para>Represents the following attribute in the schema: o:userdrawn </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.BorderTopColor">
             <summary>
             <para> Border Top Color.</para>
             <para>Represents the following attribute in the schema: o:bordertopcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.BorderLeftColor">
             <summary>
             <para> Border Left Color.</para>
             <para>Represents the following attribute in the schema: o:borderleftcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.BorderBottomColor">
             <summary>
             <para> Bottom Border Color.</para>
             <para>Represents the following attribute in the schema: o:borderbottomcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.BorderRightColor">
             <summary>
             <para> Border Right Color.</para>
             <para>Represents the following attribute in the schema: o:borderrightcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.DiagramLayout">
             <summary>
             <para> Diagram Node Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayout </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.DiagramNodeKind">
             <summary>
             <para> Diagram Node Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmnodekind </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.DiagramLayoutMostRecentUsed">
             <summary>
             <para> Diagram Node Recent Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayoutmru </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.InsetMode">
             <summary>
             <para> Text Inset Mode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Filled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: filled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.FillColor">
            <summary>
            <para> Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Stroked">
            <summary>
            <para> Shape Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: stroked </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.StrokeColor">
            <summary>
            <para> Shape Stroke Color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.StrokeWeight">
            <summary>
            <para> Shape Stroke Weight.</para>
            <para>Represents the following attribute in the schema: strokeweight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.InsetPen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.OptionalNumber">
             <summary>
             <para> Optional Number.</para>
             <para>Represents the following attribute in the schema: o:spt </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.ConnectorType">
             <summary>
             <para> Shape Connector Type.</para>
             <para>Represents the following attribute in the schema: o:connectortype </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.BlackWhiteMode">
             <summary>
             <para> Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.PureBlackWhiteMode">
             <summary>
             <para> Pure Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwpure </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.NormalBlackWhiteMode">
             <summary>
             <para> Normal Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwnormal </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.OleIcon">
             <summary>
             <para> Embedded Object Icon Toggle.</para>
             <para>Represents the following attribute in the schema: o:oleicon </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Ole">
             <summary>
             <para> Embedded Object Toggle.</para>
             <para>Represents the following attribute in the schema: o:ole </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.PreferRelative">
             <summary>
             <para> Relative Resize Toggle.</para>
             <para>Represents the following attribute in the schema: o:preferrelative </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.ClipToWrap">
             <summary>
             <para> Clip to Wrapping Polygon.</para>
             <para>Represents the following attribute in the schema: o:cliptowrap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Oval.Clip">
             <summary>
             <para> Clipping Toggle.</para>
             <para>Represents the following attribute in the schema: o:clip </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Oval.#ctor">
            <summary>
            Initializes a new instance of the Oval class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Oval.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Oval class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Oval.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Oval class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Oval.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Oval class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Oval.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.PolyLine">
             <summary>
             <para>Multiple Path Line.</para>
             <para> When the object is serialized out as xml, its qualified name is v:polyline.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Path &lt;v:path></description></item>
            <item><description>Formulas &lt;v:formulas></description></item>
            <item><description>ShapeHandles &lt;v:handles></description></item>
            <item><description>Fill &lt;v:fill></description></item>
            <item><description>Stroke &lt;v:stroke></description></item>
            <item><description>Shadow &lt;v:shadow></description></item>
            <item><description>TextBox &lt;v:textbox></description></item>
            <item><description>TextPath &lt;v:textpath></description></item>
            <item><description>ImageData &lt;v:imagedata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Skew &lt;o:skew></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Extrusion &lt;o:extrusion></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Callout &lt;o:callout></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Lock &lt;o:lock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ClipPath &lt;o:clippath></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.SignatureLine &lt;o:signatureline></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap &lt;w10:wrap></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock &lt;w10:anchorlock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder &lt;w10:bordertop></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder &lt;w10:borderbottom></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder &lt;w10:borderleft></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder &lt;w10:borderright></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData &lt;xvml:ClientData></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Presentation.TextData &lt;pvml:textdata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Ink &lt;o:ink></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.PolyLine.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Style">
            <summary>
            <para> Shape Styling Properties.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Href">
            <summary>
            <para> Hyperlink Target.</para>
            <para>Represents the following attribute in the schema: href </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Target">
            <summary>
            <para> Hyperlink Display Target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Class">
            <summary>
            <para> CSS Reference.</para>
            <para>Represents the following attribute in the schema: class </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Title">
            <summary>
            <para> Shape Title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Alternate">
            <summary>
            <para> Alternate Text.</para>
            <para>Represents the following attribute in the schema: alt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.CoordinateSize">
            <summary>
            <para> Coordinate Space Size.</para>
            <para>Represents the following attribute in the schema: coordsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.CoordinateOrigin">
            <summary>
            <para> Coordinate Space Origin.</para>
            <para>Represents the following attribute in the schema: coordorigin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.WrapCoordinates">
            <summary>
            <para> Shape Bounding Polygon.</para>
            <para>Represents the following attribute in the schema: wrapcoords </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Print">
            <summary>
            <para> Print Toggle.</para>
            <para>Represents the following attribute in the schema: print </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.OptionalString">
             <summary>
             <para> Optional String.</para>
             <para>Represents the following attribute in the schema: o:spid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Oned">
             <summary>
             <para> Shape Handle Toggle.</para>
             <para>Represents the following attribute in the schema: o:oned </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.RegroupId">
             <summary>
             <para> Regroup ID.</para>
             <para>Represents the following attribute in the schema: o:regroupid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.DoubleClickNotify">
             <summary>
             <para> Double-click Notification Toggle.</para>
             <para>Represents the following attribute in the schema: o:doubleclicknotify </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Button">
             <summary>
             <para> Button Behavior Toggle.</para>
             <para>Represents the following attribute in the schema: o:button </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.UserHidden">
             <summary>
             <para> Hide Script Anchors.</para>
             <para>Represents the following attribute in the schema: o:userhidden </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Bullet">
             <summary>
             <para> Graphical Bullet.</para>
             <para>Represents the following attribute in the schema: o:bullet </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Horizontal">
             <summary>
             <para> Horizontal Rule Toggle.</para>
             <para>Represents the following attribute in the schema: o:hr </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.HorizontalStandard">
             <summary>
             <para> Horizontal Rule Standard Display Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrstd </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.HorizontalNoShade">
             <summary>
             <para> Horizontal Rule 3D Shading Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrnoshade </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.HorizontalPercentage">
             <summary>
             <para> Horizontal Rule Length Percentage.</para>
             <para>Represents the following attribute in the schema: o:hrpct </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.HorizontalAlignment">
             <summary>
             <para> Horizontal Rule Alignment.</para>
             <para>Represents the following attribute in the schema: o:hralign </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.AllowInCell">
             <summary>
             <para> Allow in Table Cell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.AllowOverlap">
             <summary>
             <para> Allow Shape Overlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.UserDrawn">
             <summary>
             <para> Exists In Master Slide.</para>
             <para>Represents the following attribute in the schema: o:userdrawn </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.BorderTopColor">
             <summary>
             <para> Border Top Color.</para>
             <para>Represents the following attribute in the schema: o:bordertopcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.BorderLeftColor">
             <summary>
             <para> Border Left Color.</para>
             <para>Represents the following attribute in the schema: o:borderleftcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.BorderBottomColor">
             <summary>
             <para> Bottom Border Color.</para>
             <para>Represents the following attribute in the schema: o:borderbottomcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.BorderRightColor">
             <summary>
             <para> Border Right Color.</para>
             <para>Represents the following attribute in the schema: o:borderrightcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.DiagramLayout">
             <summary>
             <para> Diagram Node Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayout </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.DiagramNodeKind">
             <summary>
             <para> Diagram Node Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmnodekind </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.DiagramLayoutMostRecentUsed">
             <summary>
             <para> Diagram Node Recent Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayoutmru </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.InsetMode">
             <summary>
             <para> Text Inset Mode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Filled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: filled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.FillColor">
            <summary>
            <para> Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Stroked">
            <summary>
            <para> Shape Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: stroked </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.StrokeColor">
            <summary>
            <para> Shape Stroke Color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.StrokeWeight">
            <summary>
            <para> Shape Stroke Weight.</para>
            <para>Represents the following attribute in the schema: strokeweight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.InsetPen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.OptionalNumber">
             <summary>
             <para> Optional Number.</para>
             <para>Represents the following attribute in the schema: o:spt </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.ConnectorType">
             <summary>
             <para> Shape Connector Type.</para>
             <para>Represents the following attribute in the schema: o:connectortype </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.BlackWhiteMode">
             <summary>
             <para> Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.PureBlackWhiteMode">
             <summary>
             <para> Pure Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwpure </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.NormalBlackWhiteMode">
             <summary>
             <para> Normal Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwnormal </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.OleIcon">
             <summary>
             <para> Embedded Object Icon Toggle.</para>
             <para>Represents the following attribute in the schema: o:oleicon </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Ole">
             <summary>
             <para> Embedded Object Toggle.</para>
             <para>Represents the following attribute in the schema: o:ole </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.PreferRelative">
             <summary>
             <para> Relative Resize Toggle.</para>
             <para>Represents the following attribute in the schema: o:preferrelative </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.ClipToWrap">
             <summary>
             <para> Clip to Wrapping Polygon.</para>
             <para>Represents the following attribute in the schema: o:cliptowrap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Clip">
             <summary>
             <para> Clipping Toggle.</para>
             <para>Represents the following attribute in the schema: o:clip </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.PolyLine.Points">
            <summary>
            <para> Points for Compound Line.</para>
            <para>Represents the following attribute in the schema: points </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.PolyLine.#ctor">
            <summary>
            Initializes a new instance of the PolyLine class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.PolyLine.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the PolyLine class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.PolyLine.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the PolyLine class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.PolyLine.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PolyLine class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.PolyLine.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Rectangle">
             <summary>
             <para>Rectangle.</para>
             <para> When the object is serialized out as xml, its qualified name is v:rect.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Path &lt;v:path></description></item>
            <item><description>Formulas &lt;v:formulas></description></item>
            <item><description>ShapeHandles &lt;v:handles></description></item>
            <item><description>Fill &lt;v:fill></description></item>
            <item><description>Stroke &lt;v:stroke></description></item>
            <item><description>Shadow &lt;v:shadow></description></item>
            <item><description>TextBox &lt;v:textbox></description></item>
            <item><description>TextPath &lt;v:textpath></description></item>
            <item><description>ImageData &lt;v:imagedata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Skew &lt;o:skew></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Extrusion &lt;o:extrusion></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Callout &lt;o:callout></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Lock &lt;o:lock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ClipPath &lt;o:clippath></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.SignatureLine &lt;o:signatureline></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap &lt;w10:wrap></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock &lt;w10:anchorlock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder &lt;w10:bordertop></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder &lt;w10:borderbottom></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder &lt;w10:borderleft></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder &lt;w10:borderright></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData &lt;xvml:ClientData></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Presentation.TextData &lt;pvml:textdata></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Rectangle.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Style">
            <summary>
            <para> Shape Styling Properties.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Href">
            <summary>
            <para> Hyperlink Target.</para>
            <para>Represents the following attribute in the schema: href </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Target">
            <summary>
            <para> Hyperlink Display Target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Class">
            <summary>
            <para> CSS Reference.</para>
            <para>Represents the following attribute in the schema: class </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Title">
            <summary>
            <para> Shape Title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Alternate">
            <summary>
            <para> Alternate Text.</para>
            <para>Represents the following attribute in the schema: alt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.CoordinateSize">
            <summary>
            <para> Coordinate Space Size.</para>
            <para>Represents the following attribute in the schema: coordsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.CoordinateOrigin">
            <summary>
            <para> Coordinate Space Origin.</para>
            <para>Represents the following attribute in the schema: coordorigin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.WrapCoordinates">
            <summary>
            <para> Shape Bounding Polygon.</para>
            <para>Represents the following attribute in the schema: wrapcoords </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Print">
            <summary>
            <para> Print Toggle.</para>
            <para>Represents the following attribute in the schema: print </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.OptionalString">
             <summary>
             <para> Optional String.</para>
             <para>Represents the following attribute in the schema: o:spid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Oned">
             <summary>
             <para> Shape Handle Toggle.</para>
             <para>Represents the following attribute in the schema: o:oned </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.RegroupId">
             <summary>
             <para> Regroup ID.</para>
             <para>Represents the following attribute in the schema: o:regroupid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.DoubleClickNotify">
             <summary>
             <para> Double-click Notification Toggle.</para>
             <para>Represents the following attribute in the schema: o:doubleclicknotify </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Button">
             <summary>
             <para> Button Behavior Toggle.</para>
             <para>Represents the following attribute in the schema: o:button </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.UserHidden">
             <summary>
             <para> Hide Script Anchors.</para>
             <para>Represents the following attribute in the schema: o:userhidden </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Bullet">
             <summary>
             <para> Graphical Bullet.</para>
             <para>Represents the following attribute in the schema: o:bullet </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Horizontal">
             <summary>
             <para> Horizontal Rule Toggle.</para>
             <para>Represents the following attribute in the schema: o:hr </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.HorizontalStandard">
             <summary>
             <para> Horizontal Rule Standard Display Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrstd </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.HorizontalNoShade">
             <summary>
             <para> Horizontal Rule 3D Shading Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrnoshade </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.HorizontalPercentage">
             <summary>
             <para> Horizontal Rule Length Percentage.</para>
             <para>Represents the following attribute in the schema: o:hrpct </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.HorizontalAlignment">
             <summary>
             <para> Horizontal Rule Alignment.</para>
             <para>Represents the following attribute in the schema: o:hralign </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.AllowInCell">
             <summary>
             <para> Allow in Table Cell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.AllowOverlap">
             <summary>
             <para> Allow Shape Overlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.UserDrawn">
             <summary>
             <para> Exists In Master Slide.</para>
             <para>Represents the following attribute in the schema: o:userdrawn </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.BorderTopColor">
             <summary>
             <para> Border Top Color.</para>
             <para>Represents the following attribute in the schema: o:bordertopcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.BorderLeftColor">
             <summary>
             <para> Border Left Color.</para>
             <para>Represents the following attribute in the schema: o:borderleftcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.BorderBottomColor">
             <summary>
             <para> Bottom Border Color.</para>
             <para>Represents the following attribute in the schema: o:borderbottomcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.BorderRightColor">
             <summary>
             <para> Border Right Color.</para>
             <para>Represents the following attribute in the schema: o:borderrightcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.DiagramLayout">
             <summary>
             <para> Diagram Node Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayout </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.DiagramNodeKind">
             <summary>
             <para> Diagram Node Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmnodekind </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.DiagramLayoutMostRecentUsed">
             <summary>
             <para> Diagram Node Recent Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayoutmru </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.InsetMode">
             <summary>
             <para> Text Inset Mode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Filled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: filled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.FillColor">
            <summary>
            <para> Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Stroked">
            <summary>
            <para> Shape Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: stroked </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.StrokeColor">
            <summary>
            <para> Shape Stroke Color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.StrokeWeight">
            <summary>
            <para> Shape Stroke Weight.</para>
            <para>Represents the following attribute in the schema: strokeweight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.InsetPen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.OptionalNumber">
             <summary>
             <para> Optional Number.</para>
             <para>Represents the following attribute in the schema: o:spt </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.ConnectorType">
             <summary>
             <para> Shape Connector Type.</para>
             <para>Represents the following attribute in the schema: o:connectortype </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.BlackWhiteMode">
             <summary>
             <para> Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.PureBlackWhiteMode">
             <summary>
             <para> Pure Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwpure </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.NormalBlackWhiteMode">
             <summary>
             <para> Normal Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwnormal </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.OleIcon">
             <summary>
             <para> Embedded Object Icon Toggle.</para>
             <para>Represents the following attribute in the schema: o:oleicon </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Ole">
             <summary>
             <para> Embedded Object Toggle.</para>
             <para>Represents the following attribute in the schema: o:ole </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.PreferRelative">
             <summary>
             <para> Relative Resize Toggle.</para>
             <para>Represents the following attribute in the schema: o:preferrelative </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.ClipToWrap">
             <summary>
             <para> Clip to Wrapping Polygon.</para>
             <para>Represents the following attribute in the schema: o:cliptowrap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Rectangle.Clip">
             <summary>
             <para> Clipping Toggle.</para>
             <para>Represents the following attribute in the schema: o:clip </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Rectangle.#ctor">
            <summary>
            Initializes a new instance of the Rectangle class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Rectangle.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Rectangle class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Rectangle.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Rectangle class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Rectangle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Rectangle class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Rectangle.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.RoundRectangle">
             <summary>
             <para>Rounded Rectangle.</para>
             <para> When the object is serialized out as xml, its qualified name is v:roundrect.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Path &lt;v:path></description></item>
            <item><description>Formulas &lt;v:formulas></description></item>
            <item><description>ShapeHandles &lt;v:handles></description></item>
            <item><description>Fill &lt;v:fill></description></item>
            <item><description>Stroke &lt;v:stroke></description></item>
            <item><description>Shadow &lt;v:shadow></description></item>
            <item><description>TextBox &lt;v:textbox></description></item>
            <item><description>TextPath &lt;v:textpath></description></item>
            <item><description>ImageData &lt;v:imagedata></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Skew &lt;o:skew></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Extrusion &lt;o:extrusion></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Callout &lt;o:callout></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.Lock &lt;o:lock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.ClipPath &lt;o:clippath></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Office.SignatureLine &lt;o:signatureline></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TextWrap &lt;w10:wrap></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.AnchorLock &lt;w10:anchorlock></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.TopBorder &lt;w10:bordertop></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.BottomBorder &lt;w10:borderbottom></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.LeftBorder &lt;w10:borderleft></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Wordprocessing.RightBorder &lt;w10:borderright></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Spreadsheet.ClientData &lt;xvml:ClientData></description></item>
            <item><description>DocumentFormat.OpenXml.Vml.Presentation.TextData &lt;pvml:textdata></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.RoundRectangle.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Id">
            <summary>
            <para> Unique Identifier.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Style">
            <summary>
            <para> style.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Href">
            <summary>
            <para> href.</para>
            <para>Represents the following attribute in the schema: href </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Target">
            <summary>
            <para> target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Class">
            <summary>
            <para> class.</para>
            <para>Represents the following attribute in the schema: class </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Title">
            <summary>
            <para> title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Alternate">
            <summary>
            <para> alt.</para>
            <para>Represents the following attribute in the schema: alt </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.CoordinateSize">
            <summary>
            <para> coordsize.</para>
            <para>Represents the following attribute in the schema: coordsize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.WrapCoordinates">
            <summary>
            <para> wrapcoords.</para>
            <para>Represents the following attribute in the schema: wrapcoords </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Print">
            <summary>
            <para> print.</para>
            <para>Represents the following attribute in the schema: print </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.OptionalString">
             <summary>
             <para> Optional String.</para>
             <para>Represents the following attribute in the schema: o:spid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Oned">
             <summary>
             <para> Shape Handle Toggle.</para>
             <para>Represents the following attribute in the schema: o:oned </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.RegroupId">
             <summary>
             <para> Regroup ID.</para>
             <para>Represents the following attribute in the schema: o:regroupid </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.DoubleClickNotify">
             <summary>
             <para> Double-click Notification Toggle.</para>
             <para>Represents the following attribute in the schema: o:doubleclicknotify </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Button">
             <summary>
             <para> Button Behavior Toggle.</para>
             <para>Represents the following attribute in the schema: o:button </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.UserHidden">
             <summary>
             <para> Hide Script Anchors.</para>
             <para>Represents the following attribute in the schema: o:userhidden </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Bullet">
             <summary>
             <para> Graphical Bullet.</para>
             <para>Represents the following attribute in the schema: o:bullet </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Horizontal">
             <summary>
             <para> Horizontal Rule Toggle.</para>
             <para>Represents the following attribute in the schema: o:hr </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.HorizontalStandard">
             <summary>
             <para> Horizontal Rule Standard Display Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrstd </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.HorizontalNoShade">
             <summary>
             <para> Horizontal Rule 3D Shading Toggle.</para>
             <para>Represents the following attribute in the schema: o:hrnoshade </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.HorizontalPercentage">
             <summary>
             <para> Horizontal Rule Length Percentage.</para>
             <para>Represents the following attribute in the schema: o:hrpct </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.HorizontalAlignment">
             <summary>
             <para> Horizontal Rule Alignment.</para>
             <para>Represents the following attribute in the schema: o:hralign </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.AllowInCell">
             <summary>
             <para> Allow in Table Cell.</para>
             <para>Represents the following attribute in the schema: o:allowincell </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.AllowOverlap">
             <summary>
             <para> Allow Shape Overlap.</para>
             <para>Represents the following attribute in the schema: o:allowoverlap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.UserDrawn">
             <summary>
             <para> Exists In Master Slide.</para>
             <para>Represents the following attribute in the schema: o:userdrawn </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.BorderTopColor">
             <summary>
             <para> Border Top Color.</para>
             <para>Represents the following attribute in the schema: o:bordertopcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.BorderLeftColor">
             <summary>
             <para> Border Left Color.</para>
             <para>Represents the following attribute in the schema: o:borderleftcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.BorderBottomColor">
             <summary>
             <para> Bottom Border Color.</para>
             <para>Represents the following attribute in the schema: o:borderbottomcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.BorderRightColor">
             <summary>
             <para> Border Right Color.</para>
             <para>Represents the following attribute in the schema: o:borderrightcolor </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.DiagramLayout">
             <summary>
             <para> Diagram Node Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayout </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.DiagramNodeKind">
             <summary>
             <para> Diagram Node Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmnodekind </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.DiagramLayoutMostRecentUsed">
             <summary>
             <para> Diagram Node Recent Layout Identifier.</para>
             <para>Represents the following attribute in the schema: o:dgmlayoutmru </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.InsetMode">
             <summary>
             <para> Text Inset Mode.</para>
             <para>Represents the following attribute in the schema: o:insetmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Filled">
            <summary>
            <para> Shape Fill Toggle.</para>
            <para>Represents the following attribute in the schema: filled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.FillColor">
            <summary>
            <para> Fill Color.</para>
            <para>Represents the following attribute in the schema: fillcolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Stroked">
            <summary>
            <para> Shape Stroke Toggle.</para>
            <para>Represents the following attribute in the schema: stroked </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.StrokeColor">
            <summary>
            <para> Shape Stroke Color.</para>
            <para>Represents the following attribute in the schema: strokecolor </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.StrokeWeight">
            <summary>
            <para> Shape Stroke Weight.</para>
            <para>Represents the following attribute in the schema: strokeweight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.InsetPen">
            <summary>
            <para> Inset Border From Path.</para>
            <para>Represents the following attribute in the schema: insetpen </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.OptionalNumber">
             <summary>
             <para> Optional Number.</para>
             <para>Represents the following attribute in the schema: o:spt </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.ConnectorType">
             <summary>
             <para> Shape Connector Type.</para>
             <para>Represents the following attribute in the schema: o:connectortype </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.BlackWhiteMode">
             <summary>
             <para> Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwmode </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.PureBlackWhiteMode">
             <summary>
             <para> Pure Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwpure </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.NormalBlackWhiteMode">
             <summary>
             <para> Normal Black-and-White Mode.</para>
             <para>Represents the following attribute in the schema: o:bwnormal </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.ForceDash">
             <summary>
             <para> Force Dashed Outline.</para>
             <para>Represents the following attribute in the schema: o:forcedash </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.OleIcon">
             <summary>
             <para> Embedded Object Icon Toggle.</para>
             <para>Represents the following attribute in the schema: o:oleicon </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Ole">
             <summary>
             <para> Embedded Object Toggle.</para>
             <para>Represents the following attribute in the schema: o:ole </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.PreferRelative">
             <summary>
             <para> Relative Resize Toggle.</para>
             <para>Represents the following attribute in the schema: o:preferrelative </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.ClipToWrap">
             <summary>
             <para> Clip to Wrapping Polygon.</para>
             <para>Represents the following attribute in the schema: o:cliptowrap </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.Clip">
             <summary>
             <para> Clipping Toggle.</para>
             <para>Represents the following attribute in the schema: o:clip </para>
             </summary>
            <remark> xmlns:o=urn:schemas-microsoft-com:office:office
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.RoundRectangle.ArcSize">
            <summary>
            <para> Rounded Corner Arc Size.</para>
            <para>Represents the following attribute in the schema: arcsize </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.RoundRectangle.#ctor">
            <summary>
            Initializes a new instance of the RoundRectangle class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.RoundRectangle.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the RoundRectangle class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.RoundRectangle.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the RoundRectangle class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.RoundRectangle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RoundRectangle class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.RoundRectangle.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.ShapeHandle">
            <summary>
            <para>Shape Handle.</para>
            <para> When the object is serialized out as xml, its qualified name is v:h.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandle.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandle.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ShapeHandle.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandle.Position">
            <summary>
            <para> Handle Position.</para>
            <para>Represents the following attribute in the schema: position </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandle.Polar">
            <summary>
            <para> Handle Polar Center.</para>
            <para>Represents the following attribute in the schema: polar </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandle.Map">
            <summary>
            <para> Handle Coordinate Mapping.</para>
            <para>Represents the following attribute in the schema: map </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandle.InvertX">
            <summary>
            <para> Invert Handle's X Position.</para>
            <para>Represents the following attribute in the schema: invx </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandle.InvertY">
            <summary>
            <para> Invert Handle's Y Position.</para>
            <para>Represents the following attribute in the schema: invy </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandle.Switch">
            <summary>
            <para> Handle Inversion Toggle.</para>
            <para>Represents the following attribute in the schema: switch </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandle.XRange">
            <summary>
            <para> Handle X Position Range.</para>
            <para>Represents the following attribute in the schema: xrange </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandle.YRange">
            <summary>
            <para> Handle Y Position Range.</para>
            <para>Represents the following attribute in the schema: yrange </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.ShapeHandle.RadiusRange">
            <summary>
            <para> Handle Polar Radius Range.</para>
            <para>Represents the following attribute in the schema: radiusrange </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ShapeHandle.#ctor">
            <summary>
            Initializes a new instance of the ShapeHandle class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.ShapeHandle.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.Formula">
            <summary>
            <para>Single Formula.</para>
            <para> When the object is serialized out as xml, its qualified name is v:f.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Formula.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Formula.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Formula.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Vml.Formula.Equation">
            <summary>
            <para> Equation.</para>
            <para>Represents the following attribute in the schema: eqn </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Formula.#ctor">
            <summary>
            Initializes a new instance of the Formula class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Vml.Formula.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.ExtensionHandlingBehaviorValues">
            <summary>
            VML Extension Handling Behaviors 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ExtensionHandlingBehaviorValues.View">
            <summary>
            Not renderable.
            <para>When the item is serialized out as xml, its value is "view".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ExtensionHandlingBehaviorValues.Edit">
            <summary>
            Editable.
            <para>When the item is serialized out as xml, its value is "edit".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ExtensionHandlingBehaviorValues.BackwardCompatible">
            <summary>
            Renderable.
            <para>When the item is serialized out as xml, its value is "backwardCompatible".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.FillTypeValues">
            <summary>
            Shape Fill Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.FillTypeValues.Solid">
            <summary>
            Solid Fill.
            <para>When the item is serialized out as xml, its value is "solid".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.FillTypeValues.Gradient">
            <summary>
            Linear Gradient.
            <para>When the item is serialized out as xml, its value is "gradient".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.FillTypeValues.GradientRadial">
            <summary>
            Radial Gradient.
            <para>When the item is serialized out as xml, its value is "gradientRadial".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.FillTypeValues.Tile">
            <summary>
            Tiled Image.
            <para>When the item is serialized out as xml, its value is "tile".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.FillTypeValues.Pattern">
            <summary>
            Image Pattern.
            <para>When the item is serialized out as xml, its value is "pattern".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.FillTypeValues.Frame">
            <summary>
            Stretch Image to Fit.
            <para>When the item is serialized out as xml, its value is "frame".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.FillMethodValues">
            <summary>
            Gradient Fill Computation Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.FillMethodValues.None">
            <summary>
            No Gradient Fill.
            <para>When the item is serialized out as xml, its value is "none".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.FillMethodValues.Linear">
            <summary>
            Linear Fill.
            <para>When the item is serialized out as xml, its value is "linear".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.FillMethodValues.Sigma">
            <summary>
            Sigma Fill.
            <para>When the item is serialized out as xml, its value is "sigma".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.FillMethodValues.Any">
            <summary>
            Application Default Fill.
            <para>When the item is serialized out as xml, its value is "any".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.FillMethodValues.Linearsigma">
            <summary>
            Linear Sigma Fill.
            <para>When the item is serialized out as xml, its value is "linear sigma".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.StrokeLineStyleValues">
            <summary>
            Stroke Line Style 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeLineStyleValues.Single">
            <summary>
            Single Line.
            <para>When the item is serialized out as xml, its value is "single".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeLineStyleValues.ThinThin">
            <summary>
            Two Thin Lines.
            <para>When the item is serialized out as xml, its value is "thinThin".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeLineStyleValues.ThinThick">
            <summary>
            Thin Line Outside Thick Line.
            <para>When the item is serialized out as xml, its value is "thinThick".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeLineStyleValues.ThickThin">
            <summary>
            Thick Line Outside Thin Line.
            <para>When the item is serialized out as xml, its value is "thickThin".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeLineStyleValues.ThickBetweenThin">
            <summary>
            Thck Line Between Thin Lines.
            <para>When the item is serialized out as xml, its value is "thickBetweenThin".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.StrokeJoinStyleValues">
            <summary>
            Line Join Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeJoinStyleValues.Round">
            <summary>
            Round Joint.
            <para>When the item is serialized out as xml, its value is "round".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeJoinStyleValues.Bevel">
            <summary>
            Bevel Joint.
            <para>When the item is serialized out as xml, its value is "bevel".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeJoinStyleValues.Miter">
            <summary>
            Miter Joint.
            <para>When the item is serialized out as xml, its value is "miter".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.StrokeEndCapValues">
            <summary>
            Stroke End Cap Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeEndCapValues.Flat">
            <summary>
            Flat End.
            <para>When the item is serialized out as xml, its value is "flat".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeEndCapValues.Square">
            <summary>
            Square End.
            <para>When the item is serialized out as xml, its value is "square".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeEndCapValues.Round">
            <summary>
            Round End.
            <para>When the item is serialized out as xml, its value is "round".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.StrokeArrowLengthValues">
            <summary>
            Stroke Arrowhead Length 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowLengthValues.Short">
            <summary>
            Short Arrowhead.
            <para>When the item is serialized out as xml, its value is "short".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowLengthValues.Medium">
            <summary>
            Medium Arrowhead.
            <para>When the item is serialized out as xml, its value is "medium".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowLengthValues.Long">
            <summary>
            Long Arrowhead.
            <para>When the item is serialized out as xml, its value is "long".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.StrokeArrowWidthValues">
            <summary>
            Stroke Arrowhead Width 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowWidthValues.Narrow">
            <summary>
            Narrow Arrowhead.
            <para>When the item is serialized out as xml, its value is "narrow".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowWidthValues.Medium">
            <summary>
            Medium Arrowhead.
            <para>When the item is serialized out as xml, its value is "medium".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowWidthValues.Wide">
            <summary>
            Wide Arrowhead.
            <para>When the item is serialized out as xml, its value is "wide".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.StrokeArrowValues">
            <summary>
            Stroke Arrowhead Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowValues.None">
            <summary>
            No Arrowhead.
            <para>When the item is serialized out as xml, its value is "none".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowValues.Block">
            <summary>
            Block Arrowhead.
            <para>When the item is serialized out as xml, its value is "block".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowValues.Classic">
            <summary>
            Classic Arrowhead.
            <para>When the item is serialized out as xml, its value is "classic".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowValues.Oval">
            <summary>
            Oval Arrowhead.
            <para>When the item is serialized out as xml, its value is "oval".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowValues.Diamond">
            <summary>
            Diamond Arrowhead.
            <para>When the item is serialized out as xml, its value is "diamond".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeArrowValues.Open">
            <summary>
            Open Arrowhead.
            <para>When the item is serialized out as xml, its value is "open".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.ImageAspectValues">
            <summary>
            Image Scaling Behavior 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ImageAspectValues.Ignore">
            <summary>
            Ignore Aspect Ratio.
            <para>When the item is serialized out as xml, its value is "ignore".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ImageAspectValues.AtMost">
            <summary>
            At Most.
            <para>When the item is serialized out as xml, its value is "atMost".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ImageAspectValues.AtLeast">
            <summary>
            At Least.
            <para>When the item is serialized out as xml, its value is "atLeast".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.EditAsValues">
            <summary>
            Shape Grouping Types 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.EditAsValues.Canvas">
            <summary>
            Shape Canvas.
            <para>When the item is serialized out as xml, its value is "canvas".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.EditAsValues.OrganizationChart">
            <summary>
            Organization Chart Diagram.
            <para>When the item is serialized out as xml, its value is "orgchart".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.EditAsValues.Radial">
            <summary>
            Radial Diagram.
            <para>When the item is serialized out as xml, its value is "radial".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.EditAsValues.Cycle">
            <summary>
            Cycle Diagram.
            <para>When the item is serialized out as xml, its value is "cycle".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.EditAsValues.Stacked">
            <summary>
            Pyramid Diagram.
            <para>When the item is serialized out as xml, its value is "stacked".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.EditAsValues.Venn">
            <summary>
            Venn Diagram.
            <para>When the item is serialized out as xml, its value is "venn".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.EditAsValues.Bullseye">
            <summary>
            Bullseye Diagram.
            <para>When the item is serialized out as xml, its value is "bullseye".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.ShadowValues">
            <summary>
            Shadow Type 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ShadowValues.Single">
            <summary>
            Single Shadow.
            <para>When the item is serialized out as xml, its value is "single".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ShadowValues.Double">
            <summary>
            Double Shadow.
            <para>When the item is serialized out as xml, its value is "double".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ShadowValues.Emboss">
            <summary>
            Embossed Shadow.
            <para>When the item is serialized out as xml, its value is "emboss".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ShadowValues.Perspective">
            <summary>
            Perspective Shadow.
            <para>When the item is serialized out as xml, its value is "perspective".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ShadowValues.ShapeRelative">
            <summary>
            shapeRelative.
            <para>When the item is serialized out as xml, its value is "shapeRelative".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.ShadowValues.DrawingRelative">
            <summary>
            drawingRelative.
            <para>When the item is serialized out as xml, its value is "drawingRelative".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Vml.StrokeFillTypeValues">
            <summary>
            Defines the StrokeFillTypeValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeFillTypeValues.Solid">
            <summary>
            solid.
            <para>When the item is serialized out as xml, its value is "solid".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeFillTypeValues.Tile">
            <summary>
            tile.
            <para>When the item is serialized out as xml, its value is "tile".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeFillTypeValues.Pattern">
            <summary>
            pattern.
            <para>When the item is serialized out as xml, its value is "pattern".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Vml.StrokeFillTypeValues.Frame">
            <summary>
            frame.
            <para>When the item is serialized out as xml, its value is "frame".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Ink.ContextNode">
             <summary>
             <para>Defines the ContextNode Class.</para>
             <para> When the object is serialized out as xml, its qualified name is msink:context.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ContextNodeProperty &lt;msink:property></description></item>
            <item><description>SourceLink &lt;msink:sourceLink></description></item>
            <item><description>DestinationLink &lt;msink:destinationLink></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Type">
            <summary>
            <para> type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.RotatedBoundingBox">
            <summary>
            <para> rotatedBoundingBox.</para>
            <para>Represents the following attribute in the schema: rotatedBoundingBox </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.AlignmentLevel">
            <summary>
            <para> alignmentLevel.</para>
            <para>Represents the following attribute in the schema: alignmentLevel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.ContentType">
            <summary>
            <para> contentType.</para>
            <para>Represents the following attribute in the schema: contentType </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Ascender">
            <summary>
            <para> ascender.</para>
            <para>Represents the following attribute in the schema: ascender </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Descender">
            <summary>
            <para> descender.</para>
            <para>Represents the following attribute in the schema: descender </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Baseline">
            <summary>
            <para> baseline.</para>
            <para>Represents the following attribute in the schema: baseline </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Midline">
            <summary>
            <para> midline.</para>
            <para>Represents the following attribute in the schema: midline </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.CustomRecognizerId">
            <summary>
            <para> customRecognizerId.</para>
            <para>Represents the following attribute in the schema: customRecognizerId </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.MathML">
            <summary>
            <para> mathML.</para>
            <para>Represents the following attribute in the schema: mathML </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.MathStruct">
            <summary>
            <para> mathStruct.</para>
            <para>Represents the following attribute in the schema: mathStruct </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.MathSymbol">
            <summary>
            <para> mathSymbol.</para>
            <para>Represents the following attribute in the schema: mathSymbol </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.BeginModifierType">
            <summary>
            <para> beginModifierType.</para>
            <para>Represents the following attribute in the schema: beginModifierType </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.EndModifierType">
            <summary>
            <para> endModifierType.</para>
            <para>Represents the following attribute in the schema: endModifierType </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.RotationAngle">
            <summary>
            <para> rotationAngle.</para>
            <para>Represents the following attribute in the schema: rotationAngle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.HotPoints">
            <summary>
            <para> hotPoints.</para>
            <para>Represents the following attribute in the schema: hotPoints </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.Centroid">
            <summary>
            <para> centroid.</para>
            <para>Represents the following attribute in the schema: centroid </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.SemanticType">
            <summary>
            <para> semanticType.</para>
            <para>Represents the following attribute in the schema: semanticType </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.ShapeName">
            <summary>
            <para> shapeName.</para>
            <para>Represents the following attribute in the schema: shapeName </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.ShapeGeometry">
            <summary>
            <para> shapeGeometry.</para>
            <para>Represents the following attribute in the schema: shapeGeometry </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.#ctor">
            <summary>
            Initializes a new instance of the ContextNode class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ContextNode class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ContextNode class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContextNode class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNode.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Ink.ContextNodeProperty">
            <summary>
            <para>Defines the ContextNodeProperty Class.</para>
            <para> When the object is serialized out as xml, its qualified name is msink:property.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNodeProperty.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNodeProperty.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNodeProperty.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextNodeProperty.Type">
            <summary>
            <para> type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNodeProperty.#ctor">
            <summary>
            Initializes a new instance of the ContextNodeProperty class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNodeProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContextNodeProperty class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.ContextNodeProperty.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Ink.SourceLink">
            <summary>
            <para>Defines the SourceLink Class.</para>
            <para> When the object is serialized out as xml, its qualified name is msink:sourceLink.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.SourceLink.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.SourceLink.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.SourceLink.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.SourceLink.#ctor">
            <summary>
            Initializes a new instance of the SourceLink class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.SourceLink.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Ink.DestinationLink">
            <summary>
            <para>Defines the DestinationLink Class.</para>
            <para> When the object is serialized out as xml, its qualified name is msink:destinationLink.</para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.DestinationLink.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.DestinationLink.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.DestinationLink.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.DestinationLink.#ctor">
            <summary>
            Initializes a new instance of the DestinationLink class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.DestinationLink.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Ink.ContextLinkType">
            <summary>
            Defines the ContextLinkType class.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextLinkType.Direction">
            <summary>
            <para> direction.</para>
            <para>Represents the following attribute in the schema: direction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Ink.ContextLinkType.Reference">
            <summary>
            <para> ref.</para>
            <para>Represents the following attribute in the schema: ref </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Ink.ContextLinkType.#ctor">
            <summary>
            Initializes a new instance of the ContextLinkType class.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues">
            <summary>
            Defines the KnownContextNodeTypeValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.Root">
            <summary>
            root.
            <para>When the item is serialized out as xml, its value is "root".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.UnclassifiedInk">
            <summary>
            unclassifiedInk.
            <para>When the item is serialized out as xml, its value is "unclassifiedInk".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.WritingRegion">
            <summary>
            writingRegion.
            <para>When the item is serialized out as xml, its value is "writingRegion".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.AnalysisHint">
            <summary>
            analysisHint.
            <para>When the item is serialized out as xml, its value is "analysisHint".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.Object">
            <summary>
            object.
            <para>When the item is serialized out as xml, its value is "object".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.InkDrawing">
            <summary>
            inkDrawing.
            <para>When the item is serialized out as xml, its value is "inkDrawing".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.Image">
            <summary>
            image.
            <para>When the item is serialized out as xml, its value is "image".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.Paragraph">
            <summary>
            paragraph.
            <para>When the item is serialized out as xml, its value is "paragraph".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.Line">
            <summary>
            line.
            <para>When the item is serialized out as xml, its value is "line".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.InkBullet">
            <summary>
            inkBullet.
            <para>When the item is serialized out as xml, its value is "inkBullet".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.InkWord">
            <summary>
            inkWord.
            <para>When the item is serialized out as xml, its value is "inkWord".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.TextWord">
            <summary>
            textWord.
            <para>When the item is serialized out as xml, its value is "textWord".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.CustomRecognizer">
            <summary>
            customRecognizer.
            <para>When the item is serialized out as xml, its value is "customRecognizer".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.MathRegion">
            <summary>
            mathRegion.
            <para>When the item is serialized out as xml, its value is "mathRegion".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.MathEquation">
            <summary>
            mathEquation.
            <para>When the item is serialized out as xml, its value is "mathEquation".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.MathStruct">
            <summary>
            mathStruct.
            <para>When the item is serialized out as xml, its value is "mathStruct".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.MathSymbol">
            <summary>
            mathSymbol.
            <para>When the item is serialized out as xml, its value is "mathSymbol".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.MathIdentifier">
            <summary>
            mathIdentifier.
            <para>When the item is serialized out as xml, its value is "mathIdentifier".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.MathOperator">
            <summary>
            mathOperator.
            <para>When the item is serialized out as xml, its value is "mathOperator".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.MathNumber">
            <summary>
            mathNumber.
            <para>When the item is serialized out as xml, its value is "mathNumber".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.NonInkDrawing">
            <summary>
            nonInkDrawing.
            <para>When the item is serialized out as xml, its value is "nonInkDrawing".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.GroupNode">
            <summary>
            groupNode.
            <para>When the item is serialized out as xml, its value is "groupNode".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownContextNodeTypeValues.MixedDrawing">
            <summary>
            mixedDrawing.
            <para>When the item is serialized out as xml, its value is "mixedDrawing".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Ink.LinkDirectionValues">
            <summary>
            Defines the LinkDirectionValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.LinkDirectionValues.To">
            <summary>
            to.
            <para>When the item is serialized out as xml, its value is "to".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.LinkDirectionValues.From">
            <summary>
            from.
            <para>When the item is serialized out as xml, its value is "from".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.LinkDirectionValues.With">
            <summary>
            with.
            <para>When the item is serialized out as xml, its value is "with".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues">
            <summary>
            Defines the KnownSemanticTypeValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues.None">
            <summary>
            none.
            <para>When the item is serialized out as xml, its value is "none".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues.Underline">
            <summary>
            underline.
            <para>When the item is serialized out as xml, its value is "underline".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues.Strikethrough">
            <summary>
            strikethrough.
            <para>When the item is serialized out as xml, its value is "strikethrough".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues.Highlight">
            <summary>
            highlight.
            <para>When the item is serialized out as xml, its value is "highlight".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues.ScratchOut">
            <summary>
            scratchOut.
            <para>When the item is serialized out as xml, its value is "scratchOut".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues.VerticalRange">
            <summary>
            verticalRange.
            <para>When the item is serialized out as xml, its value is "verticalRange".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues.Callout">
            <summary>
            callout.
            <para>When the item is serialized out as xml, its value is "callout".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues.Enclosure">
            <summary>
            enclosure.
            <para>When the item is serialized out as xml, its value is "enclosure".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues.Comment">
            <summary>
            comment.
            <para>When the item is serialized out as xml, its value is "comment".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues.Container">
            <summary>
            container.
            <para>When the item is serialized out as xml, its value is "container".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.Ink.KnownSemanticTypeValues.Connector">
            <summary>
            connector.
            <para>When the item is serialized out as xml, its value is "connector".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular">
             <summary>
             <para>Defines the ControlCloneRegular Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:control.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.#ctor">
            <summary>
            Initializes a new instance of the ControlCloneRegular class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneRegular.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular">
             <summary>
             <para>Defines the ButtonRegular Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:button.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.#ctor">
            <summary>
            Initializes a new instance of the ButtonRegular class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonRegular.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox">
             <summary>
             <para>Defines the CheckBox Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:checkBox.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.GetPressed">
            <summary>
            <para> getPressed.</para>
            <para>Represents the following attribute in the schema: getPressed </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.#ctor">
            <summary>
            Initializes a new instance of the CheckBox class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CheckBox.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular">
             <summary>
             <para>Defines the GalleryRegular Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:gallery.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Item &lt;mso14:item></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.InvalidateContentOnDrop">
            <summary>
            <para> invalidateContentOnDrop.</para>
            <para>Represents the following attribute in the schema: invalidateContentOnDrop </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Columns">
            <summary>
            <para> columns.</para>
            <para>Represents the following attribute in the schema: columns </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Rows">
            <summary>
            <para> rows.</para>
            <para>Represents the following attribute in the schema: rows </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.ItemWidth">
            <summary>
            <para> itemWidth.</para>
            <para>Represents the following attribute in the schema: itemWidth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.ItemHeight">
            <summary>
            <para> itemHeight.</para>
            <para>Represents the following attribute in the schema: itemHeight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetItemWidth">
            <summary>
            <para> getItemWidth.</para>
            <para>Represents the following attribute in the schema: getItemWidth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetItemHeight">
            <summary>
            <para> getItemHeight.</para>
            <para>Represents the following attribute in the schema: getItemHeight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.ShowItemLabel">
            <summary>
            <para> showItemLabel.</para>
            <para>Represents the following attribute in the schema: showItemLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.ShowInRibbon">
            <summary>
            <para> showInRibbon.</para>
            <para>Represents the following attribute in the schema: showInRibbon </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.ShowItemImage">
            <summary>
            <para> showItemImage.</para>
            <para>Represents the following attribute in the schema: showItemImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetItemCount">
            <summary>
            <para> getItemCount.</para>
            <para>Represents the following attribute in the schema: getItemCount </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetItemLabel">
            <summary>
            <para> getItemLabel.</para>
            <para>Represents the following attribute in the schema: getItemLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetItemScreentip">
            <summary>
            <para> getItemScreentip.</para>
            <para>Represents the following attribute in the schema: getItemScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetItemSupertip">
            <summary>
            <para> getItemSupertip.</para>
            <para>Represents the following attribute in the schema: getItemSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetItemImage">
            <summary>
            <para> getItemImage.</para>
            <para>Represents the following attribute in the schema: getItemImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetItemID">
            <summary>
            <para> getItemID.</para>
            <para>Represents the following attribute in the schema: getItemID </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.SizeString">
            <summary>
            <para> sizeString.</para>
            <para>Represents the following attribute in the schema: sizeString </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetSelectedItemID">
            <summary>
            <para> getSelectedItemID.</para>
            <para>Represents the following attribute in the schema: getSelectedItemID </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetSelectedItemIndex">
            <summary>
            <para> getSelectedItemIndex.</para>
            <para>Represents the following attribute in the schema: getSelectedItemIndex </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.#ctor">
            <summary>
            Initializes a new instance of the GalleryRegular class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the GalleryRegular class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the GalleryRegular class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.#ctor(System.String)">
            <summary>
            Initializes a new instance of the GalleryRegular class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryRegular.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular">
             <summary>
             <para>Defines the ToggleButtonRegular Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:toggleButton.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.GetPressed">
            <summary>
            <para> getPressed.</para>
            <para>Represents the following attribute in the schema: getPressed </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.#ctor">
            <summary>
            Initializes a new instance of the ToggleButtonRegular class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButtonRegular.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator">
             <summary>
             <para>Defines the MenuSeparator Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:menuSeparator.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.Title">
            <summary>
            <para> title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.GetTitle">
            <summary>
            <para> getTitle.</para>
            <para>Represents the following attribute in the schema: getTitle </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.#ctor">
            <summary>
            Initializes a new instance of the MenuSeparator class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparator.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular">
             <summary>
             <para>Defines the SplitButtonRegular Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:splitButton.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>VisibleButton &lt;mso14:button></description></item>
            <item><description>VisibleToggleButton &lt;mso14:toggleButton></description></item>
            <item><description>MenuRegular &lt;mso14:menu></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.#ctor">
            <summary>
            Initializes a new instance of the SplitButtonRegular class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SplitButtonRegular class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SplitButtonRegular class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SplitButtonRegular class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonRegular.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular">
             <summary>
             <para>Defines the MenuRegular Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:menu.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ControlCloneRegular &lt;mso14:control></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
            <item><description>CheckBox &lt;mso14:checkBox></description></item>
            <item><description>GalleryRegular &lt;mso14:gallery></description></item>
            <item><description>ToggleButtonRegular &lt;mso14:toggleButton></description></item>
            <item><description>MenuSeparator &lt;mso14:menuSeparator></description></item>
            <item><description>SplitButtonRegular &lt;mso14:splitButton></description></item>
            <item><description>MenuRegular &lt;mso14:menu></description></item>
            <item><description>DynamicMenuRegular &lt;mso14:dynamicMenu></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.ItemSize">
            <summary>
            <para> itemSize.</para>
            <para>Represents the following attribute in the schema: itemSize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.#ctor">
            <summary>
            Initializes a new instance of the MenuRegular class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the MenuRegular class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the MenuRegular class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MenuRegular class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRegular.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular">
             <summary>
             <para>Defines the DynamicMenuRegular Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:dynamicMenu.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.GetContent">
            <summary>
            <para> getContent.</para>
            <para>Represents the following attribute in the schema: getContent </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.InvalidateContentOnDrop">
            <summary>
            <para> invalidateContentOnDrop.</para>
            <para>Represents the following attribute in the schema: invalidateContentOnDrop </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.#ctor">
            <summary>
            Initializes a new instance of the DynamicMenuRegular class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenuRegular.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle">
             <summary>
             <para>Defines the SplitButtonWithTitle Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:splitButton.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>VisibleButton &lt;mso14:button></description></item>
            <item><description>VisibleToggleButton &lt;mso14:toggleButton></description></item>
            <item><description>MenuWithTitle &lt;mso14:menu></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.#ctor">
            <summary>
            Initializes a new instance of the SplitButtonWithTitle class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SplitButtonWithTitle class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SplitButtonWithTitle class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SplitButtonWithTitle class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButtonWithTitle.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle">
             <summary>
             <para>Defines the MenuWithTitle Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:menu.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ControlCloneRegular &lt;mso14:control></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
            <item><description>CheckBox &lt;mso14:checkBox></description></item>
            <item><description>GalleryRegular &lt;mso14:gallery></description></item>
            <item><description>ToggleButtonRegular &lt;mso14:toggleButton></description></item>
            <item><description>MenuSeparator &lt;mso14:menuSeparator></description></item>
            <item><description>SplitButtonWithTitle &lt;mso14:splitButton></description></item>
            <item><description>MenuWithTitle &lt;mso14:menu></description></item>
            <item><description>DynamicMenuRegular &lt;mso14:dynamicMenu></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.ItemSize">
            <summary>
            <para> itemSize.</para>
            <para>Represents the following attribute in the schema: itemSize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.Title">
            <summary>
            <para> title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.GetTitle">
            <summary>
            <para> getTitle.</para>
            <para>Represents the following attribute in the schema: getTitle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.#ctor">
            <summary>
            Initializes a new instance of the MenuWithTitle class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the MenuWithTitle class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the MenuWithTitle class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MenuWithTitle class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuWithTitle.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle">
             <summary>
             <para>Defines the MenuSeparatorNoTitle Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:menuSeparator.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.#ctor">
            <summary>
            Initializes a new instance of the MenuSeparatorNoTitle class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuSeparatorNoTitle.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone">
             <summary>
             <para>Defines the ControlClone Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:control.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.Size">
            <summary>
            <para> size.</para>
            <para>Represents the following attribute in the schema: size </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.GetSize">
            <summary>
            <para> getSize.</para>
            <para>Represents the following attribute in the schema: getSize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.#ctor">
            <summary>
            Initializes a new instance of the ControlClone class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ControlClone.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl">
             <summary>
             <para>Defines the LabelControl Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:labelControl.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.#ctor">
            <summary>
            Initializes a new instance of the LabelControl class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.LabelControl.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Button">
             <summary>
             <para>Defines the Button Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:button.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Button.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.Size">
            <summary>
            <para> size.</para>
            <para>Represents the following attribute in the schema: size </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.GetSize">
            <summary>
            <para> getSize.</para>
            <para>Represents the following attribute in the schema: getSize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Button.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Button.#ctor">
            <summary>
            Initializes a new instance of the Button class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Button.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton">
             <summary>
             <para>Defines the ToggleButton Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:toggleButton.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.Size">
            <summary>
            <para> size.</para>
            <para>Represents the following attribute in the schema: size </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetSize">
            <summary>
            <para> getSize.</para>
            <para>Represents the following attribute in the schema: getSize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetPressed">
            <summary>
            <para> getPressed.</para>
            <para>Represents the following attribute in the schema: getPressed </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.#ctor">
            <summary>
            Initializes a new instance of the ToggleButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ToggleButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox">
             <summary>
             <para>Defines the EditBox Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:editBox.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.MaxLength">
            <summary>
            <para> maxLength.</para>
            <para>Represents the following attribute in the schema: maxLength </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.GetText">
            <summary>
            <para> getText.</para>
            <para>Represents the following attribute in the schema: getText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.OnChange">
            <summary>
            <para> onChange.</para>
            <para>Represents the following attribute in the schema: onChange </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.SizeString">
            <summary>
            <para> sizeString.</para>
            <para>Represents the following attribute in the schema: sizeString </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.#ctor">
            <summary>
            Initializes a new instance of the EditBox class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.EditBox.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox">
             <summary>
             <para>Defines the ComboBox Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:comboBox.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Item &lt;mso14:item></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.ShowItemImage">
            <summary>
            <para> showItemImage.</para>
            <para>Represents the following attribute in the schema: showItemImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetItemCount">
            <summary>
            <para> getItemCount.</para>
            <para>Represents the following attribute in the schema: getItemCount </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetItemLabel">
            <summary>
            <para> getItemLabel.</para>
            <para>Represents the following attribute in the schema: getItemLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetItemScreentip">
            <summary>
            <para> getItemScreentip.</para>
            <para>Represents the following attribute in the schema: getItemScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetItemSupertip">
            <summary>
            <para> getItemSupertip.</para>
            <para>Represents the following attribute in the schema: getItemSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetItemImage">
            <summary>
            <para> getItemImage.</para>
            <para>Represents the following attribute in the schema: getItemImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetItemID">
            <summary>
            <para> getItemID.</para>
            <para>Represents the following attribute in the schema: getItemID </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.SizeString">
            <summary>
            <para> sizeString.</para>
            <para>Represents the following attribute in the schema: sizeString </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.InvalidateContentOnDrop">
            <summary>
            <para> invalidateContentOnDrop.</para>
            <para>Represents the following attribute in the schema: invalidateContentOnDrop </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.MaxLength">
            <summary>
            <para> maxLength.</para>
            <para>Represents the following attribute in the schema: maxLength </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetText">
            <summary>
            <para> getText.</para>
            <para>Represents the following attribute in the schema: getText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.OnChange">
            <summary>
            <para> onChange.</para>
            <para>Represents the following attribute in the schema: onChange </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.#ctor">
            <summary>
            Initializes a new instance of the ComboBox class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ComboBox class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ComboBox class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ComboBox class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ComboBox.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular">
             <summary>
             <para>Defines the DropDownRegular Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:dropDown.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Item &lt;mso14:item></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.ShowItemImage">
            <summary>
            <para> showItemImage.</para>
            <para>Represents the following attribute in the schema: showItemImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetItemCount">
            <summary>
            <para> getItemCount.</para>
            <para>Represents the following attribute in the schema: getItemCount </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetItemLabel">
            <summary>
            <para> getItemLabel.</para>
            <para>Represents the following attribute in the schema: getItemLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetItemScreentip">
            <summary>
            <para> getItemScreentip.</para>
            <para>Represents the following attribute in the schema: getItemScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetItemSupertip">
            <summary>
            <para> getItemSupertip.</para>
            <para>Represents the following attribute in the schema: getItemSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetItemImage">
            <summary>
            <para> getItemImage.</para>
            <para>Represents the following attribute in the schema: getItemImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetItemID">
            <summary>
            <para> getItemID.</para>
            <para>Represents the following attribute in the schema: getItemID </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.SizeString">
            <summary>
            <para> sizeString.</para>
            <para>Represents the following attribute in the schema: sizeString </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetSelectedItemID">
            <summary>
            <para> getSelectedItemID.</para>
            <para>Represents the following attribute in the schema: getSelectedItemID </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetSelectedItemIndex">
            <summary>
            <para> getSelectedItemIndex.</para>
            <para>Represents the following attribute in the schema: getSelectedItemIndex </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.ShowItemLabel">
            <summary>
            <para> showItemLabel.</para>
            <para>Represents the following attribute in the schema: showItemLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.#ctor">
            <summary>
            Initializes a new instance of the DropDownRegular class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the DropDownRegular class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the DropDownRegular class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DropDownRegular class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DropDownRegular.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery">
             <summary>
             <para>Defines the Gallery Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:gallery.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Item &lt;mso14:item></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Size">
            <summary>
            <para> size.</para>
            <para>Represents the following attribute in the schema: size </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetSize">
            <summary>
            <para> getSize.</para>
            <para>Represents the following attribute in the schema: getSize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.InvalidateContentOnDrop">
            <summary>
            <para> invalidateContentOnDrop.</para>
            <para>Represents the following attribute in the schema: invalidateContentOnDrop </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Columns">
            <summary>
            <para> columns.</para>
            <para>Represents the following attribute in the schema: columns </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Rows">
            <summary>
            <para> rows.</para>
            <para>Represents the following attribute in the schema: rows </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.ItemWidth">
            <summary>
            <para> itemWidth.</para>
            <para>Represents the following attribute in the schema: itemWidth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.ItemHeight">
            <summary>
            <para> itemHeight.</para>
            <para>Represents the following attribute in the schema: itemHeight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetItemWidth">
            <summary>
            <para> getItemWidth.</para>
            <para>Represents the following attribute in the schema: getItemWidth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetItemHeight">
            <summary>
            <para> getItemHeight.</para>
            <para>Represents the following attribute in the schema: getItemHeight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.ShowItemLabel">
            <summary>
            <para> showItemLabel.</para>
            <para>Represents the following attribute in the schema: showItemLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.ShowInRibbon">
            <summary>
            <para> showInRibbon.</para>
            <para>Represents the following attribute in the schema: showInRibbon </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.ShowItemImage">
            <summary>
            <para> showItemImage.</para>
            <para>Represents the following attribute in the schema: showItemImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetItemCount">
            <summary>
            <para> getItemCount.</para>
            <para>Represents the following attribute in the schema: getItemCount </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetItemLabel">
            <summary>
            <para> getItemLabel.</para>
            <para>Represents the following attribute in the schema: getItemLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetItemScreentip">
            <summary>
            <para> getItemScreentip.</para>
            <para>Represents the following attribute in the schema: getItemScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetItemSupertip">
            <summary>
            <para> getItemSupertip.</para>
            <para>Represents the following attribute in the schema: getItemSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetItemImage">
            <summary>
            <para> getItemImage.</para>
            <para>Represents the following attribute in the schema: getItemImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetItemID">
            <summary>
            <para> getItemID.</para>
            <para>Represents the following attribute in the schema: getItemID </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.SizeString">
            <summary>
            <para> sizeString.</para>
            <para>Represents the following attribute in the schema: sizeString </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetSelectedItemID">
            <summary>
            <para> getSelectedItemID.</para>
            <para>Represents the following attribute in the schema: getSelectedItemID </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetSelectedItemIndex">
            <summary>
            <para> getSelectedItemIndex.</para>
            <para>Represents the following attribute in the schema: getSelectedItemIndex </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.#ctor">
            <summary>
            Initializes a new instance of the Gallery class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Gallery class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Gallery class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Gallery class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Gallery.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Menu">
             <summary>
             <para>Defines the Menu Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:menu.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ControlCloneRegular &lt;mso14:control></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
            <item><description>CheckBox &lt;mso14:checkBox></description></item>
            <item><description>GalleryRegular &lt;mso14:gallery></description></item>
            <item><description>ToggleButtonRegular &lt;mso14:toggleButton></description></item>
            <item><description>MenuSeparator &lt;mso14:menuSeparator></description></item>
            <item><description>SplitButtonRegular &lt;mso14:splitButton></description></item>
            <item><description>MenuRegular &lt;mso14:menu></description></item>
            <item><description>DynamicMenuRegular &lt;mso14:dynamicMenu></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.Size">
            <summary>
            <para> size.</para>
            <para>Represents the following attribute in the schema: size </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.GetSize">
            <summary>
            <para> getSize.</para>
            <para>Represents the following attribute in the schema: getSize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.ItemSize">
            <summary>
            <para> itemSize.</para>
            <para>Represents the following attribute in the schema: itemSize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.#ctor">
            <summary>
            Initializes a new instance of the Menu class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Menu class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Menu class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Menu class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Menu.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu">
             <summary>
             <para>Defines the DynamicMenu Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:dynamicMenu.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.Size">
            <summary>
            <para> size.</para>
            <para>Represents the following attribute in the schema: size </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetSize">
            <summary>
            <para> getSize.</para>
            <para>Represents the following attribute in the schema: getSize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetContent">
            <summary>
            <para> getContent.</para>
            <para>Represents the following attribute in the schema: getContent </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.InvalidateContentOnDrop">
            <summary>
            <para> invalidateContentOnDrop.</para>
            <para>Represents the following attribute in the schema: invalidateContentOnDrop </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.#ctor">
            <summary>
            Initializes a new instance of the DynamicMenu class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DynamicMenu.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton">
             <summary>
             <para>Defines the SplitButton Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:splitButton.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>VisibleButton &lt;mso14:button></description></item>
            <item><description>VisibleToggleButton &lt;mso14:toggleButton></description></item>
            <item><description>MenuRegular &lt;mso14:menu></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.Size">
            <summary>
            <para> size.</para>
            <para>Represents the following attribute in the schema: size </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.GetSize">
            <summary>
            <para> getSize.</para>
            <para>Represents the following attribute in the schema: getSize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.#ctor">
            <summary>
            Initializes a new instance of the SplitButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SplitButton class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SplitButton class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SplitButton class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SplitButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Box">
             <summary>
             <para>Defines the Box Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:box.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ControlClone &lt;mso14:control></description></item>
            <item><description>LabelControl &lt;mso14:labelControl></description></item>
            <item><description>Button &lt;mso14:button></description></item>
            <item><description>ToggleButton &lt;mso14:toggleButton></description></item>
            <item><description>CheckBox &lt;mso14:checkBox></description></item>
            <item><description>EditBox &lt;mso14:editBox></description></item>
            <item><description>ComboBox &lt;mso14:comboBox></description></item>
            <item><description>DropDownRegular &lt;mso14:dropDown></description></item>
            <item><description>Gallery &lt;mso14:gallery></description></item>
            <item><description>Menu &lt;mso14:menu></description></item>
            <item><description>DynamicMenu &lt;mso14:dynamicMenu></description></item>
            <item><description>SplitButton &lt;mso14:splitButton></description></item>
            <item><description>Box &lt;mso14:box></description></item>
            <item><description>ButtonGroup &lt;mso14:buttonGroup></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Box.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Box.BoxStyle">
            <summary>
            <para> boxStyle.</para>
            <para>Represents the following attribute in the schema: boxStyle </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Box.#ctor">
            <summary>
            Initializes a new instance of the Box class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Box.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Box class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Box.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Box class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Box.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Box class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Box.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup">
             <summary>
             <para>Defines the ButtonGroup Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:buttonGroup.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ControlCloneRegular &lt;mso14:control></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
            <item><description>ToggleButtonRegular &lt;mso14:toggleButton></description></item>
            <item><description>GalleryRegular &lt;mso14:gallery></description></item>
            <item><description>MenuRegular &lt;mso14:menu></description></item>
            <item><description>DynamicMenuRegular &lt;mso14:dynamicMenu></description></item>
            <item><description>SplitButtonRegular &lt;mso14:splitButton></description></item>
            <item><description>Separator &lt;mso14:separator></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.#ctor">
            <summary>
            Initializes a new instance of the ButtonGroup class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ButtonGroup class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ButtonGroup class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ButtonGroup class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ButtonGroup.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton">
             <summary>
             <para>Defines the BackstageMenuButton Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:button.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.IsDefinitive">
            <summary>
            <para> isDefinitive.</para>
            <para>Represents the following attribute in the schema: isDefinitive </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.#ctor">
            <summary>
            Initializes a new instance of the BackstageMenuButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox">
             <summary>
             <para>Defines the BackstageMenuCheckBox Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:checkBox.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.GetPressed">
            <summary>
            <para> getPressed.</para>
            <para>Represents the following attribute in the schema: getPressed </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.#ctor">
            <summary>
            Initializes a new instance of the BackstageMenuCheckBox class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuCheckBox.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu">
             <summary>
             <para>Defines the BackstageSubMenu Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:menu.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageMenuGroup &lt;mso14:menuGroup></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.#ctor">
            <summary>
            Initializes a new instance of the BackstageSubMenu class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the BackstageSubMenu class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the BackstageSubMenu class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BackstageSubMenu class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageSubMenu.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton">
             <summary>
             <para>Defines the BackstageMenuToggleButton Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:toggleButton.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.GetPressed">
            <summary>
            <para> getPressed.</para>
            <para>Represents the following attribute in the schema: getPressed </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.#ctor">
            <summary>
            Initializes a new instance of the BackstageMenuToggleButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuToggleButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton">
             <summary>
             <para>Defines the BackstageGroupButton Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:button.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.Expand">
            <summary>
            <para> expand.</para>
            <para>Represents the following attribute in the schema: expand </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.Style">
            <summary>
            <para> style.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.IsDefinitive">
            <summary>
            <para> isDefinitive.</para>
            <para>Represents the following attribute in the schema: isDefinitive </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.#ctor">
            <summary>
            Initializes a new instance of the BackstageGroupButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroupButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox">
             <summary>
             <para>Defines the BackstageCheckBox Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:checkBox.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.Expand">
            <summary>
            <para> expand.</para>
            <para>Represents the following attribute in the schema: expand </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.GetPressed">
            <summary>
            <para> getPressed.</para>
            <para>Represents the following attribute in the schema: getPressed </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.#ctor">
            <summary>
            Initializes a new instance of the BackstageCheckBox class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageCheckBox.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox">
             <summary>
             <para>Defines the BackstageEditBox Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:editBox.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.AlignLabel">
            <summary>
            <para> alignLabel.</para>
            <para>Represents the following attribute in the schema: alignLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.Expand">
            <summary>
            <para> expand.</para>
            <para>Represents the following attribute in the schema: expand </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.GetText">
            <summary>
            <para> getText.</para>
            <para>Represents the following attribute in the schema: getText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.OnChange">
            <summary>
            <para> onChange.</para>
            <para>Represents the following attribute in the schema: onChange </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.MaxLength">
            <summary>
            <para> maxLength.</para>
            <para>Represents the following attribute in the schema: maxLength </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.SizeString">
            <summary>
            <para> sizeString.</para>
            <para>Represents the following attribute in the schema: sizeString </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.#ctor">
            <summary>
            Initializes a new instance of the BackstageEditBox class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageEditBox.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown">
             <summary>
             <para>Defines the BackstageDropDown Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:dropDown.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ItemBackstageItem &lt;mso14:item></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.AlignLabel">
            <summary>
            <para> alignLabel.</para>
            <para>Represents the following attribute in the schema: alignLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.Expand">
            <summary>
            <para> expand.</para>
            <para>Represents the following attribute in the schema: expand </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.GetSelectedItemIndex">
            <summary>
            <para> getSelectedItemIndex.</para>
            <para>Represents the following attribute in the schema: getSelectedItemIndex </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.SizeString">
            <summary>
            <para> sizeString.</para>
            <para>Represents the following attribute in the schema: sizeString </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.GetItemCount">
            <summary>
            <para> getItemCount.</para>
            <para>Represents the following attribute in the schema: getItemCount </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.GetItemLabel">
            <summary>
            <para> getItemLabel.</para>
            <para>Represents the following attribute in the schema: getItemLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.GetItemID">
            <summary>
            <para> getItemID.</para>
            <para>Represents the following attribute in the schema: getItemID </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.#ctor">
            <summary>
            Initializes a new instance of the BackstageDropDown class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the BackstageDropDown class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the BackstageDropDown class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BackstageDropDown class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageDropDown.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup">
             <summary>
             <para>Defines the RadioGroup Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:radioGroup.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>RadioButtonBackstageItem &lt;mso14:radioButton></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.AlignLabel">
            <summary>
            <para> alignLabel.</para>
            <para>Represents the following attribute in the schema: alignLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.Expand">
            <summary>
            <para> expand.</para>
            <para>Represents the following attribute in the schema: expand </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.GetSelectedItemIndex">
            <summary>
            <para> getSelectedItemIndex.</para>
            <para>Represents the following attribute in the schema: getSelectedItemIndex </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.GetItemCount">
            <summary>
            <para> getItemCount.</para>
            <para>Represents the following attribute in the schema: getItemCount </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.GetItemLabel">
            <summary>
            <para> getItemLabel.</para>
            <para>Represents the following attribute in the schema: getItemLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.GetItemID">
            <summary>
            <para> getItemID.</para>
            <para>Represents the following attribute in the schema: getItemID </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.#ctor">
            <summary>
            Initializes a new instance of the RadioGroup class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the RadioGroup class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the RadioGroup class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RadioGroup class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.RadioGroup.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox">
             <summary>
             <para>Defines the BackstageComboBox Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:comboBox.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ItemBackstageItem &lt;mso14:item></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.AlignLabel">
            <summary>
            <para> alignLabel.</para>
            <para>Represents the following attribute in the schema: alignLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.Expand">
            <summary>
            <para> expand.</para>
            <para>Represents the following attribute in the schema: expand </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.GetText">
            <summary>
            <para> getText.</para>
            <para>Represents the following attribute in the schema: getText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.OnChange">
            <summary>
            <para> onChange.</para>
            <para>Represents the following attribute in the schema: onChange </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.SizeString">
            <summary>
            <para> sizeString.</para>
            <para>Represents the following attribute in the schema: sizeString </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.GetItemCount">
            <summary>
            <para> getItemCount.</para>
            <para>Represents the following attribute in the schema: getItemCount </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.GetItemLabel">
            <summary>
            <para> getItemLabel.</para>
            <para>Represents the following attribute in the schema: getItemLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.GetItemID">
            <summary>
            <para> getItemID.</para>
            <para>Represents the following attribute in the schema: getItemID </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.#ctor">
            <summary>
            Initializes a new instance of the BackstageComboBox class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the BackstageComboBox class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the BackstageComboBox class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BackstageComboBox class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageComboBox.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink">
             <summary>
             <para>Defines the Hyperlink Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:hyperlink.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.AlignLabel">
            <summary>
            <para> alignLabel.</para>
            <para>Represents the following attribute in the schema: alignLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.Expand">
            <summary>
            <para> expand.</para>
            <para>Represents the following attribute in the schema: expand </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.Target">
            <summary>
            <para> target.</para>
            <para>Represents the following attribute in the schema: target </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.GetTarget">
            <summary>
            <para> getTarget.</para>
            <para>Represents the following attribute in the schema: getTarget </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.#ctor">
            <summary>
            Initializes a new instance of the Hyperlink class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Hyperlink.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl">
             <summary>
             <para>Defines the BackstageLabelControl Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:labelControl.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.AlignLabel">
            <summary>
            <para> alignLabel.</para>
            <para>Represents the following attribute in the schema: alignLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.Expand">
            <summary>
            <para> expand.</para>
            <para>Represents the following attribute in the schema: expand </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.NoWrap">
            <summary>
            <para> noWrap.</para>
            <para>Represents the following attribute in the schema: noWrap </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.#ctor">
            <summary>
            Initializes a new instance of the BackstageLabelControl class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageLabelControl.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox">
             <summary>
             <para>Defines the GroupBox Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:groupBox.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageGroupButton &lt;mso14:button></description></item>
            <item><description>BackstageCheckBox &lt;mso14:checkBox></description></item>
            <item><description>BackstageEditBox &lt;mso14:editBox></description></item>
            <item><description>BackstageDropDown &lt;mso14:dropDown></description></item>
            <item><description>RadioGroup &lt;mso14:radioGroup></description></item>
            <item><description>BackstageComboBox &lt;mso14:comboBox></description></item>
            <item><description>Hyperlink &lt;mso14:hyperlink></description></item>
            <item><description>BackstageLabelControl &lt;mso14:labelControl></description></item>
            <item><description>GroupBox &lt;mso14:groupBox></description></item>
            <item><description>LayoutContainer &lt;mso14:layoutContainer></description></item>
            <item><description>ImageControl &lt;mso14:imageControl></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.Expand">
            <summary>
            <para> expand.</para>
            <para>Represents the following attribute in the schema: expand </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.#ctor">
            <summary>
            Initializes a new instance of the GroupBox class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the GroupBox class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the GroupBox class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.#ctor(System.String)">
            <summary>
            Initializes a new instance of the GroupBox class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GroupBox.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer">
             <summary>
             <para>Defines the LayoutContainer Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:layoutContainer.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageGroupButton &lt;mso14:button></description></item>
            <item><description>BackstageCheckBox &lt;mso14:checkBox></description></item>
            <item><description>BackstageEditBox &lt;mso14:editBox></description></item>
            <item><description>BackstageDropDown &lt;mso14:dropDown></description></item>
            <item><description>RadioGroup &lt;mso14:radioGroup></description></item>
            <item><description>BackstageComboBox &lt;mso14:comboBox></description></item>
            <item><description>Hyperlink &lt;mso14:hyperlink></description></item>
            <item><description>BackstageLabelControl &lt;mso14:labelControl></description></item>
            <item><description>GroupBox &lt;mso14:groupBox></description></item>
            <item><description>LayoutContainer &lt;mso14:layoutContainer></description></item>
            <item><description>ImageControl &lt;mso14:imageControl></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.Align">
            <summary>
            <para> align.</para>
            <para>Represents the following attribute in the schema: align </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.Expand">
            <summary>
            <para> expand.</para>
            <para>Represents the following attribute in the schema: expand </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.LayoutChildren">
            <summary>
            <para> layoutChildren.</para>
            <para>Represents the following attribute in the schema: layoutChildren </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.#ctor">
            <summary>
            Initializes a new instance of the LayoutContainer class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the LayoutContainer class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the LayoutContainer class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LayoutContainer class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutContainer.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl">
             <summary>
             <para>Defines the ImageControl Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:imageControl.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.AltText">
            <summary>
            <para> altText.</para>
            <para>Represents the following attribute in the schema: altText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.GetAltText">
            <summary>
            <para> getAltText.</para>
            <para>Represents the following attribute in the schema: getAltText </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.#ctor">
            <summary>
            Initializes a new instance of the ImageControl class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ImageControl.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup">
             <summary>
             <para>Defines the BackstageGroup Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:group.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>PrimaryItem &lt;mso14:primaryItem></description></item>
            <item><description>TopItemsGroupControls &lt;mso14:topItems></description></item>
            <item><description>BottomItemsGroupControls &lt;mso14:bottomItems></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.Style">
            <summary>
            <para> style.</para>
            <para>Represents the following attribute in the schema: style </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.GetStyle">
            <summary>
            <para> getStyle.</para>
            <para>Represents the following attribute in the schema: getStyle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.HelperText">
            <summary>
            <para> helperText.</para>
            <para>Represents the following attribute in the schema: helperText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.GetHelperText">
            <summary>
            <para> getHelperText.</para>
            <para>Represents the following attribute in the schema: getHelperText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.#ctor">
            <summary>
            Initializes a new instance of the BackstageGroup class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the BackstageGroup class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the BackstageGroup class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BackstageGroup class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroup.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup">
             <summary>
             <para>Defines the TaskGroup Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:taskGroup.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>TaskGroupCategory &lt;mso14:category></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.HelperText">
            <summary>
            <para> helperText.</para>
            <para>Represents the following attribute in the schema: helperText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.GetHelperText">
            <summary>
            <para> getHelperText.</para>
            <para>Represents the following attribute in the schema: getHelperText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.AllowedTaskSizes">
            <summary>
            <para> allowedTaskSizes.</para>
            <para>Represents the following attribute in the schema: allowedTaskSizes </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.#ctor">
            <summary>
            Initializes a new instance of the TaskGroup class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the TaskGroup class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the TaskGroup class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TaskGroup class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroup.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot">
             <summary>
             <para>Defines the MenuRoot Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:menu.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ControlCloneRegular &lt;mso14:control></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
            <item><description>CheckBox &lt;mso14:checkBox></description></item>
            <item><description>GalleryRegular &lt;mso14:gallery></description></item>
            <item><description>ToggleButtonRegular &lt;mso14:toggleButton></description></item>
            <item><description>MenuSeparator &lt;mso14:menuSeparator></description></item>
            <item><description>SplitButtonRegular &lt;mso14:splitButton></description></item>
            <item><description>MenuRegular &lt;mso14:menu></description></item>
            <item><description>DynamicMenuRegular &lt;mso14:dynamicMenu></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot.Title">
            <summary>
            <para> title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot.GetTitle">
            <summary>
            <para> getTitle.</para>
            <para>Represents the following attribute in the schema: getTitle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot.ItemSize">
            <summary>
            <para> itemSize.</para>
            <para>Represents the following attribute in the schema: itemSize </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot.#ctor">
            <summary>
            Initializes a new instance of the MenuRoot class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the MenuRoot class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the MenuRoot class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MenuRoot class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.MenuRoot.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI">
             <summary>
             <para>Defines the CustomUI Class. The root element of RibbonAndBackstageCustomizationsPart.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:customUI.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Commands &lt;mso14:commands></description></item>
            <item><description>Ribbon &lt;mso14:ribbon></description></item>
            <item><description>Backstage &lt;mso14:backstage></description></item>
            <item><description>ContextMenus &lt;mso14:contextMenus></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.OnLoad">
            <summary>
            <para> onLoad.</para>
            <para>Represents the following attribute in the schema: onLoad </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.LoadImage">
            <summary>
            <para> loadImage.</para>
            <para>Represents the following attribute in the schema: loadImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.#ctor(DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart)">
            <summary>
            CustomUI constructor.
            </summary>
            <param name="ownerPart">The owner part of the CustomUI.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Load(DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart)">
            <summary>
            Loads the DOM from the RibbonAndBackstageCustomizationsPart.
            </summary>
            <param name="openXmlPart">Specifies the part to be loaded.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.RibbonAndBackstageCustomizationsPart">
            <summary>
            Gets the RibbonAndBackstageCustomizationsPart associated with this element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the CustomUI class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the CustomUI class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CustomUI class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.#ctor">
            <summary>
            Initializes a new instance of the CustomUI class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Save(DocumentFormat.OpenXml.Packaging.RibbonAndBackstageCustomizationsPart)">
            <summary>
            Saves the DOM into the RibbonAndBackstageCustomizationsPart.
            </summary>
            <param name="openXmlPart">Specifies the part to save to.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Commands">
            <summary>
            <para> Commands.</para>
            <para> Represents the following element tag in the schema: mso14:commands </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Ribbon">
            <summary>
            <para> Ribbon.</para>
            <para> Represents the following element tag in the schema: mso14:ribbon </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.Backstage">
            <summary>
            <para> Backstage.</para>
            <para> Represents the following element tag in the schema: mso14:backstage </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.ContextMenus">
            <summary>
            <para> ContextMenus.</para>
            <para> Represents the following element tag in the schema: mso14:contextMenus </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.CustomUI.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Item">
             <summary>
             <para>Defines the Item Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:item.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Item.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Item.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Item.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Item.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Item.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Item.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Item.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Item.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Item.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Item.#ctor">
            <summary>
            Initializes a new instance of the Item class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Item.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton">
             <summary>
             <para>Defines the VisibleButton Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:button.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.#ctor">
            <summary>
            Initializes a new instance of the VisibleButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton">
             <summary>
             <para>Defines the VisibleToggleButton Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:toggleButton.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.GetPressed">
            <summary>
            <para> getPressed.</para>
            <para>Represents the following attribute in the schema: getPressed </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.#ctor">
            <summary>
            Initializes a new instance of the VisibleToggleButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.VisibleToggleButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Separator">
             <summary>
             <para>Defines the Separator Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:separator.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.#ctor">
            <summary>
            Initializes a new instance of the Separator class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Separator.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.DialogBoxLauncher">
             <summary>
             <para>Defines the DialogBoxLauncher Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:dialogBoxLauncher.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ButtonRegular &lt;mso14:button></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DialogBoxLauncher.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DialogBoxLauncher.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DialogBoxLauncher.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DialogBoxLauncher.#ctor">
            <summary>
            Initializes a new instance of the DialogBoxLauncher class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DialogBoxLauncher.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the DialogBoxLauncher class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DialogBoxLauncher.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the DialogBoxLauncher class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DialogBoxLauncher.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DialogBoxLauncher class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DialogBoxLauncher.ButtonRegular">
            <summary>
            <para> ButtonRegular.</para>
            <para> Represents the following element tag in the schema: mso14:button </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DialogBoxLauncher.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Group">
             <summary>
             <para>Defines the Group Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:group.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ControlClone &lt;mso14:control></description></item>
            <item><description>LabelControl &lt;mso14:labelControl></description></item>
            <item><description>Button &lt;mso14:button></description></item>
            <item><description>ToggleButton &lt;mso14:toggleButton></description></item>
            <item><description>CheckBox &lt;mso14:checkBox></description></item>
            <item><description>EditBox &lt;mso14:editBox></description></item>
            <item><description>ComboBox &lt;mso14:comboBox></description></item>
            <item><description>DropDownRegular &lt;mso14:dropDown></description></item>
            <item><description>Gallery &lt;mso14:gallery></description></item>
            <item><description>Menu &lt;mso14:menu></description></item>
            <item><description>DynamicMenu &lt;mso14:dynamicMenu></description></item>
            <item><description>SplitButton &lt;mso14:splitButton></description></item>
            <item><description>Box &lt;mso14:box></description></item>
            <item><description>ButtonGroup &lt;mso14:buttonGroup></description></item>
            <item><description>Separator &lt;mso14:separator></description></item>
            <item><description>DialogBoxLauncher &lt;mso14:dialogBoxLauncher></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Group.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.AutoScale">
            <summary>
            <para> autoScale.</para>
            <para>Represents the following attribute in the schema: autoScale </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Group.CenterVertically">
            <summary>
            <para> centerVertically.</para>
            <para>Represents the following attribute in the schema: centerVertically </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Group.#ctor">
            <summary>
            Initializes a new instance of the Group class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Group.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Group class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Group.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Group class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Group.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Group class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Group.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat">
             <summary>
             <para>Defines the ControlCloneQat Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:control.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.IdQ">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.Size">
            <summary>
            <para> size.</para>
            <para>Represents the following attribute in the schema: size </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.GetSize">
            <summary>
            <para> getSize.</para>
            <para>Represents the following attribute in the schema: getSize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.ShowImage">
            <summary>
            <para> showImage.</para>
            <para>Represents the following attribute in the schema: showImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.GetShowImage">
            <summary>
            <para> getShowImage.</para>
            <para>Represents the following attribute in the schema: getShowImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.#ctor">
            <summary>
            Initializes a new instance of the ControlCloneQat class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ControlCloneQat.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.SharedControlsQatItems">
             <summary>
             <para>Defines the SharedControlsQatItems Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:sharedControls.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ControlCloneQat &lt;mso14:control></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
            <item><description>Separator &lt;mso14:separator></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SharedControlsQatItems.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SharedControlsQatItems.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SharedControlsQatItems.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SharedControlsQatItems.#ctor">
            <summary>
            Initializes a new instance of the SharedControlsQatItems class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SharedControlsQatItems.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SharedControlsQatItems class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SharedControlsQatItems.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SharedControlsQatItems class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SharedControlsQatItems.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SharedControlsQatItems class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SharedControlsQatItems.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.DocumentControlsQatItems">
             <summary>
             <para>Defines the DocumentControlsQatItems Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:documentControls.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ControlCloneQat &lt;mso14:control></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
            <item><description>Separator &lt;mso14:separator></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DocumentControlsQatItems.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.DocumentControlsQatItems.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DocumentControlsQatItems.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DocumentControlsQatItems.#ctor">
            <summary>
            Initializes a new instance of the DocumentControlsQatItems class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DocumentControlsQatItems.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the DocumentControlsQatItems class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DocumentControlsQatItems.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the DocumentControlsQatItems class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DocumentControlsQatItems.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DocumentControlsQatItems class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.DocumentControlsQatItems.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.QatItemsType">
             <summary>
             Defines the QatItemsType class.
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ControlCloneQat &lt;mso14:control></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
            <item><description>Separator &lt;mso14:separator></description></item>
             </list>
             </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.QatItemsType.#ctor">
            <summary>
            Initializes a new instance of the QatItemsType class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.QatItemsType.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the QatItemsType class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.QatItemsType.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the QatItemsType class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.QatItemsType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the QatItemsType class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Tab">
             <summary>
             <para>Defines the Tab Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:tab.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Group &lt;mso14:group></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.#ctor">
            <summary>
            Initializes a new instance of the Tab class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Tab class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Tab class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Tab class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tab.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet">
             <summary>
             <para>Defines the TabSet Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:tabSet.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Tab &lt;mso14:tab></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet.#ctor">
            <summary>
            Initializes a new instance of the TabSet class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the TabSet class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the TabSet class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TabSet class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TabSet.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Command">
             <summary>
             <para>Defines the Command Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:command.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Command.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Command.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Command.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Command.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Command.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Command.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Command.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Command.#ctor">
            <summary>
            Initializes a new instance of the Command class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Command.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.QuickAccessToolbar">
             <summary>
             <para>Defines the QuickAccessToolbar Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:qat.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>SharedControlsQatItems &lt;mso14:sharedControls></description></item>
            <item><description>DocumentControlsQatItems &lt;mso14:documentControls></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.QuickAccessToolbar.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.QuickAccessToolbar.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.QuickAccessToolbar.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.QuickAccessToolbar.#ctor">
            <summary>
            Initializes a new instance of the QuickAccessToolbar class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.QuickAccessToolbar.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the QuickAccessToolbar class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.QuickAccessToolbar.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the QuickAccessToolbar class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.QuickAccessToolbar.#ctor(System.String)">
            <summary>
            Initializes a new instance of the QuickAccessToolbar class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.QuickAccessToolbar.SharedControlsQatItems">
            <summary>
            <para> SharedControlsQatItems.</para>
            <para> Represents the following element tag in the schema: mso14:sharedControls </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.QuickAccessToolbar.DocumentControlsQatItems">
            <summary>
            <para> DocumentControlsQatItems.</para>
            <para> Represents the following element tag in the schema: mso14:documentControls </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.QuickAccessToolbar.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Tabs">
             <summary>
             <para>Defines the Tabs Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:tabs.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Tab &lt;mso14:tab></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tabs.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Tabs.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tabs.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tabs.#ctor">
            <summary>
            Initializes a new instance of the Tabs class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tabs.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Tabs class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tabs.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Tabs class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tabs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Tabs class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Tabs.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ContextualTabs">
             <summary>
             <para>Defines the ContextualTabs Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:contextualTabs.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>TabSet &lt;mso14:tabSet></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ContextualTabs.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ContextualTabs.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextualTabs.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextualTabs.#ctor">
            <summary>
            Initializes a new instance of the ContextualTabs class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextualTabs.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ContextualTabs class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextualTabs.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ContextualTabs class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextualTabs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContextualTabs class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextualTabs.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenu">
             <summary>
             <para>Defines the ContextMenu Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:contextMenu.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ControlCloneRegular &lt;mso14:control></description></item>
            <item><description>ButtonRegular &lt;mso14:button></description></item>
            <item><description>CheckBox &lt;mso14:checkBox></description></item>
            <item><description>GalleryRegular &lt;mso14:gallery></description></item>
            <item><description>ToggleButtonRegular &lt;mso14:toggleButton></description></item>
            <item><description>SplitButtonRegular &lt;mso14:splitButton></description></item>
            <item><description>MenuRegular &lt;mso14:menu></description></item>
            <item><description>DynamicMenuRegular &lt;mso14:dynamicMenu></description></item>
            <item><description>MenuSeparatorNoTitle &lt;mso14:menuSeparator></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenu.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenu.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenu.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenu.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenu.#ctor">
            <summary>
            Initializes a new instance of the ContextMenu class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenu.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ContextMenu class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenu.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ContextMenu class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenu.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContextMenu class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenu.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ItemBackstageItem">
             <summary>
             <para>Defines the ItemBackstageItem Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:item.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ItemBackstageItem.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ItemBackstageItem.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ItemBackstageItem.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ItemBackstageItem.#ctor">
            <summary>
            Initializes a new instance of the ItemBackstageItem class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ItemBackstageItem.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.RadioButtonBackstageItem">
             <summary>
             <para>Defines the RadioButtonBackstageItem Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:radioButton.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioButtonBackstageItem.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.RadioButtonBackstageItem.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.RadioButtonBackstageItem.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.RadioButtonBackstageItem.#ctor">
            <summary>
            Initializes a new instance of the RadioButtonBackstageItem class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.RadioButtonBackstageItem.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageItemType">
            <summary>
            Defines the BackstageItemType class.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageItemType.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageItemType.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageItemType.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageItemType.#ctor">
            <summary>
            Initializes a new instance of the BackstageItemType class.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton">
             <summary>
             <para>Defines the BackstageRegularButton Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:button.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.IsDefinitive">
            <summary>
            <para> isDefinitive.</para>
            <para>Represents the following attribute in the schema: isDefinitive </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.#ctor">
            <summary>
            Initializes a new instance of the BackstageRegularButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageRegularButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu">
             <summary>
             <para>Defines the BackstagePrimaryMenu Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:menu.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageMenuGroup &lt;mso14:menuGroup></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.Screentip">
            <summary>
            <para> screentip.</para>
            <para>Represents the following attribute in the schema: screentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.GetScreentip">
            <summary>
            <para> getScreentip.</para>
            <para>Represents the following attribute in the schema: getScreentip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.Supertip">
            <summary>
            <para> supertip.</para>
            <para>Represents the following attribute in the schema: supertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.GetSupertip">
            <summary>
            <para> getSupertip.</para>
            <para>Represents the following attribute in the schema: getSupertip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.#ctor">
            <summary>
            Initializes a new instance of the BackstagePrimaryMenu class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the BackstagePrimaryMenu class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the BackstagePrimaryMenu class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BackstagePrimaryMenu class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstagePrimaryMenu.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup">
             <summary>
             <para>Defines the BackstageMenuGroup Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:menuGroup.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageMenuButton &lt;mso14:button></description></item>
            <item><description>BackstageMenuCheckBox &lt;mso14:checkBox></description></item>
            <item><description>BackstageSubMenu &lt;mso14:menu></description></item>
            <item><description>BackstageMenuToggleButton &lt;mso14:toggleButton></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.ItemSize">
            <summary>
            <para> itemSize.</para>
            <para>Represents the following attribute in the schema: itemSize </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.#ctor">
            <summary>
            Initializes a new instance of the BackstageMenuGroup class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the BackstageMenuGroup class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the BackstageMenuGroup class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BackstageMenuGroup class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageMenuGroup.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.PrimaryItem">
             <summary>
             <para>Defines the PrimaryItem Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:primaryItem.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageRegularButton &lt;mso14:button></description></item>
            <item><description>BackstagePrimaryMenu &lt;mso14:menu></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.PrimaryItem.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.PrimaryItem.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.PrimaryItem.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.PrimaryItem.#ctor">
            <summary>
            Initializes a new instance of the PrimaryItem class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.PrimaryItem.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the PrimaryItem class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.PrimaryItem.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the PrimaryItem class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.PrimaryItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PrimaryItem class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.PrimaryItem.BackstageRegularButton">
            <summary>
            <para> BackstageRegularButton.</para>
            <para> Represents the following element tag in the schema: mso14:button </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.PrimaryItem.BackstagePrimaryMenu">
            <summary>
            <para> BackstagePrimaryMenu.</para>
            <para> Represents the following element tag in the schema: mso14:menu </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.PrimaryItem.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.TopItemsGroupControls">
             <summary>
             <para>Defines the TopItemsGroupControls Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:topItems.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageGroupButton &lt;mso14:button></description></item>
            <item><description>BackstageCheckBox &lt;mso14:checkBox></description></item>
            <item><description>BackstageEditBox &lt;mso14:editBox></description></item>
            <item><description>BackstageDropDown &lt;mso14:dropDown></description></item>
            <item><description>RadioGroup &lt;mso14:radioGroup></description></item>
            <item><description>BackstageComboBox &lt;mso14:comboBox></description></item>
            <item><description>Hyperlink &lt;mso14:hyperlink></description></item>
            <item><description>BackstageLabelControl &lt;mso14:labelControl></description></item>
            <item><description>GroupBox &lt;mso14:groupBox></description></item>
            <item><description>LayoutContainer &lt;mso14:layoutContainer></description></item>
            <item><description>ImageControl &lt;mso14:imageControl></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TopItemsGroupControls.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TopItemsGroupControls.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TopItemsGroupControls.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TopItemsGroupControls.#ctor">
            <summary>
            Initializes a new instance of the TopItemsGroupControls class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TopItemsGroupControls.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the TopItemsGroupControls class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TopItemsGroupControls.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the TopItemsGroupControls class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TopItemsGroupControls.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TopItemsGroupControls class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TopItemsGroupControls.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BottomItemsGroupControls">
             <summary>
             <para>Defines the BottomItemsGroupControls Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:bottomItems.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageGroupButton &lt;mso14:button></description></item>
            <item><description>BackstageCheckBox &lt;mso14:checkBox></description></item>
            <item><description>BackstageEditBox &lt;mso14:editBox></description></item>
            <item><description>BackstageDropDown &lt;mso14:dropDown></description></item>
            <item><description>RadioGroup &lt;mso14:radioGroup></description></item>
            <item><description>BackstageComboBox &lt;mso14:comboBox></description></item>
            <item><description>Hyperlink &lt;mso14:hyperlink></description></item>
            <item><description>BackstageLabelControl &lt;mso14:labelControl></description></item>
            <item><description>GroupBox &lt;mso14:groupBox></description></item>
            <item><description>LayoutContainer &lt;mso14:layoutContainer></description></item>
            <item><description>ImageControl &lt;mso14:imageControl></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BottomItemsGroupControls.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BottomItemsGroupControls.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BottomItemsGroupControls.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BottomItemsGroupControls.#ctor">
            <summary>
            Initializes a new instance of the BottomItemsGroupControls class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BottomItemsGroupControls.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the BottomItemsGroupControls class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BottomItemsGroupControls.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the BottomItemsGroupControls class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BottomItemsGroupControls.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BottomItemsGroupControls class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BottomItemsGroupControls.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.GroupControlsType">
             <summary>
             Defines the GroupControlsType class.
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageGroupButton &lt;mso14:button></description></item>
            <item><description>BackstageCheckBox &lt;mso14:checkBox></description></item>
            <item><description>BackstageEditBox &lt;mso14:editBox></description></item>
            <item><description>BackstageDropDown &lt;mso14:dropDown></description></item>
            <item><description>RadioGroup &lt;mso14:radioGroup></description></item>
            <item><description>BackstageComboBox &lt;mso14:comboBox></description></item>
            <item><description>Hyperlink &lt;mso14:hyperlink></description></item>
            <item><description>BackstageLabelControl &lt;mso14:labelControl></description></item>
            <item><description>GroupBox &lt;mso14:groupBox></description></item>
            <item><description>LayoutContainer &lt;mso14:layoutContainer></description></item>
            <item><description>ImageControl &lt;mso14:imageControl></description></item>
             </list>
             </remarks>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GroupControlsType.#ctor">
            <summary>
            Initializes a new instance of the GroupControlsType class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GroupControlsType.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the GroupControlsType class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GroupControlsType.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the GroupControlsType class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.GroupControlsType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the GroupControlsType class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory">
             <summary>
             <para>Defines the TaskGroupCategory Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:category.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>TaskGroupTask &lt;mso14:task></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.#ctor">
            <summary>
            Initializes a new instance of the TaskGroupCategory class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the TaskGroupCategory class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the TaskGroupCategory class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TaskGroupCategory class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupCategory.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask">
             <summary>
             <para>Defines the TaskGroupTask Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:task.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.IsDefinitive">
            <summary>
            <para> isDefinitive.</para>
            <para>Represents the following attribute in the schema: isDefinitive </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.#ctor">
            <summary>
            Initializes a new instance of the TaskGroupTask class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskGroupTask.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory">
             <summary>
             <para>Defines the TaskFormGroupCategory Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:category.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>TaskFormGroupTask &lt;mso14:task></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.#ctor">
            <summary>
            Initializes a new instance of the TaskFormGroupCategory class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the TaskFormGroupCategory class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the TaskFormGroupCategory class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TaskFormGroupCategory class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupCategory.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask">
             <summary>
             <para>Defines the TaskFormGroupTask Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:task.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageGroup &lt;mso14:group></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.Description">
            <summary>
            <para> description.</para>
            <para>Represents the following attribute in the schema: description </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.GetDescription">
            <summary>
            <para> getDescription.</para>
            <para>Represents the following attribute in the schema: getDescription </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.#ctor">
            <summary>
            Initializes a new instance of the TaskFormGroupTask class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the TaskFormGroupTask class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the TaskFormGroupTask class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TaskFormGroupTask class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroupTask.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup">
             <summary>
             <para>Defines the TaskFormGroup Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:taskFormGroup.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>TaskFormGroupCategory &lt;mso14:category></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.HelperText">
            <summary>
            <para> helperText.</para>
            <para>Represents the following attribute in the schema: helperText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.GetHelperText">
            <summary>
            <para> getHelperText.</para>
            <para>Represents the following attribute in the schema: getHelperText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.ShowLabel">
            <summary>
            <para> showLabel.</para>
            <para>Represents the following attribute in the schema: showLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.GetShowLabel">
            <summary>
            <para> getShowLabel.</para>
            <para>Represents the following attribute in the schema: getShowLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.AllowedTaskSizes">
            <summary>
            <para> allowedTaskSizes.</para>
            <para>Represents the following attribute in the schema: allowedTaskSizes </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.#ctor">
            <summary>
            Initializes a new instance of the TaskFormGroup class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the TaskFormGroup class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the TaskFormGroup class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TaskFormGroup class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.TaskFormGroup.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroups">
             <summary>
             <para>Defines the BackstageGroups Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:firstColumn.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>TaskFormGroup &lt;mso14:taskFormGroup></description></item>
            <item><description>BackstageGroup &lt;mso14:group></description></item>
            <item><description>TaskGroup &lt;mso14:taskGroup></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroups.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroups.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroups.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroups.#ctor">
            <summary>
            Initializes a new instance of the BackstageGroups class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroups.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the BackstageGroups class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroups.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the BackstageGroups class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroups.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BackstageGroups class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageGroups.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.SimpleGroups">
             <summary>
             <para>Defines the SimpleGroups Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:secondColumn.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageGroup &lt;mso14:group></description></item>
            <item><description>TaskGroup &lt;mso14:taskGroup></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SimpleGroups.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.SimpleGroups.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SimpleGroups.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SimpleGroups.#ctor">
            <summary>
            Initializes a new instance of the SimpleGroups class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SimpleGroups.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SimpleGroups class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SimpleGroups.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SimpleGroups class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SimpleGroups.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SimpleGroups class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.SimpleGroups.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab">
             <summary>
             <para>Defines the BackstageTab Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:tab.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageGroups &lt;mso14:firstColumn></description></item>
            <item><description>SimpleGroups &lt;mso14:secondColumn></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.Title">
            <summary>
            <para> title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.GetTitle">
            <summary>
            <para> getTitle.</para>
            <para>Represents the following attribute in the schema: getTitle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.ColumnWidthPercent">
            <summary>
            <para> columnWidthPercent.</para>
            <para>Represents the following attribute in the schema: columnWidthPercent </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.FirstColumnMinWidth">
            <summary>
            <para> firstColumnMinWidth.</para>
            <para>Represents the following attribute in the schema: firstColumnMinWidth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.FirstColumnMaxWidth">
            <summary>
            <para> firstColumnMaxWidth.</para>
            <para>Represents the following attribute in the schema: firstColumnMaxWidth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.SecondColumnMinWidth">
            <summary>
            <para> secondColumnMinWidth.</para>
            <para>Represents the following attribute in the schema: secondColumnMinWidth </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.SecondColumnMaxWidth">
            <summary>
            <para> secondColumnMaxWidth.</para>
            <para>Represents the following attribute in the schema: secondColumnMaxWidth </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.#ctor">
            <summary>
            Initializes a new instance of the BackstageTab class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the BackstageTab class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the BackstageTab class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BackstageTab class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.BackstageGroups">
            <summary>
            <para> BackstageGroups.</para>
            <para> Represents the following element tag in the schema: mso14:firstColumn </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.SimpleGroups">
            <summary>
            <para> SimpleGroups.</para>
            <para> Represents the following element tag in the schema: mso14:secondColumn </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageTab.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton">
             <summary>
             <para>Defines the BackstageFastCommandButton Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:button.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.IdMso">
            <summary>
            <para> idMso.</para>
            <para>Represents the following attribute in the schema: idMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.InsertAfterMso">
            <summary>
            <para> insertAfterMso.</para>
            <para>Represents the following attribute in the schema: insertAfterMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.InsertBeforeMso">
            <summary>
            <para> insertBeforeMso.</para>
            <para>Represents the following attribute in the schema: insertBeforeMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.InsertAfterQulifiedId">
            <summary>
            <para> insertAfterQ.</para>
            <para>Represents the following attribute in the schema: insertAfterQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.InsertBeforeQulifiedId">
            <summary>
            <para> insertBeforeQ.</para>
            <para>Represents the following attribute in the schema: insertBeforeQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.QualifiedId">
            <summary>
            <para> idQ.</para>
            <para>Represents the following attribute in the schema: idQ </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.Tag">
            <summary>
            <para> tag.</para>
            <para>Represents the following attribute in the schema: tag </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.OnAction">
            <summary>
            <para> onAction.</para>
            <para>Represents the following attribute in the schema: onAction </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.IsDefinitive">
            <summary>
            <para> isDefinitive.</para>
            <para>Represents the following attribute in the schema: isDefinitive </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.Enabled">
            <summary>
            <para> enabled.</para>
            <para>Represents the following attribute in the schema: enabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.GetEnabled">
            <summary>
            <para> getEnabled.</para>
            <para>Represents the following attribute in the schema: getEnabled </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.Label">
            <summary>
            <para> label.</para>
            <para>Represents the following attribute in the schema: label </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.GetLabel">
            <summary>
            <para> getLabel.</para>
            <para>Represents the following attribute in the schema: getLabel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.GetVisible">
            <summary>
            <para> getVisible.</para>
            <para>Represents the following attribute in the schema: getVisible </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.Keytip">
            <summary>
            <para> keytip.</para>
            <para>Represents the following attribute in the schema: keytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.GetKeytip">
            <summary>
            <para> getKeytip.</para>
            <para>Represents the following attribute in the schema: getKeytip </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.Image">
            <summary>
            <para> image.</para>
            <para>Represents the following attribute in the schema: image </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.ImageMso">
            <summary>
            <para> imageMso.</para>
            <para>Represents the following attribute in the schema: imageMso </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.GetImage">
            <summary>
            <para> getImage.</para>
            <para>Represents the following attribute in the schema: getImage </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.#ctor">
            <summary>
            Initializes a new instance of the BackstageFastCommandButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.BackstageFastCommandButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Commands">
             <summary>
             <para>Defines the Commands Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:commands.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Command &lt;mso14:command></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Commands.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Commands.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Commands.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Commands.#ctor">
            <summary>
            Initializes a new instance of the Commands class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Commands.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Commands class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Commands.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Commands class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Commands.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Commands class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Commands.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon">
             <summary>
             <para>Defines the Ribbon Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:ribbon.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>QuickAccessToolbar &lt;mso14:qat></description></item>
            <item><description>Tabs &lt;mso14:tabs></description></item>
            <item><description>ContextualTabs &lt;mso14:contextualTabs></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.StartFromScratch">
            <summary>
            <para> startFromScratch.</para>
            <para>Represents the following attribute in the schema: startFromScratch </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.#ctor">
            <summary>
            Initializes a new instance of the Ribbon class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Ribbon class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Ribbon class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Ribbon class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.QuickAccessToolbar">
            <summary>
            <para> QuickAccessToolbar.</para>
            <para> Represents the following element tag in the schema: mso14:qat </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.Tabs">
            <summary>
            <para> Tabs.</para>
            <para> Represents the following element tag in the schema: mso14:tabs </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.ContextualTabs">
            <summary>
            <para> ContextualTabs.</para>
            <para> Represents the following element tag in the schema: mso14:contextualTabs </para>
            </summary>
            <remark>
            xmlns:mso14 = http://schemas.microsoft.com/office/2009/07/customui
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Ribbon.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Backstage">
             <summary>
             <para>Defines the Backstage Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:backstage.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>BackstageTab &lt;mso14:tab></description></item>
            <item><description>BackstageFastCommandButton &lt;mso14:button></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Backstage.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Backstage.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Backstage.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Backstage.OnShow">
            <summary>
            <para> onShow.</para>
            <para>Represents the following attribute in the schema: onShow </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.Backstage.OnHide">
            <summary>
            <para> onHide.</para>
            <para>Represents the following attribute in the schema: onHide </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Backstage.#ctor">
            <summary>
            Initializes a new instance of the Backstage class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Backstage.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Backstage class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Backstage.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Backstage class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Backstage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Backstage class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.Backstage.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus">
             <summary>
             <para>Defines the ContextMenus Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is mso14:contextMenus.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ContextMenu &lt;mso14:contextMenu></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus.#ctor">
            <summary>
            Initializes a new instance of the ContextMenus class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ContextMenus class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ContextMenus class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContextMenus class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.CustomUI.ContextMenus.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryShowInRibbonValues">
            <summary>
            Defines the GalleryShowInRibbonValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryShowInRibbonValues.False">
            <summary>
            false.
            <para>When the item is serialized out as xml, its value is "false".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.GalleryShowInRibbonValues.Zero">
            <summary>
            0.
            <para>When the item is serialized out as xml, its value is "0".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.SizeValues">
            <summary>
            Defines the SizeValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.SizeValues.Normal">
            <summary>
            normal.
            <para>When the item is serialized out as xml, its value is "normal".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.SizeValues.Large">
            <summary>
            large.
            <para>When the item is serialized out as xml, its value is "large".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ItemSizeValues">
            <summary>
            Defines the ItemSizeValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.ItemSizeValues.Normal">
            <summary>
            normal.
            <para>When the item is serialized out as xml, its value is "normal".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.ItemSizeValues.Large">
            <summary>
            large.
            <para>When the item is serialized out as xml, its value is "large".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.BoxStyleValues">
            <summary>
            Defines the BoxStyleValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.BoxStyleValues.Horizontal">
            <summary>
            horizontal.
            <para>When the item is serialized out as xml, its value is "horizontal".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.BoxStyleValues.Vertical">
            <summary>
            vertical.
            <para>When the item is serialized out as xml, its value is "vertical".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.TaskSizesValues">
            <summary>
            Defines the TaskSizesValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.TaskSizesValues.LargeMediumSmall">
            <summary>
            largeMediumSmall.
            <para>When the item is serialized out as xml, its value is "largeMediumSmall".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.TaskSizesValues.LargeMedium">
            <summary>
            largeMedium.
            <para>When the item is serialized out as xml, its value is "largeMedium".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.TaskSizesValues.Large">
            <summary>
            large.
            <para>When the item is serialized out as xml, its value is "large".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.TaskSizesValues.MediumSmall">
            <summary>
            mediumSmall.
            <para>When the item is serialized out as xml, its value is "mediumSmall".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.TaskSizesValues.Medium">
            <summary>
            medium.
            <para>When the item is serialized out as xml, its value is "medium".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.TaskSizesValues.Small">
            <summary>
            small.
            <para>When the item is serialized out as xml, its value is "small".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.ExpandValues">
            <summary>
            Defines the ExpandValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.ExpandValues.TopLeft">
            <summary>
            topLeft.
            <para>When the item is serialized out as xml, its value is "topLeft".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.ExpandValues.Top">
            <summary>
            top.
            <para>When the item is serialized out as xml, its value is "top".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.ExpandValues.TopRight">
            <summary>
            topRight.
            <para>When the item is serialized out as xml, its value is "topRight".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.ExpandValues.Left">
            <summary>
            left.
            <para>When the item is serialized out as xml, its value is "left".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.ExpandValues.Center">
            <summary>
            center.
            <para>When the item is serialized out as xml, its value is "center".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.ExpandValues.Right">
            <summary>
            right.
            <para>When the item is serialized out as xml, its value is "right".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.ExpandValues.BottomLeft">
            <summary>
            bottomLeft.
            <para>When the item is serialized out as xml, its value is "bottomLeft".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.ExpandValues.Bottom">
            <summary>
            bottom.
            <para>When the item is serialized out as xml, its value is "bottom".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.ExpandValues.BottomRight">
            <summary>
            bottomRight.
            <para>When the item is serialized out as xml, its value is "bottomRight".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.StyleValues">
            <summary>
            Defines the StyleValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.StyleValues.Normal">
            <summary>
            normal.
            <para>When the item is serialized out as xml, its value is "normal".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.StyleValues.Warning">
            <summary>
            warning.
            <para>When the item is serialized out as xml, its value is "warning".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.StyleValues.Error">
            <summary>
            error.
            <para>When the item is serialized out as xml, its value is "error".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.Style2Values">
            <summary>
            Defines the Style2Values enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.Style2Values.Normal">
            <summary>
            normal.
            <para>When the item is serialized out as xml, its value is "normal".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.Style2Values.Borderless">
            <summary>
            borderless.
            <para>When the item is serialized out as xml, its value is "borderless".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.Style2Values.Large">
            <summary>
            large.
            <para>When the item is serialized out as xml, its value is "large".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutChildrenValues">
            <summary>
            Defines the LayoutChildrenValues enumeration. 
            </summary> 
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutChildrenValues.Horizontal">
            <summary>
            horizontal.
            <para>When the item is serialized out as xml, its value is "horizontal".</para>
            </summary>
        </member>
        <member name="F:DocumentFormat.OpenXml.Office2010.CustomUI.LayoutChildrenValues.Vertical">
            <summary>
            vertical.
            <para>When the item is serialized out as xml, its value is "vertical".</para>
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions">
             <summary>
             <para>Defines the PivotOptions Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:pivotOptions.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DropZoneFilter &lt;c14:dropZoneFilter></description></item>
            <item><description>DropZoneCategories &lt;c14:dropZoneCategories></description></item>
            <item><description>DropZoneData &lt;c14:dropZoneData></description></item>
            <item><description>DropZoneSeries &lt;c14:dropZoneSeries></description></item>
            <item><description>DropZonesVisible &lt;c14:dropZonesVisible></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.#ctor">
            <summary>
            Initializes a new instance of the PivotOptions class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the PivotOptions class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the PivotOptions class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PivotOptions class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.DropZoneFilter">
            <summary>
            <para> DropZoneFilter.</para>
            <para> Represents the following element tag in the schema: c14:dropZoneFilter </para>
            </summary>
            <remark>
            xmlns:c14 = http://schemas.microsoft.com/office/drawing/2007/8/2/chart
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.DropZoneCategories">
            <summary>
            <para> DropZoneCategories.</para>
            <para> Represents the following element tag in the schema: c14:dropZoneCategories </para>
            </summary>
            <remark>
            xmlns:c14 = http://schemas.microsoft.com/office/drawing/2007/8/2/chart
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.DropZoneData">
            <summary>
            <para> DropZoneData.</para>
            <para> Represents the following element tag in the schema: c14:dropZoneData </para>
            </summary>
            <remark>
            xmlns:c14 = http://schemas.microsoft.com/office/drawing/2007/8/2/chart
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.DropZoneSeries">
            <summary>
            <para> DropZoneSeries.</para>
            <para> Represents the following element tag in the schema: c14:dropZoneSeries </para>
            </summary>
            <remark>
            xmlns:c14 = http://schemas.microsoft.com/office/drawing/2007/8/2/chart
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.DropZonesVisible">
            <summary>
            <para> DropZonesVisible.</para>
            <para> Represents the following element tag in the schema: c14:dropZonesVisible </para>
            </summary>
            <remark>
            xmlns:c14 = http://schemas.microsoft.com/office/drawing/2007/8/2/chart
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.PivotOptions.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.SketchOptions">
             <summary>
             <para>Defines the SketchOptions Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:sketchOptions.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>InSketchMode &lt;c14:inSketchMode></description></item>
            <item><description>ShowSketchButton &lt;c14:showSketchBtn></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.SketchOptions.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.SketchOptions.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.SketchOptions.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.SketchOptions.#ctor">
            <summary>
            Initializes a new instance of the SketchOptions class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.SketchOptions.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SketchOptions class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.SketchOptions.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SketchOptions class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.SketchOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SketchOptions class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.SketchOptions.InSketchMode">
            <summary>
            <para> InSketchMode.</para>
            <para> Represents the following element tag in the schema: c14:inSketchMode </para>
            </summary>
            <remark>
            xmlns:c14 = http://schemas.microsoft.com/office/drawing/2007/8/2/chart
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.SketchOptions.ShowSketchButton">
            <summary>
            <para> ShowSketchButton.</para>
            <para> Represents the following element tag in the schema: c14:showSketchBtn </para>
            </summary>
            <remark>
            xmlns:c14 = http://schemas.microsoft.com/office/drawing/2007/8/2/chart
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.SketchOptions.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InvertSolidFillFormat">
             <summary>
             <para>Defines the InvertSolidFillFormat Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:invertSolidFillFmt.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ShapeProperties &lt;c14:spPr></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InvertSolidFillFormat.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InvertSolidFillFormat.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InvertSolidFillFormat.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InvertSolidFillFormat.#ctor">
            <summary>
            Initializes a new instance of the InvertSolidFillFormat class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InvertSolidFillFormat.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the InvertSolidFillFormat class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InvertSolidFillFormat.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the InvertSolidFillFormat class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InvertSolidFillFormat.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvertSolidFillFormat class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InvertSolidFillFormat.ShapeProperties">
            <summary>
            <para> ShapeProperties.</para>
            <para> Represents the following element tag in the schema: c14:spPr </para>
            </summary>
            <remark>
            xmlns:c14 = http://schemas.microsoft.com/office/drawing/2007/8/2/chart
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InvertSolidFillFormat.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.Style">
             <summary>
             <para>Defines the Style Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:style.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.Style.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.Style.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.Style.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.Style.Val">
            <summary>
            <para> val.</para>
            <para>Represents the following attribute in the schema: val </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.Style.#ctor">
            <summary>
            Initializes a new instance of the Style class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.Style.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShapeProperties">
             <summary>
             <para>Defines the ShapeProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:spPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.Transform2D &lt;a:xfrm></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.CustomGeometry &lt;a:custGeom></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.PresetGeometry &lt;a:prstGeom></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.NoFill &lt;a:noFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.SolidFill &lt;a:solidFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.GradientFill &lt;a:gradFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.BlipFill &lt;a:blipFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.PatternFill &lt;a:pattFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.GroupFill &lt;a:grpFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.Outline &lt;a:ln></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.EffectList &lt;a:effectLst></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.EffectDag &lt;a:effectDag></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.Scene3DType &lt;a:scene3d></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.Shape3DType &lt;a:sp3d></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.ShapePropertiesExtensionList &lt;a:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShapeProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShapeProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShapeProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShapeProperties.BlackWhiteMode">
            <summary>
            <para> Black and White Mode.</para>
            <para>Represents the following attribute in the schema: bwMode </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShapeProperties.#ctor">
            <summary>
            Initializes a new instance of the ShapeProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShapeProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ShapeProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShapeProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ShapeProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShapeProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ShapeProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShapeProperties.Transform2D">
            <summary>
            <para> 2D Transform for Individual Objects.</para>
            <para> Represents the following element tag in the schema: a:xfrm </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShapeProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneFilter">
             <summary>
             <para>Defines the DropZoneFilter Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:dropZoneFilter.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneFilter.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneFilter.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneFilter.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneFilter.#ctor">
            <summary>
            Initializes a new instance of the DropZoneFilter class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneFilter.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneCategories">
             <summary>
             <para>Defines the DropZoneCategories Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:dropZoneCategories.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneCategories.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneCategories.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneCategories.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneCategories.#ctor">
            <summary>
            Initializes a new instance of the DropZoneCategories class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneCategories.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneData">
             <summary>
             <para>Defines the DropZoneData Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:dropZoneData.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneData.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneData.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneData.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneData.#ctor">
            <summary>
            Initializes a new instance of the DropZoneData class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneData.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneSeries">
             <summary>
             <para>Defines the DropZoneSeries Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:dropZoneSeries.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneSeries.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneSeries.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneSeries.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneSeries.#ctor">
            <summary>
            Initializes a new instance of the DropZoneSeries class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZoneSeries.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZonesVisible">
             <summary>
             <para>Defines the DropZonesVisible Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:dropZonesVisible.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZonesVisible.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZonesVisible.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZonesVisible.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZonesVisible.#ctor">
            <summary>
            Initializes a new instance of the DropZonesVisible class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.DropZonesVisible.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InSketchMode">
             <summary>
             <para>Defines the InSketchMode Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:inSketchMode.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InSketchMode.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InSketchMode.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InSketchMode.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InSketchMode.#ctor">
            <summary>
            Initializes a new instance of the InSketchMode class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.InSketchMode.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.BooleanFalseType">
            <summary>
            Defines the BooleanFalseType class.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.BooleanFalseType.Val">
            <summary>
            <para> val.</para>
            <para>Represents the following attribute in the schema: val </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.BooleanFalseType.#ctor">
            <summary>
            Initializes a new instance of the BooleanFalseType class.
            </summary>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShowSketchButton">
             <summary>
             <para>Defines the ShowSketchButton Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is c14:showSketchBtn.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShowSketchButton.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShowSketchButton.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShowSketchButton.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShowSketchButton.Val">
            <summary>
            <para> val.</para>
            <para>Represents the following attribute in the schema: val </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShowSketchButton.#ctor">
            <summary>
            Initializes a new instance of the ShowSketchButton class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Charts.ShowSketchButton.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart">
             <summary>
             <para>Defines the ContentPart Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is cdr14:contentPart.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>NonVisualContentPartProperties &lt;cdr14:nvContentPartPr></description></item>
            <item><description>ApplicationNonVisualDrawingProperties &lt;cdr14:nvPr></description></item>
            <item><description>Transform2D &lt;cdr14:xfrm></description></item>
            <item><description>OfficeArtExtensionList &lt;cdr14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.RelationshipId">
             <summary>
             <para> id.</para>
             <para>Represents the following attribute in the schema: r:id </para>
             </summary>
            <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.BlackWhiteMode">
            <summary>
            <para> bwMode.</para>
            <para>Represents the following attribute in the schema: bwMode </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.#ctor">
            <summary>
            Initializes a new instance of the ContentPart class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ContentPart class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ContentPart class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContentPart class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.NonVisualContentPartProperties">
            <summary>
            <para> NonVisualContentPartProperties.</para>
            <para> Represents the following element tag in the schema: cdr14:nvContentPartPr </para>
            </summary>
            <remark>
            xmlns:cdr14 = http://schemas.microsoft.com/office/drawing/2010/chartDrawing
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.ApplicationNonVisualDrawingProperties">
            <summary>
            <para> ApplicationNonVisualDrawingProperties.</para>
            <para> Represents the following element tag in the schema: cdr14:nvPr </para>
            </summary>
            <remark>
            xmlns:cdr14 = http://schemas.microsoft.com/office/drawing/2010/chartDrawing
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.Transform2D">
            <summary>
            <para> Transform2D.</para>
            <para> Represents the following element tag in the schema: cdr14:xfrm </para>
            </summary>
            <remark>
            xmlns:cdr14 = http://schemas.microsoft.com/office/drawing/2010/chartDrawing
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.OfficeArtExtensionList">
            <summary>
            <para> OfficeArtExtensionList.</para>
            <para> Represents the following element tag in the schema: cdr14:extLst </para>
            </summary>
            <remark>
            xmlns:cdr14 = http://schemas.microsoft.com/office/drawing/2010/chartDrawing
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ContentPart.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties">
             <summary>
             <para>Defines the NonVisualDrawingProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is cdr14:cNvPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.HyperlinkOnClick &lt;a:hlinkClick></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.HyperlinkOnHover &lt;a:hlinkHover></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.NonVisualDrawingPropertiesExtensionList &lt;a:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.Name">
            <summary>
            <para> name.</para>
            <para>Represents the following attribute in the schema: name </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.Description">
            <summary>
            <para> descr.</para>
            <para>Represents the following attribute in the schema: descr </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.Hidden">
            <summary>
            <para> hidden.</para>
            <para>Represents the following attribute in the schema: hidden </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.Title">
            <summary>
            <para> title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.#ctor">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the NonVisualDrawingProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.HyperlinkOnClick">
            <summary>
            <para> HyperlinkOnClick.</para>
            <para> Represents the following element tag in the schema: a:hlinkClick </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.HyperlinkOnHover">
            <summary>
            <para> HyperlinkOnHover.</para>
            <para> Represents the following element tag in the schema: a:hlinkHover </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.NonVisualDrawingPropertiesExtensionList">
            <summary>
            <para> NonVisualDrawingPropertiesExtensionList.</para>
            <para> Represents the following element tag in the schema: a:extLst </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualDrawingProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties">
             <summary>
             <para>Defines the NonVisualInkContentPartProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is cdr14:cNvContentPartPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks &lt;a14:cpLocks></description></item>
            <item><description>DocumentFormat.OpenXml.Office2010.Drawing.OfficeArtExtensionList &lt;a14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties.IsComment">
            <summary>
            <para> isComment.</para>
            <para>Represents the following attribute in the schema: isComment </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties.#ctor">
            <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties.ContentPartLocks">
            <summary>
            <para> ContentPartLocks.</para>
            <para> Represents the following element tag in the schema: a14:cpLocks </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties.OfficeArtExtensionList">
            <summary>
            <para> OfficeArtExtensionList.</para>
            <para> Represents the following element tag in the schema: a14:extLst </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualInkContentPartProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualContentPartProperties">
             <summary>
             <para>Defines the NonVisualContentPartProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is cdr14:nvContentPartPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>NonVisualDrawingProperties &lt;cdr14:cNvPr></description></item>
            <item><description>NonVisualInkContentPartProperties &lt;cdr14:cNvContentPartPr></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualContentPartProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualContentPartProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualContentPartProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualContentPartProperties.#ctor">
            <summary>
            Initializes a new instance of the NonVisualContentPartProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualContentPartProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the NonVisualContentPartProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualContentPartProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the NonVisualContentPartProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualContentPartProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NonVisualContentPartProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualContentPartProperties.NonVisualDrawingProperties">
            <summary>
            <para> NonVisualDrawingProperties.</para>
            <para> Represents the following element tag in the schema: cdr14:cNvPr </para>
            </summary>
            <remark>
            xmlns:cdr14 = http://schemas.microsoft.com/office/drawing/2010/chartDrawing
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualContentPartProperties.NonVisualInkContentPartProperties">
            <summary>
            <para> NonVisualInkContentPartProperties.</para>
            <para> Represents the following element tag in the schema: cdr14:cNvContentPartPr </para>
            </summary>
            <remark>
            xmlns:cdr14 = http://schemas.microsoft.com/office/drawing/2010/chartDrawing
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.NonVisualContentPartProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ApplicationNonVisualDrawingProperties">
             <summary>
             <para>Defines the ApplicationNonVisualDrawingProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is cdr14:nvPr.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ApplicationNonVisualDrawingProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ApplicationNonVisualDrawingProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ApplicationNonVisualDrawingProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ApplicationNonVisualDrawingProperties.Macro">
            <summary>
            <para> macro.</para>
            <para>Represents the following attribute in the schema: macro </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ApplicationNonVisualDrawingProperties.Published">
            <summary>
            <para> fPublished.</para>
            <para>Represents the following attribute in the schema: fPublished </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ApplicationNonVisualDrawingProperties.#ctor">
            <summary>
            Initializes a new instance of the ApplicationNonVisualDrawingProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.ApplicationNonVisualDrawingProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D">
             <summary>
             <para>Defines the Transform2D Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is cdr14:xfrm.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.Offset &lt;a:off></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.Extents &lt;a:ext></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.Rotation">
            <summary>
            <para> Rotation.</para>
            <para>Represents the following attribute in the schema: rot </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.HorizontalFlip">
            <summary>
            <para> Horizontal Flip.</para>
            <para>Represents the following attribute in the schema: flipH </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.VerticalFlip">
            <summary>
            <para> Vertical Flip.</para>
            <para>Represents the following attribute in the schema: flipV </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.#ctor">
            <summary>
            Initializes a new instance of the Transform2D class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Transform2D class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Transform2D class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Transform2D class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.Offset">
            <summary>
            <para> Offset.</para>
            <para> Represents the following element tag in the schema: a:off </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.Extents">
            <summary>
            <para> Extents.</para>
            <para> Represents the following element tag in the schema: a:ext </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.Transform2D.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.OfficeArtExtensionList">
             <summary>
             <para>Defines the OfficeArtExtensionList Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is cdr14:extLst.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.Extension &lt;a:ext></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.OfficeArtExtensionList.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.OfficeArtExtensionList.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.OfficeArtExtensionList.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.OfficeArtExtensionList.#ctor">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.OfficeArtExtensionList.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the OfficeArtExtensionList class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.OfficeArtExtensionList.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.OfficeArtExtensionList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ChartDrawing.OfficeArtExtensionList.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.LegacyCompatibility.CompatibilityShape">
             <summary>
             <para>Defines the CompatibilityShape Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is com14:compatSp.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.LegacyCompatibility.CompatibilityShape.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.LegacyCompatibility.CompatibilityShape.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.LegacyCompatibility.CompatibilityShape.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.LegacyCompatibility.CompatibilityShape.ShapeId">
            <summary>
            <para> spid.</para>
            <para>Represents the following attribute in the schema: spid </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.LegacyCompatibility.CompatibilityShape.#ctor">
            <summary>
            Initializes a new instance of the CompatibilityShape class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.LegacyCompatibility.CompatibilityShape.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties">
             <summary>
             <para>Defines the NonVisualDrawingProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is dgm14:cNvPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.HyperlinkOnClick &lt;a:hlinkClick></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.HyperlinkOnHover &lt;a:hlinkHover></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.NonVisualDrawingPropertiesExtensionList &lt;a:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.Name">
            <summary>
            <para> name.</para>
            <para>Represents the following attribute in the schema: name </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.Description">
            <summary>
            <para> descr.</para>
            <para>Represents the following attribute in the schema: descr </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.Hidden">
            <summary>
            <para> hidden.</para>
            <para>Represents the following attribute in the schema: hidden </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.Title">
            <summary>
            <para> title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.#ctor">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the NonVisualDrawingProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.HyperlinkOnClick">
            <summary>
            <para> HyperlinkOnClick.</para>
            <para> Represents the following element tag in the schema: a:hlinkClick </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.HyperlinkOnHover">
            <summary>
            <para> HyperlinkOnHover.</para>
            <para> Represents the following element tag in the schema: a:hlinkHover </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.NonVisualDrawingPropertiesExtensionList">
            <summary>
            <para> NonVisualDrawingPropertiesExtensionList.</para>
            <para> Represents the following element tag in the schema: a:extLst </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.NonVisualDrawingProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.RecolorImages">
             <summary>
             <para>Defines the RecolorImages Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is dgm14:recolorImg.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.RecolorImages.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.RecolorImages.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.RecolorImages.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.RecolorImages.Val">
            <summary>
            <para> val.</para>
            <para>Represents the following attribute in the schema: val </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.RecolorImages.#ctor">
            <summary>
            Initializes a new instance of the RecolorImages class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Diagram.RecolorImages.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.CameraTool">
             <summary>
             <para>Defines the CameraTool Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:cameraTool.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.CameraTool.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.CameraTool.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.CameraTool.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.CameraTool.CellRange">
            <summary>
            <para> cellRange.</para>
            <para>Represents the following attribute in the schema: cellRange </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.CameraTool.ShapeId">
            <summary>
            <para> spid.</para>
            <para>Represents the following attribute in the schema: spid </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.CameraTool.#ctor">
            <summary>
            Initializes a new instance of the CameraTool class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.CameraTool.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.CompatExtension">
             <summary>
             <para>Defines the CompatExtension Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:compatExt.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.CompatExtension.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.CompatExtension.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.CompatExtension.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.CompatExtension.ShapeId">
            <summary>
            <para> spid.</para>
            <para>Represents the following attribute in the schema: spid </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.CompatExtension.#ctor">
            <summary>
            Initializes a new instance of the CompatExtension class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.CompatExtension.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.IsCanvas">
             <summary>
             <para>Defines the IsCanvas Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:isCanvas.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.IsCanvas.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.IsCanvas.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.IsCanvas.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.IsCanvas.Val">
            <summary>
            <para> val.</para>
            <para>Represents the following attribute in the schema: val </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.IsCanvas.#ctor">
            <summary>
            Initializes a new instance of the IsCanvas class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.IsCanvas.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart">
             <summary>
             <para>Defines the GvmlContentPart Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:contentPart.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>NonVisualContentPartProperties &lt;a14:nvContentPartPr></description></item>
            <item><description>Transform2D &lt;a14:xfrm></description></item>
            <item><description>OfficeArtExtensionList &lt;a14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.BlackWhiteMode">
            <summary>
            <para> bwMode.</para>
            <para>Represents the following attribute in the schema: bwMode </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.RelationshipId">
             <summary>
             <para> id.</para>
             <para>Represents the following attribute in the schema: r:id </para>
             </summary>
            <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.#ctor">
            <summary>
            Initializes a new instance of the GvmlContentPart class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the GvmlContentPart class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the GvmlContentPart class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.#ctor(System.String)">
            <summary>
            Initializes a new instance of the GvmlContentPart class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.NonVisualContentPartProperties">
            <summary>
            <para> NonVisualContentPartProperties.</para>
            <para> Represents the following element tag in the schema: a14:nvContentPartPr </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.Transform2D">
            <summary>
            <para> Transform2D.</para>
            <para> Represents the following element tag in the schema: a14:xfrm </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.OfficeArtExtensionList">
            <summary>
            <para> OfficeArtExtensionList.</para>
            <para> Represents the following element tag in the schema: a14:extLst </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.GvmlContentPart.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ShadowObscured">
             <summary>
             <para>Defines the ShadowObscured Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:shadowObscured.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ShadowObscured.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ShadowObscured.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ShadowObscured.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ShadowObscured.Val">
            <summary>
            <para> val.</para>
            <para>Represents the following attribute in the schema: val </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ShadowObscured.#ctor">
            <summary>
            Initializes a new instance of the ShadowObscured class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ShadowObscured.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties">
             <summary>
             <para>Defines the HiddenFillProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:hiddenFill.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.NoFill &lt;a:noFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.SolidFill &lt;a:solidFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.GradientFill &lt;a:gradFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.BlipFill &lt;a:blipFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.PatternFill &lt;a:pattFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.GroupFill &lt;a:grpFill></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.#ctor">
            <summary>
            Initializes a new instance of the HiddenFillProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the HiddenFillProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the HiddenFillProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HiddenFillProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.NoFill">
            <summary>
            <para> NoFill.</para>
            <para> Represents the following element tag in the schema: a:noFill </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.SolidFill">
            <summary>
            <para> SolidFill.</para>
            <para> Represents the following element tag in the schema: a:solidFill </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.GradientFill">
            <summary>
            <para> GradientFill.</para>
            <para> Represents the following element tag in the schema: a:gradFill </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.BlipFill">
            <summary>
            <para> BlipFill.</para>
            <para> Represents the following element tag in the schema: a:blipFill </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.PatternFill">
            <summary>
            <para> Pattern Fill.</para>
            <para> Represents the following element tag in the schema: a:pattFill </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.GroupFill">
            <summary>
            <para> Group Fill.</para>
            <para> Represents the following element tag in the schema: a:grpFill </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenFillProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties">
             <summary>
             <para>Defines the HiddenLineProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:hiddenLine.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.NoFill &lt;a:noFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.SolidFill &lt;a:solidFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.GradientFill &lt;a:gradFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.PatternFill &lt;a:pattFill></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.PresetDash &lt;a:prstDash></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.CustomDash &lt;a:custDash></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.Round &lt;a:round></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.LineJoinBevel &lt;a:bevel></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.Miter &lt;a:miter></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.HeadEnd &lt;a:headEnd></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.TailEnd &lt;a:tailEnd></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.ExtensionList &lt;a:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.Width">
            <summary>
            <para> Line Width.</para>
            <para>Represents the following attribute in the schema: w </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.CapType">
            <summary>
            <para> Line Ending Cap Type.</para>
            <para>Represents the following attribute in the schema: cap </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.CompoundLineType">
            <summary>
            <para> Compound Line Type.</para>
            <para>Represents the following attribute in the schema: cmpd </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.Alignment">
            <summary>
            <para> Stroke Alignment.</para>
            <para>Represents the following attribute in the schema: algn </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.#ctor">
            <summary>
            Initializes a new instance of the HiddenLineProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the HiddenLineProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the HiddenLineProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HiddenLineProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenLineProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.HiddenEffectsProperties">
             <summary>
             <para>Defines the HiddenEffectsProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:hiddenEffects.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.EffectList &lt;a:effectLst></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.EffectDag &lt;a:effectDag></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenEffectsProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenEffectsProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenEffectsProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenEffectsProperties.#ctor">
            <summary>
            Initializes a new instance of the HiddenEffectsProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenEffectsProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the HiddenEffectsProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenEffectsProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the HiddenEffectsProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenEffectsProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HiddenEffectsProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenEffectsProperties.EffectList">
            <summary>
            <para> Effect Container.</para>
            <para> Represents the following element tag in the schema: a:effectLst </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenEffectsProperties.EffectDag">
            <summary>
            <para> Effect Container.</para>
            <para> Represents the following element tag in the schema: a:effectDag </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenEffectsProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D">
             <summary>
             <para>Defines the HiddenScene3D Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:hiddenScene3d.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.Camera &lt;a:camera></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.LightRig &lt;a:lightRig></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.Backdrop &lt;a:backdrop></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.ExtensionList &lt;a:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.#ctor">
            <summary>
            Initializes a new instance of the HiddenScene3D class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the HiddenScene3D class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the HiddenScene3D class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HiddenScene3D class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.Camera">
            <summary>
            <para> Camera.</para>
            <para> Represents the following element tag in the schema: a:camera </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.LightRig">
            <summary>
            <para> Light Rig.</para>
            <para> Represents the following element tag in the schema: a:lightRig </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.Backdrop">
            <summary>
            <para> Backdrop Plane.</para>
            <para> Represents the following element tag in the schema: a:backdrop </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.ExtensionList">
            <summary>
            <para> ExtensionList.</para>
            <para> Represents the following element tag in the schema: a:extLst </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenScene3D.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D">
             <summary>
             <para>Defines the HiddenShape3D Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:hiddenSp3d.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.BevelTop &lt;a:bevelT></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.BevelBottom &lt;a:bevelB></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.ExtrusionColor &lt;a:extrusionClr></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.ContourColor &lt;a:contourClr></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.ExtensionList &lt;a:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.Z">
            <summary>
            <para> Shape Depth.</para>
            <para>Represents the following attribute in the schema: z </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.ExtrusionHeight">
            <summary>
            <para> Extrusion Height.</para>
            <para>Represents the following attribute in the schema: extrusionH </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.ContourWidth">
            <summary>
            <para> Contour Width.</para>
            <para>Represents the following attribute in the schema: contourW </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.PresetMaterial">
            <summary>
            <para> Preset Material Type.</para>
            <para>Represents the following attribute in the schema: prstMaterial </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.#ctor">
            <summary>
            Initializes a new instance of the HiddenShape3D class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the HiddenShape3D class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the HiddenShape3D class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HiddenShape3D class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.BevelTop">
            <summary>
            <para> Top Bevel.</para>
            <para> Represents the following element tag in the schema: a:bevelT </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.BevelBottom">
            <summary>
            <para> Bottom Bevel.</para>
            <para> Represents the following element tag in the schema: a:bevelB </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.ExtrusionColor">
            <summary>
            <para> Extrusion Color.</para>
            <para> Represents the following element tag in the schema: a:extrusionClr </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.ContourColor">
            <summary>
            <para> Contour Color.</para>
            <para> Represents the following element tag in the schema: a:contourClr </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.ExtensionList">
            <summary>
            <para> ExtensionList.</para>
            <para> Represents the following element tag in the schema: a:extLst </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.HiddenShape3D.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ImageProperties">
             <summary>
             <para>Defines the ImageProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:imgProps.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ImageLayer &lt;a14:imgLayer></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageProperties.#ctor">
            <summary>
            Initializes a new instance of the ImageProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ImageProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ImageProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ImageProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageProperties.ImageLayer">
            <summary>
            <para> ImageLayer.</para>
            <para> Represents the following element tag in the schema: a14:imgLayer </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.UseLocalDpi">
             <summary>
             <para>Defines the UseLocalDpi Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:useLocalDpi.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.UseLocalDpi.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.UseLocalDpi.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.UseLocalDpi.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.UseLocalDpi.Val">
            <summary>
            <para> val.</para>
            <para>Represents the following attribute in the schema: val </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.UseLocalDpi.#ctor">
            <summary>
            Initializes a new instance of the UseLocalDpi class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.UseLocalDpi.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.TextMath">
             <summary>
             <para>Defines the TextMath Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:m.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.TextMath.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.TextMath.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.TextMath.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.TextMath.#ctor">
            <summary>
            Initializes a new instance of the TextMath class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.TextMath.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.OfficeArtExtensionList">
             <summary>
             <para>Defines the OfficeArtExtensionList Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:extLst.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.Extension &lt;a:ext></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.OfficeArtExtensionList.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.OfficeArtExtensionList.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.OfficeArtExtensionList.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.OfficeArtExtensionList.#ctor">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.OfficeArtExtensionList.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the OfficeArtExtensionList class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.OfficeArtExtensionList.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.OfficeArtExtensionList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.OfficeArtExtensionList.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks">
             <summary>
             <para>Defines the ContentPartLocks Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:cpLocks.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>OfficeArtExtensionList &lt;a14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.NoGrouping">
            <summary>
            <para> Disallow Shape Grouping.</para>
            <para>Represents the following attribute in the schema: noGrp </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.NoSelection">
            <summary>
            <para> Disallow Shape Selection.</para>
            <para>Represents the following attribute in the schema: noSelect </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.NoRotation">
            <summary>
            <para> Disallow Shape Rotation.</para>
            <para>Represents the following attribute in the schema: noRot </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.NoChangeAspect">
            <summary>
            <para> Disallow Aspect Ratio Change.</para>
            <para>Represents the following attribute in the schema: noChangeAspect </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.NoMove">
            <summary>
            <para> Disallow Shape Movement.</para>
            <para>Represents the following attribute in the schema: noMove </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.NoResize">
            <summary>
            <para> Disallow Shape Resize.</para>
            <para>Represents the following attribute in the schema: noResize </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.NoEditPoints">
            <summary>
            <para> Disallow Shape Point Editing.</para>
            <para>Represents the following attribute in the schema: noEditPoints </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.NoAdjustHandles">
            <summary>
            <para> Disallow Showing Adjust Handles.</para>
            <para>Represents the following attribute in the schema: noAdjustHandles </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.NoChangeArrowheads">
            <summary>
            <para> Disallow Arrowhead Changes.</para>
            <para>Represents the following attribute in the schema: noChangeArrowheads </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.NoChangeShapeType">
            <summary>
            <para> Disallow Shape Type Change.</para>
            <para>Represents the following attribute in the schema: noChangeShapeType </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.#ctor">
            <summary>
            Initializes a new instance of the ContentPartLocks class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ContentPartLocks class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ContentPartLocks class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContentPartLocks class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.OfficeArtExtensionList">
            <summary>
            <para> OfficeArtExtensionList.</para>
            <para> Represents the following element tag in the schema: a14:extLst </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ForegroundMark">
             <summary>
             <para>Defines the ForegroundMark Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:foregroundMark.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ForegroundMark.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ForegroundMark.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ForegroundMark.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ForegroundMark.FirstXCoordinate">
            <summary>
            <para> x1.</para>
            <para>Represents the following attribute in the schema: x1 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ForegroundMark.FirstYCoordinate">
            <summary>
            <para> y1.</para>
            <para>Represents the following attribute in the schema: y1 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ForegroundMark.SecondXCoordinate">
            <summary>
            <para> x2.</para>
            <para>Represents the following attribute in the schema: x2 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ForegroundMark.SecondYCoordinate">
            <summary>
            <para> y2.</para>
            <para>Represents the following attribute in the schema: y2 </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ForegroundMark.#ctor">
            <summary>
            Initializes a new instance of the ForegroundMark class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ForegroundMark.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundMark">
             <summary>
             <para>Defines the BackgroundMark Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:backgroundMark.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundMark.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundMark.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundMark.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundMark.FirstXCoordinate">
            <summary>
            <para> x1.</para>
            <para>Represents the following attribute in the schema: x1 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundMark.FirstYCoordinate">
            <summary>
            <para> y1.</para>
            <para>Represents the following attribute in the schema: y1 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundMark.SecondXCoordinate">
            <summary>
            <para> x2.</para>
            <para>Represents the following attribute in the schema: x2 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundMark.SecondYCoordinate">
            <summary>
            <para> y2.</para>
            <para>Represents the following attribute in the schema: y2 </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundMark.#ctor">
            <summary>
            Initializes a new instance of the BackgroundMark class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundMark.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticBlur">
             <summary>
             <para>Defines the ArtisticBlur Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticBlur.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticBlur.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticBlur.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticBlur.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticBlur.Radius">
            <summary>
            <para> radius.</para>
            <para>Represents the following attribute in the schema: radius </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticBlur.#ctor">
            <summary>
            Initializes a new instance of the ArtisticBlur class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticBlur.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCement">
             <summary>
             <para>Defines the ArtisticCement Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticCement.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCement.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCement.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCement.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCement.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCement.CrackSpacing">
            <summary>
            <para> crackSpacing.</para>
            <para>Represents the following attribute in the schema: crackSpacing </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCement.#ctor">
            <summary>
            Initializes a new instance of the ArtisticCement class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCement.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticChalkSketch">
             <summary>
             <para>Defines the ArtisticChalkSketch Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticChalkSketch.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticChalkSketch.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticChalkSketch.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticChalkSketch.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticChalkSketch.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticChalkSketch.Pressure">
            <summary>
            <para> pressure.</para>
            <para>Represents the following attribute in the schema: pressure </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticChalkSketch.#ctor">
            <summary>
            Initializes a new instance of the ArtisticChalkSketch class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticChalkSketch.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCrisscrossEtching">
             <summary>
             <para>Defines the ArtisticCrisscrossEtching Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticCrisscrossEtching.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCrisscrossEtching.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCrisscrossEtching.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCrisscrossEtching.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCrisscrossEtching.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCrisscrossEtching.Pressure">
            <summary>
            <para> pressure.</para>
            <para>Represents the following attribute in the schema: pressure </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCrisscrossEtching.#ctor">
            <summary>
            Initializes a new instance of the ArtisticCrisscrossEtching class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCrisscrossEtching.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCutout">
             <summary>
             <para>Defines the ArtisticCutout Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticCutout.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCutout.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCutout.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCutout.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCutout.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCutout.NumberOfShades">
            <summary>
            <para> numberOfShades.</para>
            <para>Represents the following attribute in the schema: numberOfShades </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCutout.#ctor">
            <summary>
            Initializes a new instance of the ArtisticCutout class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticCutout.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticFilmGrain">
             <summary>
             <para>Defines the ArtisticFilmGrain Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticFilmGrain.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticFilmGrain.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticFilmGrain.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticFilmGrain.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticFilmGrain.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticFilmGrain.GrainSize">
            <summary>
            <para> grainSize.</para>
            <para>Represents the following attribute in the schema: grainSize </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticFilmGrain.#ctor">
            <summary>
            Initializes a new instance of the ArtisticFilmGrain class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticFilmGrain.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlass">
             <summary>
             <para>Defines the ArtisticGlass Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticGlass.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlass.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlass.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlass.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlass.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlass.Scaling">
            <summary>
            <para> scaling.</para>
            <para>Represents the following attribute in the schema: scaling </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlass.#ctor">
            <summary>
            Initializes a new instance of the ArtisticGlass class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlass.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowDiffused">
             <summary>
             <para>Defines the ArtisticGlowDiffused Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticGlowDiffused.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowDiffused.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowDiffused.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowDiffused.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowDiffused.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowDiffused.Intensity">
            <summary>
            <para> intensity.</para>
            <para>Represents the following attribute in the schema: intensity </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowDiffused.#ctor">
            <summary>
            Initializes a new instance of the ArtisticGlowDiffused class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowDiffused.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowEdges">
             <summary>
             <para>Defines the ArtisticGlowEdges Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticGlowEdges.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowEdges.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowEdges.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowEdges.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowEdges.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowEdges.Smoothness">
            <summary>
            <para> smoothness.</para>
            <para>Represents the following attribute in the schema: smoothness </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowEdges.#ctor">
            <summary>
            Initializes a new instance of the ArtisticGlowEdges class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticGlowEdges.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLightScreen">
             <summary>
             <para>Defines the ArtisticLightScreen Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticLightScreen.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLightScreen.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLightScreen.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLightScreen.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLightScreen.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLightScreen.GridSize">
            <summary>
            <para> gridSize.</para>
            <para>Represents the following attribute in the schema: gridSize </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLightScreen.#ctor">
            <summary>
            Initializes a new instance of the ArtisticLightScreen class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLightScreen.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLineDrawing">
             <summary>
             <para>Defines the ArtisticLineDrawing Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticLineDrawing.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLineDrawing.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLineDrawing.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLineDrawing.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLineDrawing.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLineDrawing.PencilSize">
            <summary>
            <para> pencilSize.</para>
            <para>Represents the following attribute in the schema: pencilSize </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLineDrawing.#ctor">
            <summary>
            Initializes a new instance of the ArtisticLineDrawing class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticLineDrawing.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMarker">
             <summary>
             <para>Defines the ArtisticMarker Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticMarker.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMarker.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMarker.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMarker.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMarker.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMarker.Size">
            <summary>
            <para> size.</para>
            <para>Represents the following attribute in the schema: size </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMarker.#ctor">
            <summary>
            Initializes a new instance of the ArtisticMarker class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMarker.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMosaicBubbles">
             <summary>
             <para>Defines the ArtisticMosaicBubbles Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticMosiaicBubbles.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMosaicBubbles.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMosaicBubbles.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMosaicBubbles.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMosaicBubbles.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMosaicBubbles.Pressure">
            <summary>
            <para> pressure.</para>
            <para>Represents the following attribute in the schema: pressure </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMosaicBubbles.#ctor">
            <summary>
            Initializes a new instance of the ArtisticMosaicBubbles class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticMosaicBubbles.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintStrokes">
             <summary>
             <para>Defines the ArtisticPaintStrokes Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticPaintStrokes.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintStrokes.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintStrokes.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintStrokes.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintStrokes.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintStrokes.Intensity">
            <summary>
            <para> intensity.</para>
            <para>Represents the following attribute in the schema: intensity </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintStrokes.#ctor">
            <summary>
            Initializes a new instance of the ArtisticPaintStrokes class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintStrokes.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintBrush">
             <summary>
             <para>Defines the ArtisticPaintBrush Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticPaintBrush.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintBrush.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintBrush.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintBrush.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintBrush.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintBrush.BrushSize">
            <summary>
            <para> brushSize.</para>
            <para>Represents the following attribute in the schema: brushSize </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintBrush.#ctor">
            <summary>
            Initializes a new instance of the ArtisticPaintBrush class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPaintBrush.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPastelsSmooth">
             <summary>
             <para>Defines the ArtisticPastelsSmooth Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticPastelsSmooth.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPastelsSmooth.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPastelsSmooth.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPastelsSmooth.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPastelsSmooth.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPastelsSmooth.BrushSize">
            <summary>
            <para> scaling.</para>
            <para>Represents the following attribute in the schema: scaling </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPastelsSmooth.#ctor">
            <summary>
            Initializes a new instance of the ArtisticPastelsSmooth class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPastelsSmooth.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilGrayscale">
             <summary>
             <para>Defines the ArtisticPencilGrayscale Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticPencilGrayscale.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilGrayscale.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilGrayscale.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilGrayscale.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilGrayscale.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilGrayscale.BrushSize">
            <summary>
            <para> pencilSize.</para>
            <para>Represents the following attribute in the schema: pencilSize </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilGrayscale.#ctor">
            <summary>
            Initializes a new instance of the ArtisticPencilGrayscale class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilGrayscale.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilSketch">
             <summary>
             <para>Defines the ArtisticPencilSketch Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticPencilSketch.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilSketch.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilSketch.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilSketch.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilSketch.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilSketch.Pressure">
            <summary>
            <para> pressure.</para>
            <para>Represents the following attribute in the schema: pressure </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilSketch.#ctor">
            <summary>
            Initializes a new instance of the ArtisticPencilSketch class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPencilSketch.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPhotocopy">
             <summary>
             <para>Defines the ArtisticPhotocopy Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticPhotocopy.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPhotocopy.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPhotocopy.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPhotocopy.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPhotocopy.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPhotocopy.Detail">
            <summary>
            <para> detail.</para>
            <para>Represents the following attribute in the schema: detail </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPhotocopy.#ctor">
            <summary>
            Initializes a new instance of the ArtisticPhotocopy class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPhotocopy.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPlasticWrap">
             <summary>
             <para>Defines the ArtisticPlasticWrap Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticPlasticWrap.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPlasticWrap.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPlasticWrap.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPlasticWrap.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPlasticWrap.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPlasticWrap.Smoothness">
            <summary>
            <para> smoothness.</para>
            <para>Represents the following attribute in the schema: smoothness </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPlasticWrap.#ctor">
            <summary>
            Initializes a new instance of the ArtisticPlasticWrap class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticPlasticWrap.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticTexturizer">
             <summary>
             <para>Defines the ArtisticTexturizer Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticTexturizer.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticTexturizer.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticTexturizer.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticTexturizer.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticTexturizer.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticTexturizer.Scaling">
            <summary>
            <para> scaling.</para>
            <para>Represents the following attribute in the schema: scaling </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticTexturizer.#ctor">
            <summary>
            Initializes a new instance of the ArtisticTexturizer class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticTexturizer.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticWatercolorSponge">
             <summary>
             <para>Defines the ArtisticWatercolorSponge Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:artisticWatercolorSponge.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticWatercolorSponge.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticWatercolorSponge.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticWatercolorSponge.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticWatercolorSponge.Transparancy">
            <summary>
            <para> trans.</para>
            <para>Represents the following attribute in the schema: trans </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticWatercolorSponge.BrushSize">
            <summary>
            <para> brushSize.</para>
            <para>Represents the following attribute in the schema: brushSize </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticWatercolorSponge.#ctor">
            <summary>
            Initializes a new instance of the ArtisticWatercolorSponge class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ArtisticWatercolorSponge.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval">
             <summary>
             <para>Defines the BackgroundRemoval Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:backgroundRemoval.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ForegroundMark &lt;a14:foregroundMark></description></item>
            <item><description>BackgroundMark &lt;a14:backgroundMark></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.MarqueeTop">
            <summary>
            <para> t.</para>
            <para>Represents the following attribute in the schema: t </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.MarqueeBottom">
            <summary>
            <para> b.</para>
            <para>Represents the following attribute in the schema: b </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.MarqueeLeft">
            <summary>
            <para> l.</para>
            <para>Represents the following attribute in the schema: l </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.MarqueeRight">
            <summary>
            <para> r.</para>
            <para>Represents the following attribute in the schema: r </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.#ctor">
            <summary>
            Initializes a new instance of the BackgroundRemoval class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the BackgroundRemoval class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the BackgroundRemoval class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BackgroundRemoval class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BackgroundRemoval.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.BrightnessContrast">
             <summary>
             <para>Defines the BrightnessContrast Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:brightnessContrast.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BrightnessContrast.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BrightnessContrast.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BrightnessContrast.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BrightnessContrast.Bright">
            <summary>
            <para> bright.</para>
            <para>Represents the following attribute in the schema: bright </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.BrightnessContrast.Contrast">
            <summary>
            <para> contrast.</para>
            <para>Represents the following attribute in the schema: contrast </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BrightnessContrast.#ctor">
            <summary>
            Initializes a new instance of the BrightnessContrast class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.BrightnessContrast.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ColorTemperature">
             <summary>
             <para>Defines the ColorTemperature Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:colorTemperature.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ColorTemperature.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ColorTemperature.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ColorTemperature.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ColorTemperature.ColorTemperatureValue">
            <summary>
            <para> colorTemp.</para>
            <para>Represents the following attribute in the schema: colorTemp </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ColorTemperature.#ctor">
            <summary>
            Initializes a new instance of the ColorTemperature class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ColorTemperature.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Saturation">
             <summary>
             <para>Defines the Saturation Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:saturation.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Saturation.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Saturation.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Saturation.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Saturation.SaturationAmount">
            <summary>
            <para> sat.</para>
            <para>Represents the following attribute in the schema: sat </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Saturation.#ctor">
            <summary>
            Initializes a new instance of the Saturation class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Saturation.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.SharpenSoften">
             <summary>
             <para>Defines the SharpenSoften Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:sharpenSoften.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.SharpenSoften.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.SharpenSoften.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.SharpenSoften.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.SharpenSoften.Amount">
            <summary>
            <para> amount.</para>
            <para>Represents the following attribute in the schema: amount </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.SharpenSoften.#ctor">
            <summary>
            Initializes a new instance of the SharpenSoften class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.SharpenSoften.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect">
             <summary>
             <para>Defines the ImageEffect Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:imgEffect.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ArtisticBlur &lt;a14:artisticBlur></description></item>
            <item><description>ArtisticCement &lt;a14:artisticCement></description></item>
            <item><description>ArtisticChalkSketch &lt;a14:artisticChalkSketch></description></item>
            <item><description>ArtisticCrisscrossEtching &lt;a14:artisticCrisscrossEtching></description></item>
            <item><description>ArtisticCutout &lt;a14:artisticCutout></description></item>
            <item><description>ArtisticFilmGrain &lt;a14:artisticFilmGrain></description></item>
            <item><description>ArtisticGlass &lt;a14:artisticGlass></description></item>
            <item><description>ArtisticGlowDiffused &lt;a14:artisticGlowDiffused></description></item>
            <item><description>ArtisticGlowEdges &lt;a14:artisticGlowEdges></description></item>
            <item><description>ArtisticLightScreen &lt;a14:artisticLightScreen></description></item>
            <item><description>ArtisticLineDrawing &lt;a14:artisticLineDrawing></description></item>
            <item><description>ArtisticMarker &lt;a14:artisticMarker></description></item>
            <item><description>ArtisticMosaicBubbles &lt;a14:artisticMosiaicBubbles></description></item>
            <item><description>ArtisticPaintStrokes &lt;a14:artisticPaintStrokes></description></item>
            <item><description>ArtisticPaintBrush &lt;a14:artisticPaintBrush></description></item>
            <item><description>ArtisticPastelsSmooth &lt;a14:artisticPastelsSmooth></description></item>
            <item><description>ArtisticPencilGrayscale &lt;a14:artisticPencilGrayscale></description></item>
            <item><description>ArtisticPencilSketch &lt;a14:artisticPencilSketch></description></item>
            <item><description>ArtisticPhotocopy &lt;a14:artisticPhotocopy></description></item>
            <item><description>ArtisticPlasticWrap &lt;a14:artisticPlasticWrap></description></item>
            <item><description>ArtisticTexturizer &lt;a14:artisticTexturizer></description></item>
            <item><description>ArtisticWatercolorSponge &lt;a14:artisticWatercolorSponge></description></item>
            <item><description>BackgroundRemoval &lt;a14:backgroundRemoval></description></item>
            <item><description>BrightnessContrast &lt;a14:brightnessContrast></description></item>
            <item><description>ColorTemperature &lt;a14:colorTemperature></description></item>
            <item><description>Saturation &lt;a14:saturation></description></item>
            <item><description>SharpenSoften &lt;a14:sharpenSoften></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.Visible">
            <summary>
            <para> visible.</para>
            <para>Represents the following attribute in the schema: visible </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.#ctor">
            <summary>
            Initializes a new instance of the ImageEffect class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ImageEffect class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ImageEffect class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ImageEffect class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticBlur">
            <summary>
            <para> ArtisticBlur.</para>
            <para> Represents the following element tag in the schema: a14:artisticBlur </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticCement">
            <summary>
            <para> ArtisticCement.</para>
            <para> Represents the following element tag in the schema: a14:artisticCement </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticChalkSketch">
            <summary>
            <para> ArtisticChalkSketch.</para>
            <para> Represents the following element tag in the schema: a14:artisticChalkSketch </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticCrisscrossEtching">
            <summary>
            <para> ArtisticCrisscrossEtching.</para>
            <para> Represents the following element tag in the schema: a14:artisticCrisscrossEtching </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticCutout">
            <summary>
            <para> ArtisticCutout.</para>
            <para> Represents the following element tag in the schema: a14:artisticCutout </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticFilmGrain">
            <summary>
            <para> ArtisticFilmGrain.</para>
            <para> Represents the following element tag in the schema: a14:artisticFilmGrain </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticGlass">
            <summary>
            <para> ArtisticGlass.</para>
            <para> Represents the following element tag in the schema: a14:artisticGlass </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticGlowDiffused">
            <summary>
            <para> ArtisticGlowDiffused.</para>
            <para> Represents the following element tag in the schema: a14:artisticGlowDiffused </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticGlowEdges">
            <summary>
            <para> ArtisticGlowEdges.</para>
            <para> Represents the following element tag in the schema: a14:artisticGlowEdges </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticLightScreen">
            <summary>
            <para> ArtisticLightScreen.</para>
            <para> Represents the following element tag in the schema: a14:artisticLightScreen </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticLineDrawing">
            <summary>
            <para> ArtisticLineDrawing.</para>
            <para> Represents the following element tag in the schema: a14:artisticLineDrawing </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticMarker">
            <summary>
            <para> ArtisticMarker.</para>
            <para> Represents the following element tag in the schema: a14:artisticMarker </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticMosaicBubbles">
            <summary>
            <para> ArtisticMosaicBubbles.</para>
            <para> Represents the following element tag in the schema: a14:artisticMosiaicBubbles </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticPaintStrokes">
            <summary>
            <para> ArtisticPaintStrokes.</para>
            <para> Represents the following element tag in the schema: a14:artisticPaintStrokes </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticPaintBrush">
            <summary>
            <para> ArtisticPaintBrush.</para>
            <para> Represents the following element tag in the schema: a14:artisticPaintBrush </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticPastelsSmooth">
            <summary>
            <para> ArtisticPastelsSmooth.</para>
            <para> Represents the following element tag in the schema: a14:artisticPastelsSmooth </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticPencilGrayscale">
            <summary>
            <para> ArtisticPencilGrayscale.</para>
            <para> Represents the following element tag in the schema: a14:artisticPencilGrayscale </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticPencilSketch">
            <summary>
            <para> ArtisticPencilSketch.</para>
            <para> Represents the following element tag in the schema: a14:artisticPencilSketch </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticPhotocopy">
            <summary>
            <para> ArtisticPhotocopy.</para>
            <para> Represents the following element tag in the schema: a14:artisticPhotocopy </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticPlasticWrap">
            <summary>
            <para> ArtisticPlasticWrap.</para>
            <para> Represents the following element tag in the schema: a14:artisticPlasticWrap </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticTexturizer">
            <summary>
            <para> ArtisticTexturizer.</para>
            <para> Represents the following element tag in the schema: a14:artisticTexturizer </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ArtisticWatercolorSponge">
            <summary>
            <para> ArtisticWatercolorSponge.</para>
            <para> Represents the following element tag in the schema: a14:artisticWatercolorSponge </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.BackgroundRemoval">
            <summary>
            <para> BackgroundRemoval.</para>
            <para> Represents the following element tag in the schema: a14:backgroundRemoval </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.BrightnessContrast">
            <summary>
            <para> BrightnessContrast.</para>
            <para> Represents the following element tag in the schema: a14:brightnessContrast </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.ColorTemperature">
            <summary>
            <para> ColorTemperature.</para>
            <para> Represents the following element tag in the schema: a14:colorTemperature </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.Saturation">
            <summary>
            <para> Saturation.</para>
            <para> Represents the following element tag in the schema: a14:saturation </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.SharpenSoften">
            <summary>
            <para> SharpenSoften.</para>
            <para> Represents the following element tag in the schema: a14:sharpenSoften </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageEffect.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.ImageLayer">
             <summary>
             <para>Defines the ImageLayer Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:imgLayer.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ImageEffect &lt;a14:imgEffect></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageLayer.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageLayer.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageLayer.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.ImageLayer.Embed">
             <summary>
             <para> embed.</para>
             <para>Represents the following attribute in the schema: r:embed </para>
             </summary>
            <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageLayer.#ctor">
            <summary>
            Initializes a new instance of the ImageLayer class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageLayer.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ImageLayer class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageLayer.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ImageLayer class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageLayer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ImageLayer class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.ImageLayer.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties">
             <summary>
             <para>Defines the NonVisualDrawingProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:cNvPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.HyperlinkOnClick &lt;a:hlinkClick></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.HyperlinkOnHover &lt;a:hlinkHover></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.NonVisualDrawingPropertiesExtensionList &lt;a:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.Name">
            <summary>
            <para> name.</para>
            <para>Represents the following attribute in the schema: name </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.Description">
            <summary>
            <para> descr.</para>
            <para>Represents the following attribute in the schema: descr </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.Hidden">
            <summary>
            <para> hidden.</para>
            <para>Represents the following attribute in the schema: hidden </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.Title">
            <summary>
            <para> title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.#ctor">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the NonVisualDrawingProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.HyperlinkOnClick">
            <summary>
            <para> HyperlinkOnClick.</para>
            <para> Represents the following element tag in the schema: a:hlinkClick </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.HyperlinkOnHover">
            <summary>
            <para> HyperlinkOnHover.</para>
            <para> Represents the following element tag in the schema: a:hlinkHover </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.NonVisualDrawingPropertiesExtensionList">
            <summary>
            <para> NonVisualDrawingPropertiesExtensionList.</para>
            <para> Represents the following element tag in the schema: a:extLst </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualDrawingProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties">
             <summary>
             <para>Defines the NonVisualInkContentPartProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:cNvContentPartPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ContentPartLocks &lt;a14:cpLocks></description></item>
            <item><description>OfficeArtExtensionList &lt;a14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties.IsComment">
            <summary>
            <para> isComment.</para>
            <para>Represents the following attribute in the schema: isComment </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties.#ctor">
            <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties.ContentPartLocks">
            <summary>
            <para> ContentPartLocks.</para>
            <para> Represents the following element tag in the schema: a14:cpLocks </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties.OfficeArtExtensionList">
            <summary>
            <para> OfficeArtExtensionList.</para>
            <para> Represents the following element tag in the schema: a14:extLst </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualInkContentPartProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualContentPartProperties">
             <summary>
             <para>Defines the NonVisualContentPartProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:nvContentPartPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>NonVisualDrawingProperties &lt;a14:cNvPr></description></item>
            <item><description>NonVisualInkContentPartProperties &lt;a14:cNvContentPartPr></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualContentPartProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualContentPartProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualContentPartProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualContentPartProperties.#ctor">
            <summary>
            Initializes a new instance of the NonVisualContentPartProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualContentPartProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the NonVisualContentPartProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualContentPartProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the NonVisualContentPartProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualContentPartProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NonVisualContentPartProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualContentPartProperties.NonVisualDrawingProperties">
            <summary>
            <para> NonVisualDrawingProperties.</para>
            <para> Represents the following element tag in the schema: a14:cNvPr </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualContentPartProperties.NonVisualInkContentPartProperties">
            <summary>
            <para> NonVisualInkContentPartProperties.</para>
            <para> Represents the following element tag in the schema: a14:cNvContentPartPr </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.NonVisualContentPartProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D">
             <summary>
             <para>Defines the Transform2D Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is a14:xfrm.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.Offset &lt;a:off></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.Extents &lt;a:ext></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.Rotation">
            <summary>
            <para> Rotation.</para>
            <para>Represents the following attribute in the schema: rot </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.HorizontalFlip">
            <summary>
            <para> Horizontal Flip.</para>
            <para>Represents the following attribute in the schema: flipH </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.VerticalFlip">
            <summary>
            <para> Vertical Flip.</para>
            <para>Represents the following attribute in the schema: flipV </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.#ctor">
            <summary>
            Initializes a new instance of the Transform2D class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Transform2D class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Transform2D class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Transform2D class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.Offset">
            <summary>
            <para> Offset.</para>
            <para> Represents the following element tag in the schema: a:off </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.Extents">
            <summary>
            <para> Extents.</para>
            <para> Represents the following element tag in the schema: a:ext </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Transform2D.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle">
             <summary>
             <para>Defines the ShapeStyle Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is pic14:style.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.LineReference &lt;a:lnRef></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.FillReference &lt;a:fillRef></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.EffectReference &lt;a:effectRef></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.FontReference &lt;a:fontRef></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.#ctor">
            <summary>
            Initializes a new instance of the ShapeStyle class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ShapeStyle class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ShapeStyle class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ShapeStyle class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.LineReference">
            <summary>
            <para> LineReference.</para>
            <para> Represents the following element tag in the schema: a:lnRef </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.FillReference">
            <summary>
            <para> FillReference.</para>
            <para> Represents the following element tag in the schema: a:fillRef </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.EffectReference">
            <summary>
            <para> EffectReference.</para>
            <para> Represents the following element tag in the schema: a:effectRef </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.FontReference">
            <summary>
            <para> Font Reference.</para>
            <para> Represents the following element tag in the schema: a:fontRef </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.ShapeStyle.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.OfficeArtExtensionList">
             <summary>
             <para>Defines the OfficeArtExtensionList Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is pic14:extLst.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.Extension &lt;a:ext></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.OfficeArtExtensionList.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.OfficeArtExtensionList.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.OfficeArtExtensionList.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.OfficeArtExtensionList.#ctor">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.OfficeArtExtensionList.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the OfficeArtExtensionList class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.OfficeArtExtensionList.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.OfficeArtExtensionList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Pictures.OfficeArtExtensionList.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.Slicer">
             <summary>
             <para>Defines the Slicer Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is sle:slicer.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>OfficeArtExtensionList &lt;sle:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.Slicer.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.Slicer.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.Slicer.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.Slicer.Name">
            <summary>
            <para> name.</para>
            <para>Represents the following attribute in the schema: name </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.Slicer.#ctor">
            <summary>
            Initializes a new instance of the Slicer class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.Slicer.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Slicer class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.Slicer.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Slicer class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.Slicer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Slicer class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.Slicer.OfficeArtExtensionList">
            <summary>
            <para> OfficeArtExtensionList.</para>
            <para> Represents the following element tag in the schema: sle:extLst </para>
            </summary>
            <remark>
            xmlns:sle = http://schemas.microsoft.com/office/drawing/2010/slicer
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.Slicer.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.OfficeArtExtensionList">
             <summary>
             <para>Defines the OfficeArtExtensionList Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is sle:extLst.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.Extension &lt;a:ext></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.OfficeArtExtensionList.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.OfficeArtExtensionList.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.OfficeArtExtensionList.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.OfficeArtExtensionList.#ctor">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.OfficeArtExtensionList.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the OfficeArtExtensionList class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.OfficeArtExtensionList.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.OfficeArtExtensionList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Drawing.Slicer.OfficeArtExtensionList.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart">
             <summary>
             <para>Defines the ContentPart Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is xdr14:contentPart.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ExcelNonVisualContentPartShapeProperties &lt;xdr14:nvContentPartPr></description></item>
            <item><description>ApplicationNonVisualDrawingProperties &lt;xdr14:nvPr></description></item>
            <item><description>Transform2D &lt;xdr14:xfrm></description></item>
            <item><description>OfficeArtExtensionList &lt;xdr14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.RelationshipId">
             <summary>
             <para> id.</para>
             <para>Represents the following attribute in the schema: r:id </para>
             </summary>
            <remark> xmlns:r=http://schemas.openxmlformats.org/officeDocument/2006/relationships
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.BlackWhiteMode">
            <summary>
            <para> bwMode.</para>
            <para>Represents the following attribute in the schema: bwMode </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.#ctor">
            <summary>
            Initializes a new instance of the ContentPart class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ContentPart class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ContentPart class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContentPart class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.ExcelNonVisualContentPartShapeProperties">
            <summary>
            <para> ExcelNonVisualContentPartShapeProperties.</para>
            <para> Represents the following element tag in the schema: xdr14:nvContentPartPr </para>
            </summary>
            <remark>
            xmlns:xdr14 = http://schemas.microsoft.com/office/excel/2010/spreadsheetDrawing
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.ApplicationNonVisualDrawingProperties">
            <summary>
            <para> ApplicationNonVisualDrawingProperties.</para>
            <para> Represents the following element tag in the schema: xdr14:nvPr </para>
            </summary>
            <remark>
            xmlns:xdr14 = http://schemas.microsoft.com/office/excel/2010/spreadsheetDrawing
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.Transform2D">
            <summary>
            <para> Transform2D.</para>
            <para> Represents the following element tag in the schema: xdr14:xfrm </para>
            </summary>
            <remark>
            xmlns:xdr14 = http://schemas.microsoft.com/office/excel/2010/spreadsheetDrawing
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.OfficeArtExtensionList">
            <summary>
            <para> OfficeArtExtensionList.</para>
            <para> Represents the following element tag in the schema: xdr14:extLst </para>
            </summary>
            <remark>
            xmlns:xdr14 = http://schemas.microsoft.com/office/excel/2010/spreadsheetDrawing
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ContentPart.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties">
             <summary>
             <para>Defines the NonVisualDrawingProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is xdr14:cNvPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.HyperlinkOnClick &lt;a:hlinkClick></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.HyperlinkOnHover &lt;a:hlinkHover></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.NonVisualDrawingPropertiesExtensionList &lt;a:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.Name">
            <summary>
            <para> name.</para>
            <para>Represents the following attribute in the schema: name </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.Description">
            <summary>
            <para> descr.</para>
            <para>Represents the following attribute in the schema: descr </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.Hidden">
            <summary>
            <para> hidden.</para>
            <para>Represents the following attribute in the schema: hidden </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.Title">
            <summary>
            <para> title.</para>
            <para>Represents the following attribute in the schema: title </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.#ctor">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the NonVisualDrawingProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NonVisualDrawingProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.HyperlinkOnClick">
            <summary>
            <para> HyperlinkOnClick.</para>
            <para> Represents the following element tag in the schema: a:hlinkClick </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.HyperlinkOnHover">
            <summary>
            <para> HyperlinkOnHover.</para>
            <para> Represents the following element tag in the schema: a:hlinkHover </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.NonVisualDrawingPropertiesExtensionList">
            <summary>
            <para> NonVisualDrawingPropertiesExtensionList.</para>
            <para> Represents the following element tag in the schema: a:extLst </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualDrawingProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties">
             <summary>
             <para>Defines the NonVisualInkContentPartProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is xdr14:cNvContentPartPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Office2010.Drawing.ContentPartLocks &lt;a14:cpLocks></description></item>
            <item><description>DocumentFormat.OpenXml.Office2010.Drawing.OfficeArtExtensionList &lt;a14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties.IsComment">
            <summary>
            <para> isComment.</para>
            <para>Represents the following attribute in the schema: isComment </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties.#ctor">
            <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NonVisualInkContentPartProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties.ContentPartLocks">
            <summary>
            <para> ContentPartLocks.</para>
            <para> Represents the following element tag in the schema: a14:cpLocks </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties.OfficeArtExtensionList">
            <summary>
            <para> OfficeArtExtensionList.</para>
            <para> Represents the following element tag in the schema: a14:extLst </para>
            </summary>
            <remark>
            xmlns:a14 = http://schemas.microsoft.com/office/drawing/2010/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.NonVisualInkContentPartProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties">
             <summary>
             <para>Defines the ExcelNonVisualContentPartShapeProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is xdr14:nvContentPartPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>NonVisualDrawingProperties &lt;xdr14:cNvPr></description></item>
            <item><description>NonVisualInkContentPartProperties &lt;xdr14:cNvContentPartPr></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties.#ctor">
            <summary>
            Initializes a new instance of the ExcelNonVisualContentPartShapeProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ExcelNonVisualContentPartShapeProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ExcelNonVisualContentPartShapeProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ExcelNonVisualContentPartShapeProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties.NonVisualDrawingProperties">
            <summary>
            <para> NonVisualDrawingProperties.</para>
            <para> Represents the following element tag in the schema: xdr14:cNvPr </para>
            </summary>
            <remark>
            xmlns:xdr14 = http://schemas.microsoft.com/office/excel/2010/spreadsheetDrawing
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties.NonVisualInkContentPartProperties">
            <summary>
            <para> NonVisualInkContentPartProperties.</para>
            <para> Represents the following element tag in the schema: xdr14:cNvContentPartPr </para>
            </summary>
            <remark>
            xmlns:xdr14 = http://schemas.microsoft.com/office/excel/2010/spreadsheetDrawing
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ExcelNonVisualContentPartShapeProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties">
             <summary>
             <para>Defines the ApplicationNonVisualDrawingProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is xdr14:nvPr.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties.Macro">
            <summary>
            <para> macro.</para>
            <para>Represents the following attribute in the schema: macro </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties.PublishedFlag">
            <summary>
            <para> fPublished.</para>
            <para>Represents the following attribute in the schema: fPublished </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties.#ctor">
            <summary>
            Initializes a new instance of the ApplicationNonVisualDrawingProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.ApplicationNonVisualDrawingProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D">
             <summary>
             <para>Defines the Transform2D Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is xdr14:xfrm.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.Offset &lt;a:off></description></item>
            <item><description>DocumentFormat.OpenXml.Drawing.Extents &lt;a:ext></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.Rotation">
            <summary>
            <para> Rotation.</para>
            <para>Represents the following attribute in the schema: rot </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.HorizontalFlip">
            <summary>
            <para> Horizontal Flip.</para>
            <para>Represents the following attribute in the schema: flipH </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.VerticalFlip">
            <summary>
            <para> Vertical Flip.</para>
            <para>Represents the following attribute in the schema: flipV </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.#ctor">
            <summary>
            Initializes a new instance of the Transform2D class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Transform2D class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Transform2D class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Transform2D class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.Offset">
            <summary>
            <para> Offset.</para>
            <para> Represents the following element tag in the schema: a:off </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.Extents">
            <summary>
            <para> Extents.</para>
            <para> Represents the following element tag in the schema: a:ext </para>
            </summary>
            <remark>
            xmlns:a = http://schemas.openxmlformats.org/drawingml/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.Transform2D.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList">
             <summary>
             <para>Defines the OfficeArtExtensionList Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is xdr14:extLst.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Drawing.Extension &lt;a:ext></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList.#ctor">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the OfficeArtExtensionList class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OfficeArtExtensionList class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Drawing.OfficeArtExtensionList.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattings">
             <summary>
             <para>Defines the ConditionalFormattings Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:conditionalFormattings.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ConditionalFormatting &lt;x14:conditionalFormatting></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattings.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattings.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattings.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattings.#ctor">
            <summary>
            Initializes a new instance of the ConditionalFormattings class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattings.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ConditionalFormattings class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattings.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ConditionalFormattings class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattings.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ConditionalFormattings class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattings.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.DataValidations">
             <summary>
             <para>Defines the DataValidations Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:dataValidations.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DataValidation &lt;x14:dataValidation></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.DisablePrompts">
            <summary>
            <para> disablePrompts.</para>
            <para>Represents the following attribute in the schema: disablePrompts </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.XWindow">
            <summary>
            <para> xWindow.</para>
            <para>Represents the following attribute in the schema: xWindow </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.YWindow">
            <summary>
            <para> yWindow.</para>
            <para>Represents the following attribute in the schema: yWindow </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.Count">
            <summary>
            <para> count.</para>
            <para>Represents the following attribute in the schema: count </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.#ctor">
            <summary>
            Initializes a new instance of the DataValidations class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the DataValidations class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the DataValidations class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DataValidations class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidations.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroups">
             <summary>
             <para>Defines the SparklineGroups Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:sparklineGroups.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>SparklineGroup &lt;x14:sparklineGroup></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroups.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroups.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroups.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroups.#ctor">
            <summary>
            Initializes a new instance of the SparklineGroups class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroups.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SparklineGroups class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroups.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SparklineGroups class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroups.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SparklineGroups class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroups.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.SlicerList">
             <summary>
             <para>Defines the SlicerList Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:slicerList.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>SlicerRef &lt;x14:slicer></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerList.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerList.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerList.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerList.#ctor">
            <summary>
            Initializes a new instance of the SlicerList class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerList.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SlicerList class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerList.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SlicerList class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SlicerList class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerList.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.ProtectedRanges">
             <summary>
             <para>Defines the ProtectedRanges Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:protectedRanges.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ProtectedRange &lt;x14:protectedRange></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ProtectedRanges.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ProtectedRanges.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ProtectedRanges.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ProtectedRanges.#ctor">
            <summary>
            Initializes a new instance of the ProtectedRanges class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ProtectedRanges.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ProtectedRanges class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ProtectedRanges.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ProtectedRanges class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ProtectedRanges.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ProtectedRanges class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ProtectedRanges.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.IgnoredErrors">
             <summary>
             <para>Defines the IgnoredErrors Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:ignoredErrors.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>IgnoredError &lt;x14:ignoredError></description></item>
            <item><description>ExtensionList &lt;x14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredErrors.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.IgnoredErrors.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.IgnoredErrors.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.IgnoredErrors.#ctor">
            <summary>
            Initializes a new instance of the IgnoredErrors class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.IgnoredErrors.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the IgnoredErrors class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.IgnoredErrors.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the IgnoredErrors class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.IgnoredErrors.#ctor(System.String)">
            <summary>
            Initializes a new instance of the IgnoredErrors class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.IgnoredErrors.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.DefinedNames">
             <summary>
             <para>Defines the DefinedNames Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:definedNames.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DefinedName &lt;x14:definedName></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DefinedNames.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DefinedNames.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DefinedNames.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DefinedNames.#ctor">
            <summary>
            Initializes a new instance of the DefinedNames class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DefinedNames.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the DefinedNames class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DefinedNames.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the DefinedNames class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DefinedNames.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DefinedNames class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DefinedNames.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.PivotCaches">
             <summary>
             <para>Defines the PivotCaches Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:pivotCaches.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Spreadsheet.PivotCache &lt;x:pivotCache></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotCaches.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotCaches.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotCaches.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotCaches.#ctor">
            <summary>
            Initializes a new instance of the PivotCaches class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotCaches.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the PivotCaches class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotCaches.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the PivotCaches class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotCaches.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PivotCaches class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotCaches.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.SlicerCaches">
             <summary>
             <para>Defines the SlicerCaches Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:slicerCaches.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>SlicerCache &lt;x14:slicerCache></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerCaches.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerCaches.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCaches.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCaches.#ctor">
            <summary>
            Initializes a new instance of the SlicerCaches class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCaches.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SlicerCaches class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCaches.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SlicerCaches class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCaches.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SlicerCaches class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCaches.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.WorkbookProperties">
             <summary>
             <para>Defines the WorkbookProperties Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:workbookPr.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.WorkbookProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.WorkbookProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.WorkbookProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.WorkbookProperties.DefaultImageDpi">
            <summary>
            <para> defaultImageDpi.</para>
            <para>Represents the following attribute in the schema: defaultImageDpi </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.WorkbookProperties.DiscardImageEditData">
            <summary>
            <para> discardImageEditData.</para>
            <para>Represents the following attribute in the schema: discardImageEditData </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.WorkbookProperties.AccuracyVersion">
            <summary>
            <para> accuracyVersion.</para>
            <para>Represents the following attribute in the schema: accuracyVersion </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.WorkbookProperties.#ctor">
            <summary>
            Initializes a new instance of the WorkbookProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.WorkbookProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember">
             <summary>
             <para>Defines the CalculatedMember Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:calculatedMember.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>TupleSet &lt;x14:tupleSet></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.DisplayFolder">
            <summary>
            <para> displayFolder.</para>
            <para>Represents the following attribute in the schema: displayFolder </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.FlattenHierarchies">
            <summary>
            <para> flattenHierarchies.</para>
            <para>Represents the following attribute in the schema: flattenHierarchies </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.DynamicSet">
            <summary>
            <para> dynamicSet.</para>
            <para>Represents the following attribute in the schema: dynamicSet </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.HierarchizeDistinct">
            <summary>
            <para> hierarchizeDistinct.</para>
            <para>Represents the following attribute in the schema: hierarchizeDistinct </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.MdxLong">
            <summary>
            <para> mdxLong.</para>
            <para>Represents the following attribute in the schema: mdxLong </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.#ctor">
            <summary>
            Initializes a new instance of the CalculatedMember class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the CalculatedMember class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the CalculatedMember class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CalculatedMember class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.TupleSet">
            <summary>
            <para> TupleSet.</para>
            <para> Represents the following element tag in the schema: x14:tupleSet </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CalculatedMember.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy">
             <summary>
             <para>Defines the CacheHierarchy Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:cacheHierarchy.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>SetLevels &lt;x14:setLevels></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.FlattenHierarchies">
            <summary>
            <para> flattenHierarchies.</para>
            <para>Represents the following attribute in the schema: flattenHierarchies </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.MeasuresSet">
            <summary>
            <para> measuresSet.</para>
            <para>Represents the following attribute in the schema: measuresSet </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.HierarchizeDistinct">
            <summary>
            <para> hierarchizeDistinct.</para>
            <para>Represents the following attribute in the schema: hierarchizeDistinct </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.Ignore">
            <summary>
            <para> ignore.</para>
            <para>Represents the following attribute in the schema: ignore </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.#ctor">
            <summary>
            Initializes a new instance of the CacheHierarchy class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the CacheHierarchy class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the CacheHierarchy class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CacheHierarchy class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.SetLevels">
            <summary>
            <para> SetLevels.</para>
            <para> Represents the following element tag in the schema: x14:setLevels </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CacheHierarchy.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.DataField">
             <summary>
             <para>Defines the DataField Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:dataField.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataField.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataField.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataField.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataField.PivotShowAs">
            <summary>
            <para> pivotShowAs.</para>
            <para>Represents the following attribute in the schema: pivotShowAs </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataField.SourceField">
            <summary>
            <para> sourceField.</para>
            <para>Represents the following attribute in the schema: sourceField </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataField.UniqueName">
            <summary>
            <para> uniqueName.</para>
            <para>Represents the following attribute in the schema: uniqueName </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataField.#ctor">
            <summary>
            Initializes a new instance of the DataField class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataField.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.PivotField">
             <summary>
             <para>Defines the PivotField Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:pivotField.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotField.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotField.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotField.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotField.FillDownLabels">
            <summary>
            <para> fillDownLabels.</para>
            <para>Represents the following attribute in the schema: fillDownLabels </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotField.Ignore">
            <summary>
            <para> ignore.</para>
            <para>Represents the following attribute in the schema: ignore </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotField.#ctor">
            <summary>
            Initializes a new instance of the PivotField class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotField.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition">
             <summary>
             <para>Defines the PivotTableDefinition Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:pivotTableDefinition.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>PivotEdits &lt;x14:pivotEdits></description></item>
            <item><description>PivotChanges &lt;x14:pivotChanges></description></item>
            <item><description>ConditionalFormats &lt;x14:conditionalFormats></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.FillDownLabelsDefault">
            <summary>
            <para> fillDownLabelsDefault.</para>
            <para>Represents the following attribute in the schema: fillDownLabelsDefault </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.VisualTotalsForSets">
            <summary>
            <para> visualTotalsForSets.</para>
            <para>Represents the following attribute in the schema: visualTotalsForSets </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.CalculatedMembersInFilters">
            <summary>
            <para> calculatedMembersInFilters.</para>
            <para>Represents the following attribute in the schema: calculatedMembersInFilters </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.AltText">
            <summary>
            <para> altText.</para>
            <para>Represents the following attribute in the schema: altText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.AltTextSummary">
            <summary>
            <para> altTextSummary.</para>
            <para>Represents the following attribute in the schema: altTextSummary </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.EnableEdit">
            <summary>
            <para> enableEdit.</para>
            <para>Represents the following attribute in the schema: enableEdit </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.AutoApply">
            <summary>
            <para> autoApply.</para>
            <para>Represents the following attribute in the schema: autoApply </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.AllocationMethod">
            <summary>
            <para> allocationMethod.</para>
            <para>Represents the following attribute in the schema: allocationMethod </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.WeightExpression">
            <summary>
            <para> weightExpression.</para>
            <para>Represents the following attribute in the schema: weightExpression </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.HideValuesRow">
            <summary>
            <para> hideValuesRow.</para>
            <para>Represents the following attribute in the schema: hideValuesRow </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.#ctor">
            <summary>
            Initializes a new instance of the PivotTableDefinition class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the PivotTableDefinition class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the PivotTableDefinition class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PivotTableDefinition class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.PivotEdits">
            <summary>
            <para> PivotEdits.</para>
            <para> Represents the following element tag in the schema: x14:pivotEdits </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.PivotChanges">
            <summary>
            <para> PivotChanges.</para>
            <para> Represents the following element tag in the schema: x14:pivotChanges </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.ConditionalFormats">
            <summary>
            <para> ConditionalFormats.</para>
            <para> Represents the following element tag in the schema: x14:conditionalFormats </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotTableDefinition.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.PivotCacheDefinition">
             <summary>
             <para>Defines the PivotCacheDefinition Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:pivotCacheDefinition.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotCacheDefinition.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotCacheDefinition.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotCacheDefinition.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotCacheDefinition.SlicerData">
            <summary>
            <para> slicerData.</para>
            <para>Represents the following attribute in the schema: slicerData </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotCacheDefinition.PivotCacheId">
            <summary>
            <para> pivotCacheId.</para>
            <para>Represents the following attribute in the schema: pivotCacheId </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotCacheDefinition.SupportSubqueryNonVisual">
            <summary>
            <para> supportSubqueryNonVisual.</para>
            <para>Represents the following attribute in the schema: supportSubqueryNonVisual </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotCacheDefinition.SupportSubqueryCalcMem">
            <summary>
            <para> supportSubqueryCalcMem.</para>
            <para>Represents the following attribute in the schema: supportSubqueryCalcMem </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotCacheDefinition.SupportAddCalcMems">
            <summary>
            <para> supportAddCalcMems.</para>
            <para>Represents the following attribute in the schema: supportAddCalcMems </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotCacheDefinition.#ctor">
            <summary>
            Initializes a new instance of the PivotCacheDefinition class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotCacheDefinition.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Connection">
             <summary>
             <para>Defines the Connection Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:connection.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>CalculatedMembers &lt;x14:calculatedMembers></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Connection.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Connection.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Connection.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Connection.Culture">
            <summary>
            <para> culture.</para>
            <para>Represents the following attribute in the schema: culture </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Connection.EmbeddedDataId">
            <summary>
            <para> embeddedDataId.</para>
            <para>Represents the following attribute in the schema: embeddedDataId </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Connection.#ctor">
            <summary>
            Initializes a new instance of the Connection class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Connection.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Connection class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Connection.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Connection class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Connection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Connection class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Connection.CalculatedMembers">
            <summary>
            <para> CalculatedMembers.</para>
            <para> Represents the following element tag in the schema: x14:calculatedMembers </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Connection.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Table">
             <summary>
             <para>Defines the Table Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:table.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Table.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Table.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Table.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Table.AltText">
            <summary>
            <para> altText.</para>
            <para>Represents the following attribute in the schema: altText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Table.AltTextSummary">
            <summary>
            <para> altTextSummary.</para>
            <para>Represents the following attribute in the schema: altTextSummary </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Table.#ctor">
            <summary>
            Initializes a new instance of the Table class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Table.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.SlicerStyles">
             <summary>
             <para>Defines the SlicerStyles Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:slicerStyles.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>SlicerStyle &lt;x14:slicerStyle></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerStyles.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerStyles.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerStyles.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerStyles.DefaultSlicerStyle">
            <summary>
            <para> defaultSlicerStyle.</para>
            <para>Represents the following attribute in the schema: defaultSlicerStyle </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerStyles.#ctor">
            <summary>
            Initializes a new instance of the SlicerStyles class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerStyles.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SlicerStyles class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerStyles.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SlicerStyles class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerStyles.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SlicerStyles class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerStyles.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.DifferentialFormats">
             <summary>
             <para>Defines the DifferentialFormats Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:dxfs.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Spreadsheet.DifferentialFormat &lt;x:dxf></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DifferentialFormats.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DifferentialFormats.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DifferentialFormats.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DifferentialFormats.Count">
            <summary>
            <para> Format Count.</para>
            <para>Represents the following attribute in the schema: count </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DifferentialFormats.#ctor">
            <summary>
            Initializes a new instance of the DifferentialFormats class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DifferentialFormats.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the DifferentialFormats class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DifferentialFormats.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the DifferentialFormats class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DifferentialFormats.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DifferentialFormats class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DifferentialFormats.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.OleItem">
             <summary>
             <para>Defines the OleItem Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:oleItem.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DdeValues &lt;x14:values></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.OleItem.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.OleItem.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.OleItem.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.OleItem.Name">
            <summary>
            <para> name.</para>
            <para>Represents the following attribute in the schema: name </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.OleItem.Icon">
            <summary>
            <para> icon.</para>
            <para>Represents the following attribute in the schema: icon </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.OleItem.Advise">
            <summary>
            <para> advise.</para>
            <para>Represents the following attribute in the schema: advise </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.OleItem.PreferPicture">
            <summary>
            <para> preferPic.</para>
            <para>Represents the following attribute in the schema: preferPic </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.OleItem.#ctor">
            <summary>
            Initializes a new instance of the OleItem class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.OleItem.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the OleItem class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.OleItem.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the OleItem class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.OleItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the OleItem class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.OleItem.DdeValues">
            <summary>
            <para> DdeValues.</para>
            <para> Represents the following element tag in the schema: x14:values </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.OleItem.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.PivotHierarchy">
             <summary>
             <para>Defines the PivotHierarchy Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:pivotHierarchy.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotHierarchy.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotHierarchy.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotHierarchy.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.PivotHierarchy.Ignore">
            <summary>
            <para> ignore.</para>
            <para>Represents the following attribute in the schema: ignore </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotHierarchy.#ctor">
            <summary>
            Initializes a new instance of the PivotHierarchy class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.PivotHierarchy.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.CacheField">
             <summary>
             <para>Defines the CacheField Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:cacheField.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CacheField.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CacheField.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CacheField.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CacheField.Ignore">
            <summary>
            <para> ignore.</para>
            <para>Represents the following attribute in the schema: ignore </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CacheField.#ctor">
            <summary>
            Initializes a new instance of the CacheField class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CacheField.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Id">
             <summary>
             <para>Defines the Id Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:id.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Id.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Id.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Id.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Id.#ctor">
            <summary>
            Initializes a new instance of the Id class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Id.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Id class with the specified text content.
            </summary>
            <param name="text">Specifies the text content of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Id.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.IconFilter">
             <summary>
             <para>Defines the IconFilter Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:iconFilter.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.IconFilter.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.IconFilter.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.IconFilter.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.IconFilter.IconSet">
            <summary>
            <para> iconSet.</para>
            <para>Represents the following attribute in the schema: iconSet </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.IconFilter.IconId">
            <summary>
            <para> iconId.</para>
            <para>Represents the following attribute in the schema: iconId </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.IconFilter.#ctor">
            <summary>
            Initializes a new instance of the IconFilter class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.IconFilter.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Filter">
             <summary>
             <para>Defines the Filter Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:filter.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Filter.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Filter.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Filter.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Filter.Val">
            <summary>
            <para> val.</para>
            <para>Represents the following attribute in the schema: val </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Filter.#ctor">
            <summary>
            Initializes a new instance of the Filter class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Filter.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.CustomFilters">
             <summary>
             <para>Defines the CustomFilters Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:customFilters.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>CustomFilter &lt;x14:customFilter></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CustomFilters.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CustomFilters.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CustomFilters.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.CustomFilters.And">
            <summary>
            <para> and.</para>
            <para>Represents the following attribute in the schema: and </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CustomFilters.#ctor">
            <summary>
            Initializes a new instance of the CustomFilters class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CustomFilters.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the CustomFilters class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CustomFilters.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the CustomFilters class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CustomFilters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CustomFilters class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.CustomFilters.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.SortCondition">
             <summary>
             <para>Defines the SortCondition Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:sortCondition.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.Descending">
            <summary>
            <para> descending.</para>
            <para>Represents the following attribute in the schema: descending </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.SortBy">
            <summary>
            <para> sortBy.</para>
            <para>Represents the following attribute in the schema: sortBy </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.Reference">
            <summary>
            <para> ref.</para>
            <para>Represents the following attribute in the schema: ref </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.CustomList">
            <summary>
            <para> customList.</para>
            <para>Represents the following attribute in the schema: customList </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.FormatId">
            <summary>
            <para> dxfId.</para>
            <para>Represents the following attribute in the schema: dxfId </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.IconSet">
            <summary>
            <para> iconSet.</para>
            <para>Represents the following attribute in the schema: iconSet </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.IconId">
            <summary>
            <para> iconId.</para>
            <para>Represents the following attribute in the schema: iconId </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.#ctor">
            <summary>
            Initializes a new instance of the SortCondition class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SortCondition.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.SourceConnection">
             <summary>
             <para>Defines the SourceConnection Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:sourceConnection.</para>
             </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SourceConnection.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SourceConnection.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SourceConnection.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SourceConnection.Name">
            <summary>
            <para> name.</para>
            <para>Represents the following attribute in the schema: name </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SourceConnection.#ctor">
            <summary>
            Initializes a new instance of the SourceConnection class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SourceConnection.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem">
             <summary>
             <para>Defines the DatastoreItem Class. The root element of CustomDataPropertiesPart.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:datastoreItem.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ExtensionList &lt;x14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.#ctor(DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart)">
            <summary>
            DatastoreItem constructor.
            </summary>
            <param name="ownerPart">The owner part of the DatastoreItem.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.Load(DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart)">
            <summary>
            Loads the DOM from the CustomDataPropertiesPart.
            </summary>
            <param name="openXmlPart">Specifies the part to be loaded.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.CustomDataPropertiesPart">
            <summary>
            Gets the CustomDataPropertiesPart associated with this element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the DatastoreItem class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the DatastoreItem class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DatastoreItem class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.#ctor">
            <summary>
            Initializes a new instance of the DatastoreItem class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.Save(DocumentFormat.OpenXml.Packaging.CustomDataPropertiesPart)">
            <summary>
            Saves the DOM into the CustomDataPropertiesPart.
            </summary>
            <param name="openXmlPart">Specifies the part to save to.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.ExtensionList">
            <summary>
            <para> ExtensionList.</para>
            <para> Represents the following element tag in the schema: x14:extLst </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DatastoreItem.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties">
             <summary>
             <para>Defines the FormControlProperties Class. The root element of ControlPropertiesPart.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:formControlPr.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ListItems &lt;x14:itemLst></description></item>
            <item><description>ExtensionList &lt;x14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.ObjectType">
            <summary>
            <para> objectType.</para>
            <para>Represents the following attribute in the schema: objectType </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.Checked">
            <summary>
            <para> checked.</para>
            <para>Represents the following attribute in the schema: checked </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.Colored">
            <summary>
            <para> colored.</para>
            <para>Represents the following attribute in the schema: colored </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.DropLines">
            <summary>
            <para> dropLines.</para>
            <para>Represents the following attribute in the schema: dropLines </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.DropStyle">
            <summary>
            <para> dropStyle.</para>
            <para>Represents the following attribute in the schema: dropStyle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.ScrollBarWidth">
            <summary>
            <para> dx.</para>
            <para>Represents the following attribute in the schema: dx </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.FirstButton">
            <summary>
            <para> firstButton.</para>
            <para>Represents the following attribute in the schema: firstButton </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.FmlaGroup">
            <summary>
            <para> fmlaGroup.</para>
            <para>Represents the following attribute in the schema: fmlaGroup </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.FmlaLink">
            <summary>
            <para> fmlaLink.</para>
            <para>Represents the following attribute in the schema: fmlaLink </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.FmlaRange">
            <summary>
            <para> fmlaRange.</para>
            <para>Represents the following attribute in the schema: fmlaRange </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.FmlaTextbox">
            <summary>
            <para> fmlaTxbx.</para>
            <para>Represents the following attribute in the schema: fmlaTxbx </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.Horizontal">
            <summary>
            <para> horiz.</para>
            <para>Represents the following attribute in the schema: horiz </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.Incremental">
            <summary>
            <para> inc.</para>
            <para>Represents the following attribute in the schema: inc </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.JustLastX">
            <summary>
            <para> justLastX.</para>
            <para>Represents the following attribute in the schema: justLastX </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.LockText">
            <summary>
            <para> lockText.</para>
            <para>Represents the following attribute in the schema: lockText </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.Max">
            <summary>
            <para> max.</para>
            <para>Represents the following attribute in the schema: max </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.Min">
            <summary>
            <para> min.</para>
            <para>Represents the following attribute in the schema: min </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.MultipleSelection">
            <summary>
            <para> multiSel.</para>
            <para>Represents the following attribute in the schema: multiSel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.NoThreeD">
            <summary>
            <para> noThreeD.</para>
            <para>Represents the following attribute in the schema: noThreeD </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.NoThreeD2">
            <summary>
            <para> noThreeD2.</para>
            <para>Represents the following attribute in the schema: noThreeD2 </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.Page">
            <summary>
            <para> page.</para>
            <para>Represents the following attribute in the schema: page </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.Selected">
            <summary>
            <para> sel.</para>
            <para>Represents the following attribute in the schema: sel </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.SelectionType">
            <summary>
            <para> seltype.</para>
            <para>Represents the following attribute in the schema: seltype </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.TextHorizontalAlign">
            <summary>
            <para> textHAlign.</para>
            <para>Represents the following attribute in the schema: textHAlign </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.TextVerticalAlign">
            <summary>
            <para> textVAlign.</para>
            <para>Represents the following attribute in the schema: textVAlign </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.Val">
            <summary>
            <para> val.</para>
            <para>Represents the following attribute in the schema: val </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.MinimumWidth">
            <summary>
            <para> widthMin.</para>
            <para>Represents the following attribute in the schema: widthMin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.EditVal">
            <summary>
            <para> editVal.</para>
            <para>Represents the following attribute in the schema: editVal </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.MultipleLines">
            <summary>
            <para> multiLine.</para>
            <para>Represents the following attribute in the schema: multiLine </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.VerticalBar">
            <summary>
            <para> verticalBar.</para>
            <para>Represents the following attribute in the schema: verticalBar </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.PasswordEdit">
            <summary>
            <para> passwordEdit.</para>
            <para>Represents the following attribute in the schema: passwordEdit </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.#ctor(DocumentFormat.OpenXml.Packaging.ControlPropertiesPart)">
            <summary>
            FormControlProperties constructor.
            </summary>
            <param name="ownerPart">The owner part of the FormControlProperties.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.Load(DocumentFormat.OpenXml.Packaging.ControlPropertiesPart)">
            <summary>
            Loads the DOM from the ControlPropertiesPart.
            </summary>
            <param name="openXmlPart">Specifies the part to be loaded.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.ControlPropertiesPart">
            <summary>
            Gets the ControlPropertiesPart associated with this element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the FormControlProperties class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the FormControlProperties class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FormControlProperties class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.#ctor">
            <summary>
            Initializes a new instance of the FormControlProperties class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.Save(DocumentFormat.OpenXml.Packaging.ControlPropertiesPart)">
            <summary>
            Saves the DOM into the ControlPropertiesPart.
            </summary>
            <param name="openXmlPart">Specifies the part to save to.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.ListItems">
            <summary>
            <para> ListItems.</para>
            <para> Represents the following element tag in the schema: x14:itemLst </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.ExtensionList">
            <summary>
            <para> ExtensionList.</para>
            <para> Represents the following element tag in the schema: x14:extLst </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.FormControlProperties.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.Slicers">
             <summary>
             <para>Defines the Slicers Class. The root element of SlicersPart.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:slicers.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>Slicer &lt;x14:slicer></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Slicers.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Slicers.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Slicers.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Slicers.#ctor(DocumentFormat.OpenXml.Packaging.SlicersPart)">
            <summary>
            Slicers constructor.
            </summary>
            <param name="ownerPart">The owner part of the Slicers.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Slicers.Load(DocumentFormat.OpenXml.Packaging.SlicersPart)">
            <summary>
            Loads the DOM from the SlicersPart.
            </summary>
            <param name="openXmlPart">Specifies the part to be loaded.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.Slicers.SlicersPart">
            <summary>
            Gets the SlicersPart associated with this element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Slicers.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the Slicers class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Slicers.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the Slicers class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Slicers.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Slicers class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Slicers.#ctor">
            <summary>
            Initializes a new instance of the Slicers class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Slicers.Save(DocumentFormat.OpenXml.Packaging.SlicersPart)">
            <summary>
            Saves the DOM into the SlicersPart.
            </summary>
            <param name="openXmlPart">Specifies the part to save to.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.Slicers.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition">
             <summary>
             <para>Defines the SlicerCacheDefinition Class. The root element of SlicerCachePart.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:slicerCacheDefinition.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>SlicerCachePivotTables &lt;x14:pivotTables></description></item>
            <item><description>SlicerCacheData &lt;x14:data></description></item>
            <item><description>SlicerCacheDefinitionExtensionList &lt;x14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.Name">
            <summary>
            <para> name.</para>
            <para>Represents the following attribute in the schema: name </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.SourceName">
            <summary>
            <para> sourceName.</para>
            <para>Represents the following attribute in the schema: sourceName </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.#ctor(DocumentFormat.OpenXml.Packaging.SlicerCachePart)">
            <summary>
            SlicerCacheDefinition constructor.
            </summary>
            <param name="ownerPart">The owner part of the SlicerCacheDefinition.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.Load(DocumentFormat.OpenXml.Packaging.SlicerCachePart)">
            <summary>
            Loads the DOM from the SlicerCachePart.
            </summary>
            <param name="openXmlPart">Specifies the part to be loaded.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.SlicerCachePart">
            <summary>
            Gets the SlicerCachePart associated with this element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SlicerCacheDefinition class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SlicerCacheDefinition class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SlicerCacheDefinition class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.#ctor">
            <summary>
            Initializes a new instance of the SlicerCacheDefinition class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.Save(DocumentFormat.OpenXml.Packaging.SlicerCachePart)">
            <summary>
            Saves the DOM into the SlicerCachePart.
            </summary>
            <param name="openXmlPart">Specifies the part to save to.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.SlicerCachePivotTables">
            <summary>
            <para> SlicerCachePivotTables.</para>
            <para> Represents the following element tag in the schema: x14:pivotTables </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.SlicerCacheData">
            <summary>
            <para> SlicerCacheData.</para>
            <para> Represents the following element tag in the schema: x14:data </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.SlicerCacheDefinitionExtensionList">
            <summary>
            <para> SlicerCacheDefinitionExtensionList.</para>
            <para> Represents the following element tag in the schema: x14:extLst </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SlicerCacheDefinition.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormatting">
             <summary>
             <para>Defines the ConditionalFormatting Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:conditionalFormatting.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>ConditionalFormattingRule &lt;x14:cfRule></description></item>
            <item><description>DocumentFormat.OpenXml.Office.Excel.ReferenceSequence &lt;xne:sqref></description></item>
            <item><description>ExtensionList &lt;x14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormatting.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormatting.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormatting.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormatting.Pivot">
            <summary>
            <para> pivot.</para>
            <para>Represents the following attribute in the schema: pivot </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormatting.#ctor">
            <summary>
            Initializes a new instance of the ConditionalFormatting class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormatting.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ConditionalFormatting class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormatting.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ConditionalFormatting class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormatting.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ConditionalFormatting class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormatting.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule">
             <summary>
             <para>Defines the ConditionalFormattingRule Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:cfRule.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Office.Excel.Formula &lt;xne:f></description></item>
            <item><description>ColorScale &lt;x14:colorScale></description></item>
            <item><description>DataBar &lt;x14:dataBar></description></item>
            <item><description>IconSet &lt;x14:iconSet></description></item>
            <item><description>DifferentialType &lt;x14:dxf></description></item>
            <item><description>ExtensionList &lt;x14:extLst></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.Type">
            <summary>
            <para> type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.Priority">
            <summary>
            <para> priority.</para>
            <para>Represents the following attribute in the schema: priority </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.StopIfTrue">
            <summary>
            <para> stopIfTrue.</para>
            <para>Represents the following attribute in the schema: stopIfTrue </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.AboveAverage">
            <summary>
            <para> aboveAverage.</para>
            <para>Represents the following attribute in the schema: aboveAverage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.Percent">
            <summary>
            <para> percent.</para>
            <para>Represents the following attribute in the schema: percent </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.Bottom">
            <summary>
            <para> bottom.</para>
            <para>Represents the following attribute in the schema: bottom </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.Operator">
            <summary>
            <para> operator.</para>
            <para>Represents the following attribute in the schema: operator </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.Text">
            <summary>
            <para> text.</para>
            <para>Represents the following attribute in the schema: text </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.TimePeriod">
            <summary>
            <para> timePeriod.</para>
            <para>Represents the following attribute in the schema: timePeriod </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.Rank">
            <summary>
            <para> rank.</para>
            <para>Represents the following attribute in the schema: rank </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.StandardDeviation">
            <summary>
            <para> stdDev.</para>
            <para>Represents the following attribute in the schema: stdDev </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.EqualAverage">
            <summary>
            <para> equalAverage.</para>
            <para>Represents the following attribute in the schema: equalAverage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.ActivePresent">
            <summary>
            <para> activePresent.</para>
            <para>Represents the following attribute in the schema: activePresent </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.Id">
            <summary>
            <para> id.</para>
            <para>Represents the following attribute in the schema: id </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.#ctor">
            <summary>
            Initializes a new instance of the ConditionalFormattingRule class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ConditionalFormattingRule class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ConditionalFormattingRule class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ConditionalFormattingRule class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ConditionalFormattingRule.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.ExtensionList">
             <summary>
             <para>Defines the ExtensionList Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:extLst.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Spreadsheet.Extension &lt;x:ext></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ExtensionList.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.ExtensionList.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ExtensionList.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ExtensionList.#ctor">
            <summary>
            Initializes a new instance of the ExtensionList class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ExtensionList.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the ExtensionList class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ExtensionList.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the ExtensionList class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ExtensionList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ExtensionList class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.ExtensionList.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.DataValidation">
             <summary>
             <para>Defines the DataValidation Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:dataValidation.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DataValidationForumla1 &lt;x14:formula1></description></item>
            <item><description>DataValidationForumla2 &lt;x14:formula2></description></item>
            <item><description>DocumentFormat.OpenXml.Office.Excel.ReferenceSequence &lt;xne:sqref></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.Type">
            <summary>
            <para> type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.ErrorStyle">
            <summary>
            <para> errorStyle.</para>
            <para>Represents the following attribute in the schema: errorStyle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.ImeMode">
            <summary>
            <para> imeMode.</para>
            <para>Represents the following attribute in the schema: imeMode </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.Operator">
            <summary>
            <para> operator.</para>
            <para>Represents the following attribute in the schema: operator </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.AllowBlank">
            <summary>
            <para> allowBlank.</para>
            <para>Represents the following attribute in the schema: allowBlank </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.ShowDropDown">
            <summary>
            <para> showDropDown.</para>
            <para>Represents the following attribute in the schema: showDropDown </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.ShowInputMessage">
            <summary>
            <para> showInputMessage.</para>
            <para>Represents the following attribute in the schema: showInputMessage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.ShowErrorMessage">
            <summary>
            <para> showErrorMessage.</para>
            <para>Represents the following attribute in the schema: showErrorMessage </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.ErrorTitle">
            <summary>
            <para> errorTitle.</para>
            <para>Represents the following attribute in the schema: errorTitle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.Error">
            <summary>
            <para> error.</para>
            <para>Represents the following attribute in the schema: error </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.PromptTitle">
            <summary>
            <para> promptTitle.</para>
            <para>Represents the following attribute in the schema: promptTitle </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.Prompt">
            <summary>
            <para> prompt.</para>
            <para>Represents the following attribute in the schema: prompt </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.#ctor">
            <summary>
            Initializes a new instance of the DataValidation class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the DataValidation class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the DataValidation class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DataValidation class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.DataValidationForumla1">
            <summary>
            <para> DataValidationForumla1.</para>
            <para> Represents the following element tag in the schema: x14:formula1 </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.DataValidationForumla2">
            <summary>
            <para> DataValidationForumla2.</para>
            <para> Represents the following element tag in the schema: x14:formula2 </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.ReferenceSequence">
            <summary>
            <para> ReferenceSequence.</para>
            <para> Represents the following element tag in the schema: xne:sqref </para>
            </summary>
            <remark>
            xmlns:xne = http://schemas.microsoft.com/office/excel/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidation.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla1">
             <summary>
             <para>Defines the DataValidationForumla1 Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:formula1.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Office.Excel.Formula &lt;xne:f></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla1.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla1.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla1.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla1.#ctor">
            <summary>
            Initializes a new instance of the DataValidationForumla1 class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla1.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the DataValidationForumla1 class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla1.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the DataValidationForumla1 class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DataValidationForumla1 class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla1.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla2">
             <summary>
             <para>Defines the DataValidationForumla2 Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:formula2.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Office.Excel.Formula &lt;xne:f></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla2.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla2.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla2.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla2.#ctor">
            <summary>
            Initializes a new instance of the DataValidationForumla2 class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla2.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the DataValidationForumla2 class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla2.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the DataValidationForumla2 class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla2.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DataValidationForumla2 class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationForumla2.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of this node.  
            </summary>
            <param name="deep">True to recursively clone the subtree under the specified node; false to clone only the node itself. </param>
            <returns>Returns the cloned node. </returns>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.DataValidationFormulaType">
             <summary>
             Defines the DataValidationFormulaType class.
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>DocumentFormat.OpenXml.Office.Excel.Formula &lt;xne:f></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.DataValidationFormulaType.Formula">
            <summary>
            <para> Formula.</para>
            <para> Represents the following element tag in the schema: xne:f </para>
            </summary>
            <remark>
            xmlns:xne = http://schemas.microsoft.com/office/excel/2006/main
            </remark>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationFormulaType.#ctor">
            <summary>
            Initializes a new instance of the DataValidationFormulaType class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationFormulaType.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the DataValidationFormulaType class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationFormulaType.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the DataValidationFormulaType class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.DataValidationFormulaType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DataValidationFormulaType class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="T:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup">
             <summary>
             <para>Defines the SparklineGroup Class.</para>
            <para>This class is available in Office2010 or above.</para>
             <para> When the object is serialized out as xml, its qualified name is x14:sparklineGroup.</para>
             </summary>
             <remarks>
             The following table lists the possible child types:
             <list type="bullet">
            <item><description>SeriesColor &lt;x14:colorSeries></description></item>
            <item><description>NegativeColor &lt;x14:colorNegative></description></item>
            <item><description>AxisColor &lt;x14:colorAxis></description></item>
            <item><description>MarkersColor &lt;x14:colorMarkers></description></item>
            <item><description>FirstMarkerColor &lt;x14:colorFirst></description></item>
            <item><description>LastMarkerColor &lt;x14:colorLast></description></item>
            <item><description>HighMarkerColor &lt;x14:colorHigh></description></item>
            <item><description>LowMarkerColor &lt;x14:colorLow></description></item>
            <item><description>DocumentFormat.OpenXml.Office.Excel.Formula &lt;xne:f></description></item>
            <item><description>Sparklines &lt;x14:sparklines></description></item>
             </list>
             </remarks>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.LocalName">
            <summary>
            Gets the local name of the element.
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.ElementTypeId">
            <summary>
            Gets the type ID of the element.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.IsInVersion(DocumentFormat.OpenXml.FileFormatVersions)">
            <summary>
            Whether this element is available in a specific version of Office Application.
            </summary>
            <param name="version">The Office file format version.</param>
            <returns>Returns true if the element is defined in the specified version.</returns>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.ManualMax">
            <summary>
            <para> manualMax.</para>
            <para>Represents the following attribute in the schema: manualMax </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.ManualMin">
            <summary>
            <para> manualMin.</para>
            <para>Represents the following attribute in the schema: manualMin </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.LineWeight">
            <summary>
            <para> lineWeight.</para>
            <para>Represents the following attribute in the schema: lineWeight </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.Type">
            <summary>
            <para> type.</para>
            <para>Represents the following attribute in the schema: type </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.DateAxis">
            <summary>
            <para> dateAxis.</para>
            <para>Represents the following attribute in the schema: dateAxis </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.DisplayEmptyCellsAs">
            <summary>
            <para> displayEmptyCellsAs.</para>
            <para>Represents the following attribute in the schema: displayEmptyCellsAs </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.Markers">
            <summary>
            <para> markers.</para>
            <para>Represents the following attribute in the schema: markers </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.High">
            <summary>
            <para> high.</para>
            <para>Represents the following attribute in the schema: high </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.Low">
            <summary>
            <para> low.</para>
            <para>Represents the following attribute in the schema: low </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.First">
            <summary>
            <para> first.</para>
            <para>Represents the following attribute in the schema: first </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.Last">
            <summary>
            <para> last.</para>
            <para>Represents the following attribute in the schema: last </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.Negative">
            <summary>
            <para> negative.</para>
            <para>Represents the following attribute in the schema: negative </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.DisplayXAxis">
            <summary>
            <para> displayXAxis.</para>
            <para>Represents the following attribute in the schema: displayXAxis </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.DisplayHidden">
            <summary>
            <para> displayHidden.</para>
            <para>Represents the following attribute in the schema: displayHidden </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.MinAxisType">
            <summary>
            <para> minAxisType.</para>
            <para>Represents the following attribute in the schema: minAxisType </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.MaxAxisType">
            <summary>
            <para> maxAxisType.</para>
            <para>Represents the following attribute in the schema: maxAxisType </para>
            </summary>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.RightToLeft">
            <summary>
            <para> rightToLeft.</para>
            <para>Represents the following attribute in the schema: rightToLeft </para>
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.#ctor">
            <summary>
            Initializes a new instance of the SparklineGroup class.
            </summary>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.#ctor(System.Collections.Generic.IEnumerable{DocumentFormat.OpenXml.OpenXmlElement})">
             <summary>
            Initializes a new instance of the SparklineGroup class with the specified child elements.
             </summary>
             <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.#ctor(DocumentFormat.OpenXml.OpenXmlElement[])">
            <summary>
            Initializes a new instance of the SparklineGroup class with the specified child elements.
            </summary>
            <param name="childElements">Specifies the child elements.</param>
        </member>
        <member name="M:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SparklineGroup class from outer XML.
            </summary>
            <param name="outerXml">Specifies the outer XML of the element.</param>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.SeriesColor">
            <summary>
            <para> SeriesColor.</para>
            <para> Represents the following element tag in the schema: x14:colorSeries </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.NegativeColor">
            <summary>
            <para> NegativeColor.</para>
            <para> Represents the following element tag in the schema: x14:colorNegative </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.AxisColor">
            <summary>
            <para> AxisColor.</para>
            <para> Represents the following element tag in the schema: x14:colorAxis </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.MarkersColor">
            <summary>
            <para> MarkersColor.</para>
            <para> Represents the following element tag in the schema: x14:colorMarkers </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.FirstMarkerColor">
            <summary>
            <para> FirstMarkerColor.</para>
            <para> Represents the following element tag in the schema: x14:colorFirst </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.LastMarkerColor">
            <summary>
            <para> LastMarkerColor.</para>
            <para> Represents the following element tag in the schema: x14:colorLast </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.HighMarkerColor">
            <summary>
            <para> HighMarkerColor.</para>
            <para> Represents the following element tag in the schema: x14:colorHigh </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.LowMarkerColor">
            <summary>
            <para> LowMarkerColor.</para>
            <para> Represents the following element tag in the schema: x14:colorLow </para>
            </summary>
            <remark>
            xmlns:x14 = http://schemas.microsoft.com/office/spreadsheetml/2009/9/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.Formula">
            <summary>
            <para> Formula.</para>
            <para> Represents the following element tag in the schema: xne:f </para>
            </summary>
            <remark>
            xmlns:xne = http://schemas.microsoft.com/office/excel/2006/main
            </remark>
        </member>
        <member name="P:DocumentFormat.OpenXml.Office2010.Excel.SparklineGroup.Sparklines">
            <summary>
            <para> Sparklines.</